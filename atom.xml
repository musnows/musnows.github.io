<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>慕雪的寒舍</title>
  
  <subtitle>雪下了一夜</subtitle>
  <link href="https://blog.musnow.top/atom.xml" rel="self"/>
  
  <link href="https://blog.musnow.top/"/>
  <updated>2024-02-02T02:31:39.000Z</updated>
  <id>https://blog.musnow.top/</id>
  
  <author>
    <name>慕雪年华</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【win】使用分区助手扩容C盘</title>
    <link href="https://blog.musnow.top/posts/3746722946/"/>
    <id>https://blog.musnow.top/posts/3746722946/</id>
    <published>2024-02-02T01:15:20.000Z</published>
    <updated>2024-02-02T02:31:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h2><p>如果你像我一样，用的是联想的笔记本，这3年内的联想笔记本都会出厂分盘（据我所知是这样的），C盘雷打不动的200GB，D盘中会存放一个原厂的驱动文件夹，包括你这台电脑的所有驱动。</p><p>但是，200GB很快就会被某些奇奇怪怪的软件缓存给撑满，即便我把微信和QQ两个软件的资料文件夹给转移到D盘了，C盘在用了几个月后就莫名其妙的只剩下50G甚至更少了，看着让人很是焦绿，还是给它扩容一下吧。</p><h2 id="分区助手"><a href="#分区助手" class="headerlink" title="分区助手"></a>分区助手</h2><p>windows是自带磁盘分区管理的，<code>右键我的电脑-属性-存储-磁盘管理</code>，这里能到你的系统里面的所有物理硬盘，和每个硬盘的分区情况，可以在这里对分区进行一定的调整。</p><p>但很遗憾的是，在这里并不能对C盘进行扩容操作，当你给D盘<code>压缩卷</code>后再右键C盘，会发现<code>扩展卷</code>按钮是灰色的，无法被点击，也就无法扩容。</p><p>这时候就需要使用第三方工具来操作了：<a href="https://www.disktool.cn/">傲梅分区助手、轻松备份、数据恢复(恢复之星)、远程控制（AnyViewer）等软件免费下载官网</a></p><blockquote><p>注意：之前在B站看过相关视频，有不少人评论说使用该工具导致系统盘内资料丢失的（虽然在我的几次搞机使用体验中并没有遇到）。为了保险起见，请先备份你的<strong>C盘所在物理盘</strong>内的所有文件后再进行操作！数据无价！<strong>备份，备份，备份</strong>！！</p></blockquote><p>下载软件后安装，安装完毕后打开软件会让你输入一个免费使用密码，这个密码一直是1122（至少一年没变过了，如果不行就去它们的公众号获取一下最新密码吧）</p><p>本次测试使用的是新版10.2版本。</p><p>进入软件后看到的界面和windows自带的磁盘管理类似，这里能看到原装1TB的固态分了一个C盘和一个D盘（下图中已经是我操作后的结果了，所以C盘是300GB）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/9247b21d9bbd6d8997a14dc33c912316.png" alt="image.png"></p><p>如果你想扩容C盘，右键红色框框区域的C盘，选择<code>调整/移动分区</code>，会打开如下界面。勾选<code>从(*)分区中划分空间给(C)</code>，此时右侧会出现一个下拉菜单，勾选D盘（一定不要勾选那两个<code>*</code>开头的保留分区），此时就可以输入你想给C盘扩容后的容量了，比如想把C盘扩容到300GB就输入300即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/c89b075a1e132a8adaca64af27a4b18c.png" alt="image.png"></p><p>再次提醒：进行下一步之前，请先备份C盘所在文件夹的资料文件！！！</p><p>作为示例，这里我输入C盘扩容到350GB</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/72abda5f856a99013ca91cee16406a4b.png" alt="image.png"></p><p>点击确定，会发现下方分区大小已经变化了，但实际上我们的操作还没提交，右上角可以看到提交按钮亮起，有三个操作需要进行</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/d0076d1aa4c517a429d324713be9b0d7.png" alt="image.png"></p><p>这三个操作分别是缩容D盘，移动分区，扩容C盘。这里显示的预期时间很夸张，但实际上15分钟左右就能完成。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/2ad8be24ca47afcb336e76c97e9e9220.png" alt="image.png"></p><p>此时点击执行，会让你选择在什么模式下操作，一般情况选择Windows PE模式即可。选择后点击确定，分区助手就会重启电脑并开始扩容操作。</p><p>再次提醒：这一步的确定后就没有回头路了！！！一定要备份哦！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/19bc8602625ff5e20b5d57c7ed8294c3.png" alt="image.png"></p><p>会先在软件内走个进度条，随后重启电脑进入PE模式操作，PE界面长下面这样。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/a70195203766f4672afd546e10a34eea.png" alt="image.png"></p><p>耐心等待他完成即可，分区助手会自动重启电脑回到windows。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>然后就搞定了！成功将C盘从200GB扩容到300GB，且两个盘的资料都在。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/be620570e1124c946d5b6c531992ae58.png" alt="image.png"></p><p>最后还是得上个提醒，虽然我这边实测能成功，但不代表你那边一定能保留资料！备份准没错哦。</p>]]></content>
    
    
    <summary type="html">使用分区助手扩容windows的C盘</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Artalk】可信域名未配置导致的跨域访问问题</title>
    <link href="https://blog.musnow.top/posts/1277415323/"/>
    <id>https://blog.musnow.top/posts/1277415323/</id>
    <published>2024-01-31T03:40:00.000Z</published>
    <updated>2024-01-31T13:11:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天折腾halo的时候，发现artalk出现跨域访问报错，内容如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access to fetch at &#x27;https://artk.musnow.top/api/stat&#x27; from origin &#x27;https://halo.musnow.top&#x27; has been blocked by CORS policy: The &#x27;Access-Control-Allow-Origin&#x27; header contains multiple values &#x27;, https://halo.musnow.top&#x27;, but only one is allowed. </span><br><span class="line">Have the server send the header with a valid value, or, if an opaque response serves your needs, set the request&#x27;s mode to &#x27;no-cors&#x27; to fetch the resource with CORS disabled.</span><br></pre></td></tr></table></figure><p>尝试在nginx里面加了一个跨域访问头，依旧没有解决这个问题</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;https://halo.musnow.top&#x27;</span> always;</span><br></pre></td></tr></table></figure><p>后来咨询其他老哥才知道，这是artalk内部可信域名配置的问题，不需要修改nginx配置文件。(记得把上方的nginx配置删掉)</p><p>我只添加了站点的可信域名，artalk系统设置里面还有一个可信域名配置</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/6d160c66af4d1c70cfb05cce383131f8.png" alt="image.png"></p><p>设置了之后需要重启artalk容器，才能让修改生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart artalk-go</span><br></pre></td></tr></table></figure><p>现在就OK了</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/8ca3eab60bfb00557e0284d19b668de8.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">artalk后台可信域名未配置导致的跨域访问问题</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Docker真好玩" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Docker%E7%9C%9F%E5%A5%BD%E7%8E%A9/"/>
    
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Docker" scheme="https://blog.musnow.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>【MySQL】内置函数</title>
    <link href="https://blog.musnow.top/posts/4252514363/"/>
    <id>https://blog.musnow.top/posts/4252514363/</id>
    <published>2024-01-30T07:45:00.000Z</published>
    <updated>2024-01-30T07:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>像编程语言一样，MySQL同样也提供了一部分内置函数供用户在SQL中进行调用。这些内置函数能简单处理一部分数据，避免我们在不同的用户层语言中进行逻辑编写。</p><h1 id="1-日期函数"><a href="#1-日期函数" class="headerlink" title="1.日期函数"></a>1.日期函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>current_date()</td><td>当前日期</td></tr><tr><td>current_time()</td><td>当前时间</td></tr><tr><td>current_timestamp()</td><td>当前日期和时间</td></tr><tr><td>now()</td><td>当前日期和时间（同上）</td></tr><tr><td>unix_timestamp()</td><td>当前时间戳数字</td></tr><tr><td>date(datetime)</td><td>返回datetime参数中的日期部分</td></tr><tr><td>date_add(date,interval d_value_type)</td><td>在date中添加日期或时间，interval后的参数可以是<code>year/month/day/hour/mintue/second</code></td></tr><tr><td>date_sub(date,interval d_value_type)</td><td>在date中减去日期或时间，interval后的参数可以是<code>year/month/day/hour/mintue/second</code></td></tr><tr><td>datediff(date1,date2)</td><td>计算两个日期的时间差，单位为天</td></tr><tr><td>date_format(date,format_string)</td><td>根据format_string字符串来格式化时间显示</td></tr><tr><td>year(date)</td><td>获取日期中的年份</td></tr><tr><td>month(date)</td><td>获取日期中的月份</td></tr><tr><td>day(date)</td><td>获取日期中的天</td></tr><tr><td>str_to_date(string,format_string)</td><td>字符串转时间</td></tr></tbody></table><p>下面挨个做个演示</p><h2 id="1-1-获取日期和时间"><a href="#1-1-获取日期和时间" class="headerlink" title="1.1 获取日期和时间"></a>1.1 获取日期和时间</h2><p>获取时间分为获取当前日期，获取当前时间，和获取当前日期+时间；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select current_time();</span><br><span class="line">+----------------+</span><br><span class="line">| current_time() |</span><br><span class="line">+----------------+</span><br><span class="line">| 14:27:49       |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select now();</span><br><span class="line">+---------------------+</span><br><span class="line">| now()               |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2024-01-30 14:27:53 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select current_date();</span><br><span class="line">+----------------+</span><br><span class="line">| current_date() |</span><br><span class="line">+----------------+</span><br><span class="line">| 2024-01-30     |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select current_timestamp();</span><br><span class="line">+---------------------+</span><br><span class="line">| current_timestamp() |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2024-01-30 14:30:39 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>经过测试可以发现，在MySQL中，<code>current_timestamp()</code>函数和<code>now()</code>函数的效果等效。</p><p>只有<code>UNIX_TIMESTAMP()</code>函数返回的才是时间戳的数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT UNIX_TIMESTAMP();</span><br><span class="line">+------------------+</span><br><span class="line">| UNIX_TIMESTAMP() |</span><br><span class="line">+------------------+</span><br><span class="line">|       1706596346 |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/f6e691162d0c2360f990ab378809588b.png" alt="image-20240130143435696"></p><h2 id="1-2-获取时间的部分值"><a href="#1-2-获取时间的部分值" class="headerlink" title="1.2 获取时间的部分值"></a>1.2 获取时间的部分值</h2><p>使用YEAR\MONTH\DAY函数从一个时间中提取日期的部分信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW()) <span class="keyword">AS</span> current_year;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW()) <span class="keyword">AS</span> current_month;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW()) <span class="keyword">AS</span> current_day;</span><br></pre></td></tr></table></figure><p>执行效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT YEAR(NOW()) AS current_year;</span><br><span class="line">+--------------+</span><br><span class="line">| current_year |</span><br><span class="line">+--------------+</span><br><span class="line">|         2024 |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; SELECT MONTH(NOW()) AS current_month;</span><br><span class="line">+---------------+</span><br><span class="line">| current_month |</span><br><span class="line">+---------------+</span><br><span class="line">|             1 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; SELECT DAY(NOW()) AS current_day;</span><br><span class="line">+-------------+</span><br><span class="line">| current_day |</span><br><span class="line">+-------------+</span><br><span class="line">|          30 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-3-时间运算"><a href="#1-3-时间运算" class="headerlink" title="1.3 时间运算"></a>1.3 时间运算</h2><p>MySQL中时间可以直接用加减进行运算，时间列和时间函数返回的时间之间可以通过大于小于来比较大小；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT NOW() + INTERVAL 1 DAY;</span><br><span class="line">+------------------------+</span><br><span class="line">| NOW() + INTERVAL 1 DAY |</span><br><span class="line">+------------------------+</span><br><span class="line">| 2024-01-31 14:49:57    |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>在大学数据库的考试中一般会给出一张表，存了学生的出生日期，让你筛选出年龄小于20岁的学生，此时就需要进行年份的提取和时间计算</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 假设学生表中是id,name,birth三个字段</span></span><br><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">year</span>(now()) <span class="operator">-</span> <span class="keyword">year</span>(birth)) <span class="operator">&lt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>下面演示表格中提到的<code>date_add/date_sub</code>运算函数的用法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在日期的基础上加上时间</span></span><br><span class="line"><span class="keyword">select</span> date_add(<span class="string">&#x27;2024-1-1&#x27;</span>,<span class="type">interval</span> <span class="number">2</span> <span class="keyword">month</span>);</span><br><span class="line"><span class="comment">-- 在日期的基础上减去时间</span></span><br><span class="line"><span class="keyword">select</span> date_sub(<span class="string">&#x27;2023-10-1&#x27;</span>, <span class="type">interval</span> <span class="number">2</span> <span class="keyword">day</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第二个参数可选的时间间隔</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span></span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select date_sub(&#x27;2023-10-1&#x27;, interval 2 day);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| date_sub(&#x27;2023-10-1&#x27;, interval 2 day) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2023-09-29                            |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select date_add(&#x27;2024-1-1&#x27;,interval 2 month);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| date_add(&#x27;2024-1-1&#x27;,interval 2 month) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2024-03-01                            |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>另外，MySQL中是允许日期中出现前导0的，依旧可以被正常识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select date_sub(&#x27;2023-01-01&#x27;, interval 2 day);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| date_sub(&#x27;2023-01-01&#x27;, interval 2 day) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2022-12-30                             |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>使用datediff函数计算两个日期的差值（日期要用单引号传入）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT DATEDIFF(&#x27;2022-01-30&#x27;, &#x27;2022-01-15&#x27;);</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| DATEDIFF(&#x27;2022-01-30&#x27;, &#x27;2022-01-15&#x27;) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">|                                   15 |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>具体例子：在msg表中查询两分钟内发布的消息，可以用<code>date_add</code>函数来实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> msg </span><br><span class="line"><span class="keyword">where</span> date_add(sendtime, <span class="type">interval</span> <span class="number">2</span> <span class="keyword">minute</span>) <span class="operator">&gt;</span> now();</span><br></pre></td></tr></table></figure><h2 id="1-4-日期格式化"><a href="#1-4-日期格式化" class="headerlink" title="1.4 日期格式化"></a>1.4 日期格式化</h2><p>使用date_format函数将时间格式化输出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在这个格式化字符串中，你可以把一些值给写死，比如将分钟和秒写死为0点0分；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y-%m-%d %H:00:00&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最终效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2024-01-30 14:59:33                    |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:00:00&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:00:00&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2024-01-30 14:00:00                    |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>年份Y可以为小y，此时只显示年份的后二位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 24-01-30 15:00:23                      |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-5-字符串转时间"><a href="#1-5-字符串转时间" class="headerlink" title="1.5 字符串转时间"></a>1.5 字符串转时间</h2><p><code>str_to_date</code>函数可以将给定的时间字符串和给定的字符串时间格式，转换为一个datetime类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> str_to_date(<span class="string">&#x27;2024-01-02 20:37:14&#x27;</span>, <span class="string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>);</span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%Y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%Y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| 2024-01-02 20:37:14                                     |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>如果你给定的格式化字符串和时间字符串不符合，则无法成功转换，结果为NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| NULL                                                    |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">1 row in set, 1 warning (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-6-其他参考函数"><a href="#1-6-其他参考函数" class="headerlink" title="1.6 其他参考函数"></a>1.6 其他参考函数</h2><p>以下是比较全的MySQL日期函数，可供参考</p><details><summary>点我查看</summary><p>原文链接：<a href="https://blog.csdn.net/qinshijangshan/article/details/72874667">MySQL之日期时间处理函数</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL日期时间处理函数</span></span><br><span class="line"><span class="comment">-- 当前日期：2017-05-12（突然发现今天512，是不是会拉防空警报）</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW() <span class="keyword">FROM</span> DUAL;<span class="comment">-- 当前日期时间：2017-05-12 11:41:47</span></span><br><span class="line"><span class="comment">-- 在MySQL里也存在和Oracle里类似的dual虚拟表：官方声明纯粹是为了满足select ... from...这一习惯问题，mysql会忽略对该表的引用。</span></span><br><span class="line"><span class="comment">-- 那么MySQL中就不用DUAL了吧。</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW();<span class="comment">-- 当前日期时间：2017-05-12 11:41:55</span></span><br><span class="line"><span class="comment">-- 除了 now() 函数能获得当前的日期时间外，MySQL 中还有下面的函数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:19:31</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>;<span class="comment">-- 2017-05-15 10:19:51</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>();<span class="comment">-- 2017-05-15 10:20:00</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>;<span class="comment">-- 2017-05-15 10:20:10</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:20:21(v4.0.6)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIMESTAMP</span>;<span class="comment">-- 2017-05-15 10:20:30(v4.0.6)</span></span><br><span class="line"><span class="comment">-- 这些日期时间函数，都等同于 now()。鉴于 now() 函数简短易记，建议总是使用 now()来替代上面列出的函数。</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE();<span class="comment">-- 当前日期时间：2017-05-12 11:42:03</span></span><br><span class="line"><span class="comment">-- sysdate() 日期时间函数跟 now() 类似，</span></span><br><span class="line"><span class="comment">-- 不同之处在于：now() 在执行开始时值就得到了;sysdate() 在函数执行时动态得到值。</span></span><br><span class="line"><span class="comment">-- 看下面的例子就明白了：</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW(), SLEEP(<span class="number">3</span>), NOW();</span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE(), SLEEP(<span class="number">3</span>), SYSDATE();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> CURDATE();<span class="comment">-- 当前日期：2017-05-12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>();<span class="comment">-- 当前日期：等同于 CURDATE()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>;<span class="comment">-- 当前日期：等同于 CURDATE()</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> CURTIME();<span class="comment">-- 当前时间：11:42:47</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>();<span class="comment">-- 当前时间：等同于 CURTIME()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>;<span class="comment">-- 当前时间：等同于 CURTIME()</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 获得当前 UTC 日期时间函数</span></span><br><span class="line"><span class="keyword">SELECT</span> UTC_TIMESTAMP(), UTC_DATE(), UTC_TIME()</span><br><span class="line"><span class="comment">-- MySQL 获得当前时间戳函数：current_timestamp, current_timestamp()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>, <span class="built_in">CURRENT_TIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:32:21 | 2017-05-15 10:32:21</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 日期时间 Extract（选取） 函数</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@dt</span> <span class="operator">=</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">DATE</span>(<span class="variable">@dt</span>);<span class="comment">-- 获取日期：2017-05-15</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIME</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取时间：10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取年份</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取月份</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取日</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取时</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取秒</span></span><br><span class="line"><span class="keyword">SELECT</span> MICROSECOND(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取毫秒</span></span><br><span class="line"><span class="keyword">SELECT</span> QUARTER(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取季度</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 20 (获取周)</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>, <span class="number">7</span>);<span class="comment">-- ****** 测试此函数在MySQL5.6下无效</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKOFYEAR(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 同week()</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFYEAR(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 135 (日期在年度中第几天)</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFMONTH(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 5 (日期在月度中第几天)</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFWEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 2 (日期在周中第几天；周日为第一天)</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKDAY(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKDAY(<span class="string">&#x27;2017-05-21 10:37:14.123456&#x27;</span>);<span class="comment">-- 6(与dayofweek()都表示日期在周的第几天，只是参考标准不同，weekday()周一为第0天，周日为第6天)</span></span><br><span class="line"><span class="keyword">SELECT</span> YEARWEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 201720(年和周)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">YEAR</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">MONTH</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">DAY</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">HOUR</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">MINUTE</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">SECOND</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(QUARTER <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(WEEK <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(YEAR_MONTH <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_HOUR <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_MINUTE <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 151037(日时分)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 15103714(日时分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 15103714123456(日时分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_MINUTE <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 1037(时分)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 103714(时分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 103714123456(日时分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MINUTE_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 3714(分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MINUTE_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 3714123456(分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(SECOND_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 14123456(秒毫秒)</span></span><br><span class="line"><span class="comment">-- MySQL Extract() 函数除了没有date(),time() 的功能外，其他功能一应具全。</span></span><br><span class="line"><span class="comment">-- 并且还具有选取‘day_microsecond&#x27; 等功能。</span></span><br><span class="line"><span class="comment">-- 注意这里不是只选取 day 和 microsecond，而是从日期的 day 部分一直选取到 microsecond 部分。</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> DAYNAME(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- Monday(返回英文星期)</span></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- May(返回英文月份)</span></span><br><span class="line"><span class="keyword">SELECT</span> LAST_DAY(<span class="string">&#x27;2016-02-01&#x27;</span>);<span class="comment">-- 2016-02-29 (返回月份中最后一天)</span></span><br><span class="line"><span class="keyword">SELECT</span> LAST_DAY(<span class="string">&#x27;2016-05-01&#x27;</span>);<span class="comment">-- 2016-05-31</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- DATE_ADD(date,INTERVAL expr type) 从日期加上指定的时间间隔</span></span><br><span class="line"><span class="comment">-- type参数可参考：http://www.w3school.com.cn/sql/func_date_sub.asp</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 表示：2018-05-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> QUARTER);<span class="comment">-- 表示：2017-08-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 表示：2017-06-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> WEEK);<span class="comment">-- 表示：2017-05-22 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 表示：2017-05-16 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span>);<span class="comment">-- 表示：2017-05-15 11:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span>);<span class="comment">-- 表示：2017-05-15 10:38:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span>);<span class="comment">-- 表示：2017-05-15 10:37:15.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> MICROSECOND);<span class="comment">-- 表示：2017-05-15 10:37:14.123457</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- DATE_SUB(date,INTERVAL expr type) 从日期减去指定的时间间隔</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 表示：2016-05-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> QUARTER);<span class="comment">-- 表示：2017-02-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 表示：2017-04-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> WEEK);<span class="comment">-- 表示：2017-05-08 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 表示：2017-05-14 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span>);<span class="comment">-- 表示：2017-05-15 09:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span>);<span class="comment">-- 表示：2017-05-15 10:36:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span>);<span class="comment">-- 表示：2017-05-15 10:37:13.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> MICROSECOND);<span class="comment">-- 表示：2017-05-15 10:37:14.123455</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 经特殊日期测试，DATE_SUB(date,INTERVAL expr type)可放心使用</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 前一天：2017-05-11</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">DAY</span>);<span class="comment">-- 后一天：2017-05-13</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 一个月前日期：2017-04-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 一个月后日期：2017-06-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 一年前日期：2016-05-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 一年后日期：20178-06-12</span></span><br><span class="line"><span class="comment">-- MySQL date_sub() 日期时间函数 和 date_add() 用法一致，并且可以用INTERNAL -1 xxx的形式互换使用；</span></span><br><span class="line"><span class="comment">-- 另外，MySQL 中还有两个函数 subdate(), subtime()，建议，用 date_sub() 来替代。</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 另类日期函数：period_add(P,N), period_diff(P1,P2)</span></span><br><span class="line"><span class="comment">-- 函数参数“P” 的格式为“YYYYMM” 或者 “YYMM”，第二个参数“N” 表示增加或减去 N month（月）。</span></span><br><span class="line"><span class="comment">-- MySQL period_add(P,N)：日期加/减去N月。</span></span><br><span class="line"><span class="keyword">SELECT</span> PERIOD_ADD(<span class="number">201705</span>,<span class="number">2</span>), PERIOD_ADD(<span class="number">201705</span>,<span class="number">-2</span>);<span class="comment">-- 201707  20170503</span></span><br><span class="line"><span class="comment">-- period_diff(P1,P2)：日期 P1-P2，返回 N 个月。</span></span><br><span class="line"><span class="keyword">SELECT</span> PERIOD_DIFF(<span class="number">201706</span>, <span class="number">201703</span>);<span class="comment">-- </span></span><br><span class="line"><span class="comment">-- datediff(date1,date2)：两个日期相减 date1 - date2，返回天数</span></span><br><span class="line"><span class="keyword">SELECT</span> DATEDIFF(<span class="string">&#x27;2017-06-05&#x27;</span>,<span class="string">&#x27;2017-05-29&#x27;</span>);<span class="comment">-- 7</span></span><br><span class="line"><span class="comment">-- TIMEDIFF(time1,time2)：两个日期相减 time1 - time2，返回 TIME 差值</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMEDIFF(<span class="string">&#x27;2017-06-05 19:28:37&#x27;</span>, <span class="string">&#x27;2017-06-05 17:00:00&#x27;</span>);<span class="comment">-- 02:28:37</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL日期转换函数</span></span><br><span class="line"><span class="keyword">SELECT</span> TIME_TO_SEC(<span class="string">&#x27;01:00:05&#x27;</span>); <span class="comment">-- 3605</span></span><br><span class="line"><span class="keyword">SELECT</span> SEC_TO_TIME(<span class="number">3605</span>);<span class="comment">-- 01:00:05</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL （日期、天数）转换函数：to_days(date), from_days(days)</span></span><br><span class="line"><span class="keyword">SELECT</span> TO_DAYS(<span class="string">&#x27;0000-00-00&#x27;</span>); <span class="comment">-- NULL </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_DAYS(<span class="string">&#x27;2017-06-05&#x27;</span>); <span class="comment">-- 736850</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_DAYS(<span class="number">0</span>);           <span class="comment">-- &#x27;0000-00-00&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_DAYS(<span class="number">736850</span>);      <span class="comment">-- &#x27;2017-06-05&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL Str to Date （字符串转换为日期）函数：str_to_date(str, format)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;06.05.2017 19:40:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %H:%i:%s&#x27;</span>);<span class="comment">-- 2017-06-05 19:40:30</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;06/05/2017&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>);                  <span class="comment">-- 2017-06-05</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;2017/12/3&#x27;</span>,<span class="string">&#x27;%Y/%m/%d&#x27;</span>)       <span class="comment">-- 2017-12-03</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;20:09:30&#x27;</span>, <span class="string">&#x27;%h:%i:%s&#x27;</span>)       <span class="comment">-- NULL(超过12时的小时用小写h，得到的结果为NULL)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 日期时间格式化</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_FORMAT(<span class="string">&#x27;2017-05-12 17:03:51&#x27;</span>, <span class="string">&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;</span>);<span class="comment">-- 2017年05月12日 17时03分51秒(具体需要什么格式的数据根据实际情况来;小写h为12小时制;)</span></span><br><span class="line"><span class="keyword">SELECT</span> TIME_FORMAT(<span class="string">&#x27;2017-05-12 17:03:51&#x27;</span>, <span class="string">&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;</span>);<span class="comment">-- 0000年00月00日 17时03分51秒(time_format()只能用于时间的格式化)</span></span><br><span class="line"><span class="comment">-- STR_TO_DATE()和DATE_FORMATE()为互逆操作</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 获得国家地区时间格式函数：get_format()</span></span><br><span class="line"><span class="comment">-- MySQL get_format() 语法：get_format(date|time|datetime, &#x27;eur&#x27;|&#x27;usa&#x27;|&#x27;jis&#x27;|&#x27;iso&#x27;|&#x27;internal&#x27;</span></span><br><span class="line"><span class="comment">-- MySQL get_format() 用法的全部示例：</span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%m.%d.%Y&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%d.%m.%Y&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;internal&#x27;</span>);   <span class="comment">-- &#x27;%Y%m%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;internal&#x27;</span>); <span class="comment">-- &#x27;%Y%m%d%H%i%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%h:%i:%s %p&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;internal&#x27;</span>);     <span class="comment">-- &#x27;%H%i%s&#x27;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 拼凑日期、时间函数：makdedate(year,dayofyear), maketime(hour,minute,second)</span></span><br><span class="line"><span class="keyword">SELECT</span> MAKEDATE(<span class="number">2017</span>,<span class="number">31</span>);   <span class="comment">-- &#x27;2017-01-31&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> MAKEDATE(<span class="number">2017</span>,<span class="number">32</span>);   <span class="comment">-- &#x27;2017-02-01&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> MAKETIME(<span class="number">19</span>,<span class="number">52</span>,<span class="number">35</span>);  <span class="comment">-- &#x27;19:52:35&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 时区（timezone）转换函数：convert_tz(dt,from_tz,to_tz)</span></span><br><span class="line"><span class="keyword">SELECT</span> CONVERT_TZ(<span class="string">&#x27;2017-06-05 19:54:12&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>); <span class="comment">-- 2017-06-05 11:54:12</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL （Unix 时间戳、日期）转换函数</span></span><br><span class="line"><span class="comment">-- unix_timestamp(), unix_timestamp(date), from_unixtime(unix_timestamp), from_unixtime(unix_timestamp,format)</span></span><br><span class="line"><span class="comment">-- 将具体时间时间转为timestamp</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP();<span class="comment">-- 当前时间的时间戳：1494815779</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP(<span class="string">&#x27;2017-05-15&#x27;</span>);<span class="comment">-- 指定日期的时间戳：1494777600</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP(<span class="string">&#x27;2017-05-15 10:37:14&#x27;</span>);<span class="comment">-- 指定日期时间的时间戳：1494815834</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 将时间戳转为具体时间</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_UNIXTIME(<span class="number">1494815834</span>);<span class="comment">-- 2017-05-15 10:37:14</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_UNIXTIME(<span class="number">1494815834</span>, <span class="string">&#x27;%Y年%m月%d日 %h时%分:%s秒&#x27;</span>);<span class="comment">-- 获取时间戳对应的格式化日期时间</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 时间戳（timestamp）转换、增、减函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIMESTAMP</span>(<span class="string">&#x27;2017-05-15&#x27;</span>);<span class="comment">-- 2017-05-15 00:00:00</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIMESTAMP</span>(<span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>, <span class="string">&#x27;01:01:01&#x27;</span>);<span class="comment">-- 2017-05-15 09:13:26</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>, <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 2017-05-16 08:12:25</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPADD(<span class="keyword">DAY</span>, <span class="number">1</span>, <span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>);<span class="comment">-- 2017-05-16 08:12:25; MySQL timestampadd() 函数类似于 date_add()。</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">YEAR</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-05-15&#x27;</span>);<span class="comment">-- -1</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">MONTH</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-06-15&#x27;</span>);<span class="comment">-- -11</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">DAY</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-06-15&#x27;</span>);<span class="comment">-- -351</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">HOUR</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -8432</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">MINUTE</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -505932</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">SECOND</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -30355945</span></span><br></pre></td></tr></table></figure></details><h2 id="1-7-自动赋值时间戳"><a href="#1-7-自动赋值时间戳" class="headerlink" title="1.7 自动赋值时间戳"></a>1.7 自动赋值时间戳</h2><p>官方文档：<a href="https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html">https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html</a></p><p>MySQL有时间函数，也可以在插入和操作数据的时候自动帮我们更新时间。下面是一个示例语句，在TIMESTAMP和DATETIME类型中都可以这么使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (</span><br><span class="line">  ts <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  dt DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>ON UPDATE</code>语句的含义为当行被更新的时候，就自动更新为当前时间（即更新时间）</p><p>举个具体的例子：用户表中，我们的一条记录可以有两个时间字段，一个是更新时间，即用户信息被用户修改后的时间（这个时间可以用来限制用户多久才能修改一次个人信息等操作），另外一个是插入时间，即用户注册的时间。</p><p>此时可以让MySQL来自动帮我们维护插入时间和更新时间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> your_table (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  data <span class="type">VARCHAR</span>(<span class="number">255</span>),</span><br><span class="line">  created_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  updated_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="2-字符串函数"><a href="#2-字符串函数" class="headerlink" title="2.字符串函数"></a>2.字符串函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>charset(str)</td><td>返回字符串的字符集</td></tr><tr><td>concat(str1,str2[,…])</td><td>拼接多个字符串</td></tr><tr><td>instr(str,substr)</td><td>返回substr在str中出现的位置，不存在则返回0</td></tr><tr><td>ucase(string)</td><td>字符串转大写</td></tr><tr><td>lcase(string)</td><td>字符串转小写</td></tr><tr><td>left(string,length)&#x2F;right(string,length)</td><td>从string的左边&#x2F;右边起取length个字符</td></tr><tr><td>length(string)</td><td>字符串长度</td></tr><tr><td>replace(str,search_str,replace_str)</td><td>将str中的replace_str部分替换为search_str</td></tr><tr><td>strcmp(str1,str2)</td><td>逐字符比较两个字符串的大小</td></tr><tr><td>substring(str,position [,length])</td><td>从str的position开始取length个字符</td></tr><tr><td>ltrim(strin)&#x2F;rtrim(str)&#x2F;trim(str)</td><td>去除字符串中的前空格或者后空格</td></tr></tbody></table><p>简单测试一下这些函数的使用吧</p><h2 id="2-1-查看字符串字符集"><a href="#2-1-查看字符串字符集" class="headerlink" title="2.1 查看字符串字符集"></a>2.1 查看字符串字符集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select charset(&quot;你好&quot;);</span><br><span class="line">+-------------------+</span><br><span class="line">| charset(&quot;你好&quot;)   |</span><br><span class="line">+-------------------+</span><br><span class="line">| utf8mb3           |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select charset(&quot;125412446&quot;);</span><br><span class="line">+----------------------+</span><br><span class="line">| charset(&quot;125412446&quot;) |</span><br><span class="line">+----------------------+</span><br><span class="line">| utf8mb3              |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select charset(name) from student;</span><br><span class="line">+---------------+</span><br><span class="line">| charset(name) |</span><br><span class="line">+---------------+</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">+---------------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-2-字符串拼接"><a href="#2-2-字符串拼接" class="headerlink" title="2.2 字符串拼接"></a>2.2 字符串拼接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select concat(&#x27;你好&#x27;,&#x27;，&#x27;,&#x27;今天天气不错&#x27;);</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">| concat(&#x27;你好&#x27;,&#x27;，&#x27;,&#x27;今天天气不错&#x27;)          |</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">| 你好，今天天气不错                          |</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-3-子字符串查询"><a href="#2-3-子字符串查询" class="headerlink" title="2.3 子字符串查询"></a>2.3 子字符串查询</h2><p>使用instr查询，在第一个参数中查询第二个参数的字符串。找到了子串后，返回起始位置的偏移量（并非下标），没有找到返回0。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select instr(&#x27;abcdef&#x27;,&#x27;bc&#x27;);</span><br><span class="line">+----------------------+</span><br><span class="line">| instr(&#x27;abcdef&#x27;,&#x27;bc&#x27;) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    2 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select instr(&#x27;abcdef&#x27;,&#x27;asdfa&#x27;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| instr(&#x27;abcdef&#x27;,&#x27;asdfa&#x27;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-4-字符串比较"><a href="#2-4-字符串比较" class="headerlink" title="2.4 字符串比较"></a>2.4 字符串比较</h2><p>和C语言中用的是同一个函数名strcmp；</p><ul><li>第一个字符串更大返回<code>1</code>；</li><li>第二个字符串更大返回<code>-1</code>；</li><li>两个字符串相同返回<code>0</code>（忽略大小写）；</li></ul><p>注意它的比较是根据字符的ASCII码来逐字符比较的，比如小写字母的ASCII码就更大，所以AB和ad比较的结果是负一。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;AB&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;AB&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                 0 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;aB&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;aB&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                 0 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;ad&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;ad&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                -1 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;ABC&#x27;);</span><br><span class="line">+--------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;ABC&#x27;) |</span><br><span class="line">+--------------------+</span><br><span class="line">|                 -1 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;ABcd&#x27;,&#x27;ABC&#x27;);</span><br><span class="line">+----------------------+</span><br><span class="line">| strcmp(&#x27;ABcd&#x27;,&#x27;ABC&#x27;) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>中文比较应该也是类似的逻辑，只不过中文编码这方面我不太懂，就不深入探究了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你好吗&#x27;);</span><br><span class="line">+------------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你好吗&#x27;)      |</span><br><span class="line">+------------------------------+</span><br><span class="line">|                           -1 |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你&#x27;);</span><br><span class="line">+------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你&#x27;)    |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你好&#x27;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你好&#x27;)     |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                         0 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;在吗&#x27;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;在吗&#x27;)     |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                        -1 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-5-大小写转换"><a href="#2-5-大小写转换" class="headerlink" title="2.5 大小写转换"></a>2.5 大小写转换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ucase(&#x27;adfasbasdf324r&#x27;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| ucase(&#x27;adfasbasdf324r&#x27;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| ADFASBASDF324R          |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select lcase(&#x27;ADSB3QRdsadsfweq2&#x27;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| lcase(&#x27;ADSB3QRdsadsfweq2&#x27;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">| adsb3qrdsadsfweq2          |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-6-截取字符串"><a href="#2-6-截取字符串" class="headerlink" title="2.6 截取字符串"></a>2.6 截取字符串</h2><p>left和right用于从字符串的左边或右边开始截取给定长度的串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select left(&#x27;123456&#x27;,2);</span><br><span class="line">+------------------+</span><br><span class="line">| left(&#x27;123456&#x27;,2) |</span><br><span class="line">+------------------+</span><br><span class="line">| 12               |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select right(&#x27;123456&#x27;,2);</span><br><span class="line">+-------------------+</span><br><span class="line">| right(&#x27;123456&#x27;,2) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 56                |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>对于中文而言也是截取两个汉字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select right(&#x27;这是一个测试&#x27;,2);</span><br><span class="line">+-------------------------------+</span><br><span class="line">| right(&#x27;这是一个测试&#x27;,2)       |</span><br><span class="line">+-------------------------------+</span><br><span class="line">| 测试                          |</span><br><span class="line">+-------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select left(&#x27;这是一个测试&#x27;,2);</span><br><span class="line">+------------------------------+</span><br><span class="line">| left(&#x27;这是一个测试&#x27;,2)       |</span><br><span class="line">+------------------------------+</span><br><span class="line">| 这是                         |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>然后还有substring函数，可以从给定位置截取字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select substring(&#x27;123456&#x27;,2,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substring(&#x27;123456&#x27;,2,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| 23                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-7-去除空格"><a href="#2-7-去除空格" class="headerlink" title="2.7 去除空格"></a>2.7 去除空格</h2><p>ltrim和rtrim用于去除字符串左侧或者右侧的空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ltrim(&#x27; 测试&#x27;);</span><br><span class="line">+------------------+</span><br><span class="line">| ltrim(&#x27; 测试&#x27;)   |</span><br><span class="line">+------------------+</span><br><span class="line">| 测试             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select rtrim(&#x27;右边空格测试              &#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| rtrim(&#x27;右边空格测试              &#x27;)       |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| 右边空格测试                              |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>trim是同时去除字符串左侧和右侧的空格，不会对字符串内部的空格做操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select trim(&#x27; 空 格 去除测试 &#x27;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| trim( &#x27;空 格 去除测试 &#x27;)       |</span><br><span class="line">+--------------------------------+</span><br><span class="line">| 空 格 去除测试                 |</span><br><span class="line">+--------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select trim(&#x27;空 格 去除测试&#x27;);</span><br><span class="line">+------------------------------+</span><br><span class="line">| trim(&#x27;空 格 去除测试&#x27;)       |</span><br><span class="line">+------------------------------+</span><br><span class="line">| 空 格 去除测试               |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="3-数学函数"><a href="#3-数学函数" class="headerlink" title="3.数学函数"></a>3.数学函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>abs(num)</td><td>绝对值</td></tr><tr><td>bin(decimal_num)</td><td>十进制转二进制</td></tr><tr><td>hex(decimal_num)</td><td>十进制转十六进制</td></tr><tr><td>conv(num,from_base,to_base)</td><td>进制转换</td></tr><tr><td>ceiling(num)</td><td>向上取整</td></tr><tr><td>floor(num)</td><td>向下取整</td></tr><tr><td>rand()</td><td>返回随机浮点数，范围<code>[0.0, 1.0)</code></td></tr><tr><td>mod(num,denominator)</td><td>取模，求余</td></tr><tr><td>format(num,dnum)</td><td>保留num的dnum位小数</td></tr></tbody></table><h2 id="3-1-绝对值"><a href="#3-1-绝对值" class="headerlink" title="3.1 绝对值"></a>3.1 绝对值</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select abs(-1241.12431);</span><br><span class="line">+------------------+</span><br><span class="line">| abs(-1241.12431) |</span><br><span class="line">+------------------+</span><br><span class="line">|       1241.12431 |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-2-进制转换"><a href="#3-2-进制转换" class="headerlink" title="3.2 进制转换"></a>3.2 进制转换</h2><p>十进制转二进制和十六进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select bin(100);</span><br><span class="line">+----------+</span><br><span class="line">| bin(100) |</span><br><span class="line">+----------+</span><br><span class="line">| 1100100  |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select hex(100);</span><br><span class="line">+----------+</span><br><span class="line">| hex(100) |</span><br><span class="line">+----------+</span><br><span class="line">| 64       |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>在任意进制中转换，源进制和目标进制都是通过数字传入，比如<code>2/8/10/16</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conv(目标数字,源进制,目标进制);</span><br></pre></td></tr></table></figure><p>测试如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">16</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">16</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">16</span>,<span class="number">10</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">16</span>,<span class="number">10</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">256</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">10</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">10</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure><h2 id="3-3-向下和向上取整"><a href="#3-3-向下和向上取整" class="headerlink" title="3.3 向下和向上取整"></a>3.3 向下和向上取整</h2><p>向下取整和向上取整是基于小数的</p><ul><li>向下取整：不管小数有几位，都去除小数，整数部分不变；</li><li>向上取整：不管小数有几位，都去除小数，并把整数部分加一；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ceiling(99);</span><br><span class="line">+-------------+</span><br><span class="line">| ceiling(99) |</span><br><span class="line">+-------------+</span><br><span class="line">|          99 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select floor(99.1);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(99.1) |</span><br><span class="line">+-------------+</span><br><span class="line">|          99 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ceiling(99.2);</span><br><span class="line">+---------------+</span><br><span class="line">| ceiling(99.2) |</span><br><span class="line">+---------------+</span><br><span class="line">|           100 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-4-模运算"><a href="#3-4-模运算" class="headerlink" title="3.4 模运算"></a>3.4 模运算</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mod</span>(a,b); <span class="comment">-- 等价于 a/b 的余数</span></span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; SELECT MOD(17, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(17, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          2 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; SELECT MOD(15, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(15, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          0 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; SELECT MOD(13, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(13, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          3 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-5-小数格式化"><a href="#3-5-小数格式化" class="headerlink" title="3.5 小数格式化"></a>3.5 小数格式化</h2><p>使用format函数，第二个参数指定保留几位小数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select format(3.1415,2);</span><br><span class="line">+------------------+</span><br><span class="line">| format(3.1415,2) |</span><br><span class="line">+------------------+</span><br><span class="line">| 3.14             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-6-获取随机数"><a href="#3-6-获取随机数" class="headerlink" title="3.6 获取随机数"></a>3.6 获取随机数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select rand();</span><br><span class="line">+--------------------+</span><br><span class="line">| rand()             |</span><br><span class="line">+--------------------+</span><br><span class="line">| 0.5338426274562652 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select rand();</span><br><span class="line">+--------------------+</span><br><span class="line">| rand()             |</span><br><span class="line">+--------------------+</span><br><span class="line">| 0.7618099523352552 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="4-其他函数"><a href="#4-其他函数" class="headerlink" title="4.其他函数"></a>4.其他函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>user()</td><td>查询当前用户</td></tr><tr><td>database()</td><td>查询当前所在数据库</td></tr><tr><td>password(str)</td><td>对密码进行加密</td></tr><tr><td>md5(str)</td><td>计算字符串的md5</td></tr><tr><td>ifnull(val1,val2)</td><td>如果val1为null，返回val2，否则返回val1</td></tr></tbody></table><p>这里只对ifnull函数做个测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ifnull(null,&#x27;124&#x27;);</span><br><span class="line">+--------------------+</span><br><span class="line">| ifnull(null,&#x27;124&#x27;) |</span><br><span class="line">+--------------------+</span><br><span class="line">| 124                |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ifnull(&#x27;aba&#x27;,&#x27;124&#x27;);</span><br><span class="line">+---------------------+</span><br><span class="line">| ifnull(&#x27;aba&#x27;,&#x27;124&#x27;) |</span><br><span class="line">+---------------------+</span><br><span class="line">| aba                 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ifnull(&#x27;&#x27;,&#x27;124&#x27;);</span><br><span class="line">+------------------+</span><br><span class="line">| ifnull(&#x27;&#x27;,&#x27;124&#x27;) |</span><br><span class="line">+------------------+</span><br><span class="line">|                  |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>关于MySQL内置函数的章节就这些了，如果后续遇到本文没有记录的函数，会更新本文！</p>]]></content>
    
    
    <summary type="html">对于MySQL内置函数的相关介绍</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【MySQL】用户管理</title>
    <link href="https://blog.musnow.top/posts/1572064315/"/>
    <id>https://blog.musnow.top/posts/1572064315/</id>
    <published>2024-01-30T01:40:00.000Z</published>
    <updated>2024-01-30T03:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>用户管理是mysql权限控制的重要一环。</p><h1 id="1-MySQL的用户表"><a href="#1-MySQL的用户表" class="headerlink" title="1.MySQL的用户表"></a>1.MySQL的用户表</h1><p>在MySQL数据库中，所有的用户都存在系统数据库mysql的user表内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">| Host      | User        | authentication_string |</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">| localhost | mariadb.sys |                       |</span><br><span class="line">| localhost | root        | invalid               |</span><br><span class="line">| localhost | mysql       | invalid               |</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">3 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>因为我这是一个刚刚初始化的数据库，内部只有系统自带的几个用户。当我们使用<code>mysql -uroot</code>链接数据库时，其实就是使用了root用户。默认情况下root用户没有密码，所以<code>authentication_string</code>字段显示invalid；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> <span class="keyword">user</span>; <span class="comment">-- 查看表的结构</span></span><br></pre></td></tr></table></figure><p>对这张表里的字段做一个简单的解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">host：用户可以从什么主机上链接数据库，localhost代表只允许本地链接</span><br><span class="line">user：用户名</span><br><span class="line">password：旧版本使用的密码字段</span><br><span class="line">authentication_string：新版本使用的密码字段，用户密码用password函数加密后的字符串；</span><br><span class="line">很多很多以_priv结尾的字段：用户权限记录</span><br></pre></td></tr></table></figure><p>用户和权限管理的存在，让我们可以对MySQL中不同的表进行一定的权限风控，避免某个用户的误操作让整个数据库产生不可逆的损失。</p><h1 id="2-用户管理"><a href="#2-用户管理" class="headerlink" title="2.用户管理"></a>2.用户管理</h1><h2 id="2-1-创建用户"><a href="#2-1-创建用户" class="headerlink" title="2.1 创建用户"></a>2.1 创建用户</h2><p>在MySQL中创建用户的语法如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;登陆主机或IP&#x27;</span></span><br><span class="line">identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; create user &#x27;mu&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br></pre></td></tr></table></figure><p>这里我使用了<code>%</code>作为登录主机，其等价于IP层面理解的<code>0.0.0.0</code>，即该用户允许任何来源地的链接。</p><p>再次查询用户表，可以看到此时mu用户是有<code>authentication_string</code>字段的，其值是通过password函数加密后的123456；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| Host      | User        | authentication_string                     |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| localhost | mariadb.sys |                                           |</span><br><span class="line">| localhost | root        | invalid                                   |</span><br><span class="line">| localhost | mysql       | invalid                                   |</span><br><span class="line">| %         | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">4 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>我们也可以自行调用password函数，可以看到输出值和上表中的值一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; select password(&#x27;123456&#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| password(&#x27;123456&#x27;)                        |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>此时想用这个新用户进行登录，在linux的命令行中输入如下命令进行登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u用户名 -p密码</span><br></pre></td></tr></table></figure><blockquote><p>如果你现在处于Linux的子用户，登录MySQL的root用户需要sudo权限，但登录新创建的MySQL用户是不需要sudo的。</p></blockquote><p>示例如下，登录MySQL后可以用<code>select user();</code>语句查看当前登录的用户是谁。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">❯ mysql -umu -p123456</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 35</span><br><span class="line">Server version: 10.6.16-MariaDB-0ubuntu0.22.04.1 Ubuntu 22.04</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.    </span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select user();</span><br><span class="line">+--------------+</span><br><span class="line">| user()       |</span><br><span class="line">+--------------+</span><br><span class="line">| mu@localhost |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-2-删除用户"><a href="#2-2-删除用户" class="headerlink" title="2.2 删除用户"></a>2.2 删除用户</h2><p>只有高权限用户或者root用户才能删除其他用户。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果在传入用户名时不提供主机名，则主机名默认为<code>%</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>;</span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; drop user &#x27;mu&#x27;@&#x27;192.168.1.30&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br></pre></td></tr></table></figure><h3 id="为什么在删除用户的时候需要指定主机名？"><a href="#为什么在删除用户的时候需要指定主机名？" class="headerlink" title="为什么在删除用户的时候需要指定主机名？"></a>为什么在删除用户的时候需要指定主机名？</h3><p>为什么在删除用户的时候需要指定主机名？因为同一个用户名，不同主机名是可以创建多个的，MySQL并没有限制一个用户名只能创建一条记录。</p><p>比如我们可以允许<strong>张三</strong>在IP1和IP2登录，这样就能创建两条用户记录，这两条用户记录的用户名都是张三，但可以有不同的登录来源host和不同的密码。这样我们可以控制单个用户在不同主机上的不同权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; create user &#x27;mu&#x27;@&#x27;192.168.1.30&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">| Host         | User        | authentication_string                     |        </span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">| localhost    | mariadb.sys |                                           |        </span><br><span class="line">| localhost    | root        | invalid                                   |        </span><br><span class="line">| localhost    | mysql       | invalid                                   |        </span><br><span class="line">| %            | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |        </span><br><span class="line">| 192.168.1.30 | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |        </span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">5 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><h2 id="2-3-设置用户密码"><a href="#2-3-设置用户密码" class="headerlink" title="2.3 设置用户密码"></a>2.3 设置用户密码</h2><p>设置当前用户的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password<span class="operator">=</span>password(<span class="string">&#x27;新密码&#x27;</span>);</span><br></pre></td></tr></table></figure><p>修改特定用户的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span><span class="operator">=</span>password(<span class="string">&#x27;新密码&#x27;</span>);</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; set password for &#x27;mu&#x27;@&#x27;%&#x27;=password(&#x27;654321&#x27;);</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| Host      | User        | authentication_string                     |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| localhost | mariadb.sys |                                           |</span><br><span class="line">| localhost | root        | invalid                                   |</span><br><span class="line">| localhost | mysql       | invalid                                   |</span><br><span class="line">| %         | mu          | *2A032F7C5BA932872F0F045E0CF6B53CF702F2C5 |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">4 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><h2 id="2-4-命令汇总小结"><a href="#2-4-命令汇总小结" class="headerlink" title="2.4 命令汇总小结"></a>2.4 命令汇总小结</h2><p>在我的实际使用中，最常用的用户管理就是在配置需要使用MySQL数据库的docker时的操作了。需要给一个新的docker设置新的数据库，并创建一个用户给这个docker来操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果是docker安装的MySQL</span></span><br><span class="line"><span class="comment">-- 需要先在Linux系统中进入MySQL容器的终端里面</span></span><br><span class="line">docker <span class="keyword">exec</span> <span class="operator">-</span>it 容器名 <span class="operator">/</span>bin<span class="operator">/</span>sh</span><br><span class="line"><span class="comment">-- 在终端命令行中执行如下命令</span></span><br><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p密码</span><br><span class="line"><span class="comment">-- 进入MySQL命令行后，创建数据库和用户</span></span><br><span class="line"><span class="keyword">create</span> database 数据库名字;</span><br><span class="line"><span class="comment">-- 数据库名字要和上面创建的这个数据库对应</span></span><br><span class="line"><span class="comment">-- 给定新表的所有权限到新用户上</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;用户的密码&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> 数据库名字.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="3-权限管理"><a href="#3-权限管理" class="headerlink" title="3.权限管理"></a>3.权限管理</h1><h2 id="3-1-权限列表"><a href="#3-1-权限列表" class="headerlink" title="3.1 权限列表"></a>3.1 权限列表</h2><p>MySQL数据库提供的权限非常细致，列表如下</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/bc621d3a1fada1faa98c2c0303df0890.png" alt="image-20240130103510001"></p><h2 id="3-2-给用户授权"><a href="#3-2-给用户授权" class="headerlink" title="3.2 给用户授权"></a>3.2 给用户授权</h2><p>授权的语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库.对象名 </span><br><span class="line"><span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span> [identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>]</span><br></pre></td></tr></table></figure><p>如果需要授予多个权限，用逗号分隔。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">delete</span> <span class="keyword">on</span> 数据库.对象名 </span><br><span class="line"><span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span> [identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>]</span><br></pre></td></tr></table></figure><p>如果想授予所有权限，可以使用<code>all</code>，或者<code>all privileges</code>，二者都代表所有权限，没有区别。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> [privileges] <span class="keyword">on</span> ... </span><br></pre></td></tr></table></figure><p>几点说明</p><ul><li>命令中的<code>[identified by &#39;密码&#39;]</code>是可选项，如果用户存在，则修改其密码。如果用户不存在，则以该密码创建用户。</li><li><code>数据库.对象名</code>可使用<code>*.*</code> ，代表当前MySQL中的所有数据对象；</li><li><code>数据库.*</code>代表某个数据库中的所有对象；</li></ul><h3 id="授权示例"><a href="#授权示例" class="headerlink" title="授权示例"></a>授权示例</h3><p>刚创建的用户是没有任何权限的，如下所示，我刚刚创建的mu用户并没有看到原本已有的<code>stu_test</code>数据库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select user();</span><br><span class="line">+--------------+</span><br><span class="line">| user()       |</span><br><span class="line">+--------------+</span><br><span class="line">| mu@localhost |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>使用如下命令给用户授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> stu_test.student <span class="keyword">to</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>授权之后，mu用户就能看到这个表了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| stu_test           |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>mu用户可以进行查询操作，但是不能删改student表，操作会被数据库拒绝。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use stu_test;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [stu_test]&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | 张三   |</span><br><span class="line">|    2 | 李四   |</span><br><span class="line">|    3 | 王五   |</span><br><span class="line">|    4 | 赵六   |</span><br><span class="line">|    5 | 刘七   |</span><br><span class="line">+------+--------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; insert into student values (6,&#x27;王璐&#x27;);</span><br><span class="line">ERROR 1142 (42000): INSERT command denied to user &#x27;mu&#x27;@&#x27;localhost&#x27; for table `stu_test`.`student`</span><br></pre></td></tr></table></figure><p>再次给予更新和删除的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">update</span>,<span class="keyword">delete</span>,<span class="keyword">insert</span> <span class="keyword">on</span> stu_test.student <span class="keyword">to</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时mu用户就能进行插入和删除等操作了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; insert into student values (6,&#x27;王璐&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; delete from student where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.007 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h3><p>如果发现赋予权限后用户还是不能执行某些操作，可以用如下命令刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="3-3-回收权限"><a href="#3-3-回收权限" class="headerlink" title="3.3 回收权限"></a>3.3 回收权限</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库.对象名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span>;</span><br></pre></td></tr></table></figure><p>比如回收mu用户对于student表的插入权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">insert</span> <span class="keyword">on</span> stu_test.student <span class="keyword">from</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时mu用户又不能进行插入操作了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; insert into student values (7,&#x27;你好&#x27;);</span><br><span class="line">ERROR 1142 (42000): INSERT command denied to user &#x27;mu&#x27;@&#x27;localhost&#x27; for table `stu_test`.`student`</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>MySQL中用户管理的基本操作就是这些了。在实际项目中，用户管理是数据库安全性的重要一环，得多加注意。</p>]]></content>
    
    
    <summary type="html">mysql和mariadb中用户管理的相关内容</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【解决】WSL2中安装Cuda遇到/usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link</title>
    <link href="https://blog.musnow.top/posts/2859840121/"/>
    <id>https://blog.musnow.top/posts/2859840121/</id>
    <published>2024-01-29T10:00:00.000Z</published>
    <updated>2024-02-01T07:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>慕雪遇到的情况是wsl2安装的ubuntu22.04在apt安装软件的时候就会出现这个报错，无论安装什么软件都会有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ldconfig.real: /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link</span><br></pre></td></tr></table></figure><h1 id="博客参考"><a href="#博客参考" class="headerlink" title="博客参考"></a>博客参考</h1><p>网上原有的解决方法是：<br>将<code>/usr/lib/wsl/lib</code>中的文件软连接到<code>/usr/lib/wsl/lib2</code>中。</p><p>该方法会导致后续出现</p><ul><li>问题1：NVIDIA-SMI couldn’t find libnvidia-ml.so library in your system.</li><li>问题2：error code is libcuda.so: cannot open shared object file: No such file or directory</li></ul><p>我的解决方法是：删除或备份<code>/usr/lib/wsl/lib</code>中的<code>libcuda.so</code>与<code>libcuda.so.1</code>，然后建立对<code>libcuda.so.1.1</code>的软连接。</p><p>注意，cp备份原本的时候不能直接备份到<code>/usr/lib/wsl/lib/</code>目录中，因为下一次启动时这个目录会被系统自动处理，内部的<code>.bak</code>文件会被删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份原本的</span></span><br><span class="line">sudo <span class="built_in">cp</span> /usr/lib/wsl/lib/libcuda.so  ~/libcuda.so.bak</span><br><span class="line">sudo <span class="built_in">cp</span> /usr/lib/wsl/lib/libcuda.so.1 ~/libcuda.so.1.bak</span><br><span class="line"><span class="comment"># 删除原本的</span></span><br><span class="line">sudo <span class="built_in">rm</span> -f /usr/lib/wsl/lib/libcuda.so </span><br><span class="line">sudo <span class="built_in">rm</span> -f /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line"><span class="comment"># 进行软连接</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib/wsl/lib/libcuda.so.1.1 /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib/wsl/lib/libcuda.so.1 /usr/lib/wsl/lib/libcuda.so</span><br></pre></td></tr></table></figure><p>修改后的效果如下，<code>libcuda.so</code>和<code>libcuda.so.1</code>实际上都指向<code>libcuda.so.1.1</code>；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">❯ ll</span><br><span class="line">total 216M</span><br><span class="line">-r-xr-xr-x 1 root root  11M Jan 13 06:30 libcudadebugger.so.1</span><br><span class="line">lrwxrwxrwx 1 root root   29 Feb  1 15:52 libcuda.so -&gt; /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line">lrwxrwxrwx 1 root root   31 Feb  1 15:52 libcuda.so.1 -&gt; /usr/lib/wsl/lib/libcuda.so.1.1</span><br><span class="line">-r-xr-xr-x 1 root root 155K Jan 13 06:30 libcuda.so.1.1</span><br></pre></td></tr></table></figure><h1 id="原文版权说明"><a href="#原文版权说明" class="headerlink" title="原文版权说明"></a>原文版权说明</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</span><br><span class="line">本文链接：https://blog.csdn.net/pl23k/article/details/131336220</span><br></pre></td></tr></table></figure><p>同时可以参考：<a href="https://kira-96.github.io/posts/wsl-libcuda.so.1-is-not-a-symbolic-link-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">WSL libcuda.so.1 is not a symbolic link 的解决方法 | ✨kiraの博客</a></p>]]></content>
    
    
    <summary type="html">WSL2中安装Cuda遇到/usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link错误</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>【SQL】过程化SQL</title>
    <link href="https://blog.musnow.top/posts/3614589784/"/>
    <id>https://blog.musnow.top/posts/3614589784/</id>
    <published>2024-01-29T08:45:00.000Z</published>
    <updated>2024-01-29T08:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>课程基于 <strong>高等教育出版社《数据库系统概论（第6版）》王珊、杜小勇、陈红</strong></p><h2 id="过程化SQL"><a href="#过程化SQL" class="headerlink" title="过程化SQL"></a>过程化SQL</h2><blockquote><p>相关内容在书本的 P250</p></blockquote><p>过程化SQL是对基本SQL的扩展，在其基础上添加了一些控制过程的语句。</p><p>过程化SQL的<strong>基本结构是块</strong>，每个块可以包含定义部分和执行部分，块与块之间可以相互嵌套；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 定义部分</span></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">变量、常量、游标、异常等</span><br><span class="line"><span class="comment">-- 执行部分</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SQL语句、过程化SQL控制语句</span></span><br><span class="line">EXCEPTION <span class="comment">-- 遇到不能继续执行情况称为异常</span></span><br><span class="line"><span class="comment">-- 异常处理部分</span></span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 变量定义</span></span><br><span class="line">变量名 数据类型 [[<span class="keyword">NOT</span> <span class="keyword">NULL</span>]:<span class="operator">=</span>初值表达式]</span><br><span class="line">变量名 数据类型 [[<span class="keyword">NOT</span> <span class="keyword">NULL</span>] 初值表达式]</span><br><span class="line"><span class="comment">-- 变量赋值</span></span><br><span class="line">变量名:<span class="operator">=</span>表达式</span><br><span class="line"><span class="comment">-- 常量定义</span></span><br><span class="line">常量名 数据类型 CONSTANT:<span class="operator">=</span>常量表达式 <span class="comment">-- 常量必须要在定义的时候赋值，且后续不可以修改</span></span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p>IF语句可以嵌套</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">IF 条件 <span class="keyword">THEN</span></span><br><span class="line"><span class="comment">-- 条件为真时执行的操作</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"></span><br><span class="line">IF 条件 <span class="keyword">THEN</span></span><br><span class="line"><span class="comment">-- 条件为真时执行</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="comment">-- 条件为假时执行</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br></pre></td></tr></table></figure><h3 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h3><h4 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个循环体没有类似<code>while(条件)</code>​一样的循环终止，而是一个死循环，一般的关系型数据库都会提供EXIT\BREAK\LEAVE等语句来退出这个循环</p><h4 id="WHILE循环"><a href="#WHILE循环" class="headerlink" title="WHILE循环"></a>WHILE循环</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHILE 条件 LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个就是我们编程语言中常用的WHILE循环了，没啥好说的。而且同样支持提前退出的语句。</p><h4 id="FOR-LOOP"><a href="#FOR-LOOP" class="headerlink" title="FOR-LOOP"></a>FOR-LOOP</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> count <span class="keyword">IN</span> [REVERSE] bound1 .. bound2 LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个循环体的基本步骤：将count变量设置为循环下界bound1，检查他是否小于上界bound2，每次循环count+1；</p><p>当指定REVERSE的时候，将count设置为bound2，判断它是否大于下界bound1（反向迭代），每次循环count-1；</p><hr><p>下面是一个示例，遍历PC表中的price字段，并将其speed大于pspeed部分求和</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> getprice <span class="keyword">IN</span> (<span class="keyword">select</span> price <span class="keyword">from</span> PC <span class="keyword">where</span> speed<span class="operator">&gt;</span>pspeed) LOOP</span><br><span class="line">   mCount:<span class="operator">=</span> mCount <span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">   total:<span class="operator">=</span> total<span class="operator">+</span> getprice; </span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><h2 id="游标的概念和使用过程"><a href="#游标的概念和使用过程" class="headerlink" title="游标的概念和使用过程"></a>游标的概念和使用过程</h2><blockquote><p>游标的概念 、使用过程   p253</p></blockquote><p>在过程化SQL中，如果SELECT语句只返回一条记录，可以将该结果存放到变量中，当查询返回多条记录的时候，就要使用用表对结果集进行处理。</p><p>一个游标和一个SQL语句相关联。</p><h3 id="使用游标的步骤"><a href="#使用游标的步骤" class="headerlink" title="使用游标的步骤"></a>使用游标的步骤</h3><h4 id="1-声明-x2F-定义游标"><a href="#1-声明-x2F-定义游标" class="headerlink" title="1.声明&#x2F;定义游标"></a>1.声明&#x2F;定义游标</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> 游标名 [(参数<span class="number">1</span> 数据类型,参数<span class="number">2</span> 数据类型,...)]</span><br><span class="line"><span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </span><br><span class="line"><span class="keyword">SELECT</span> 语句;</span><br></pre></td></tr></table></figure><p>定义游标仅仅是一条说明性语句，这里的SELECT语句并没有被立刻执行</p><h4 id="2-打开游标"><a href="#2-打开游标" class="headerlink" title="2.打开游标"></a>2.打开游标</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">OPEN</span> 游标名 [(参数<span class="number">1</span> 数据类型,参数<span class="number">2</span> 数据类型,...)];</span><br></pre></td></tr></table></figure><p>打开游标的时候会执行对应的SELECT语句，并把查询结果取到缓冲区中。此时游标处于活动状态，指针指向查询结果集中的第一条记录。</p><h4 id="3-使用游标"><a href="#3-使用游标" class="headerlink" title="3.使用游标"></a>3.使用游标</h4><p>推进游标并读取当前记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FETCH</span> 游标名 <span class="keyword">INTO</span> 变量<span class="number">1</span>[,变量<span class="number">2</span>,....];</span><br></pre></td></tr></table></figure><p>其中变量必须和SELECT语句中的目标列表达式具有一一对应关系</p><p>用FETCH语句将游标指针向前推进一条记录，同时将缓冲区中的记录取出送至变量供过程化SQL进行进一步处理。通过内环指向FETCH语句逐条取走结果集中的行进行处理。</p><h4 id="4-关闭游标"><a href="#4-关闭游标" class="headerlink" title="4.关闭游标"></a>4.关闭游标</h4><p>释放结果集占用的缓冲区和其他资源</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CLOSE</span> 游标名;</span><br></pre></td></tr></table></figure><p>被关闭的游标可以被再次打开，此时会重新再次执行一次SELECT语句，两次的结果并不一定相同。</p><h2 id="存储过程（自定义函数）"><a href="#存储过程（自定义函数）" class="headerlink" title="存储过程（自定义函数）"></a>存储过程（自定义函数）</h2><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">PROCEDURE</span> 过程名([</span><br><span class="line">[<span class="keyword">IN</span><span class="operator">|</span><span class="keyword">OUT</span><span class="operator">|</span><span class="keyword">INOUT</span>] 参数<span class="number">1</span> 数据类型,</span><br><span class="line">[<span class="keyword">IN</span><span class="operator">|</span><span class="keyword">OUT</span><span class="operator">|</span><span class="keyword">INOUT</span>] 参数<span class="number">2</span> 数据类型,</span><br><span class="line">...</span><br><span class="line">])</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="operator">&lt;</span>过程块<span class="keyword">SQL</span><span class="operator">&gt;</span>; <span class="comment">-- 这里的过程块SQL就是上面提到的过程化SQL的一个块</span></span><br></pre></td></tr></table></figure><p>存储过程提供了IN,OUT,INOUT三种参数模式，分别是入参、输出参数、输入输出参数。不声明参数类型的时候默认是IN类型。</p><ul><li>输入参数需要手动传入</li><li>输出参数不需要手动传入，而是以返回值返回</li><li>输入输出参数调用的时候需要传入初值，还会返回一个新的值</li></ul><p>如果是输出参数，则需要一个变量来存放输出后的值。</p><h4 id="示例-实验2中的题目"><a href="#示例-实验2中的题目" class="headerlink" title="示例-实验2中的题目"></a>示例-实验2中的题目</h4><p>在PC表中，将某一速度（整型）作为输入参数，求大于该速度的PC机的平均价格。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- real是浮点型</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR REPLACE</span> <span class="keyword">FUNCTION</span> Meanprice (<span class="keyword">in</span> pspeed <span class="type">int</span>, <span class="keyword">out</span> mean <span class="type">real</span>) </span><br><span class="line"><span class="keyword">AS</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">DECLARE</span> getprice <span class="type">INT</span>; mCount <span class="type">INT</span>; total <span class="type">INT</span>;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">mean:=<span class="number">0</span>; mCount:=<span class="number">0</span>;total:=<span class="number">0</span>; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">FOR</span> getprice <span class="keyword">IN</span> <span class="keyword">select</span> price <span class="keyword">from</span> PC </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">where</span> speed&gt;pspeed</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">LOOP</span></span></span><br><span class="line"><span class="language-pgsql">   mCount:= mCount +<span class="number">1</span>;</span></span><br><span class="line"><span class="language-pgsql">   total:= total+ getprice; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span> <span class="keyword">LOOP</span>;</span></span><br><span class="line"><span class="language-pgsql">mean:= total/ mCount; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>;</span></span><br><span class="line"><span class="language-pgsql">$$</span> <span class="keyword">LANGUAGE</span> plpgsql;</span><br></pre></td></tr></table></figure><h3 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> [<span class="keyword">PROCEDURE</span>] 过程名([参数<span class="number">1</span>,参数<span class="number">2</span>,....]);</span><br><span class="line">PERFROM [<span class="keyword">PROCEDURE</span>] 过程名([参数<span class="number">1</span>,参数<span class="number">2</span>,....]); <span class="comment">-- 等价</span></span><br></pre></td></tr></table></figure><h3 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h3><p>存储过程可以重命名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> 过程名 <span class="keyword">RENAME</span> <span class="keyword">TO</span> 新名字;</span><br></pre></td></tr></table></figure><p>可以重新编译一个存储过程</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> 过程名 COMPLIE;</span><br></pre></td></tr></table></figure><p>删除存储过程</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">PROCEDURE</span> 过程名;</span><br></pre></td></tr></table></figure><h3 id="存储过程的好处"><a href="#存储过程的好处" class="headerlink" title="存储过程的好处"></a>存储过程的好处</h3><p>存储过程在定义的时候就进行了SQL的语法分析，而普通执行SQL每次都会重新进行语法分析</p><p>存储过程降低了客户机和服务器之间的通信量，因为存储过程中可能包含多条SQL，客户机不再需要将这多条SQL重复发送。</p><p>方便维护：当某个方法需要改变的时候，只需要改变对应的存储过程，并不需要改变客户端程序。</p>]]></content>
    
    
    <summary type="html">这是大三学的数据库系统原理中的额外内容</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【win】edge更换chrome浏览器</title>
    <link href="https://blog.musnow.top/posts/1864371357/"/>
    <id>https://blog.musnow.top/posts/1864371357/</id>
    <published>2024-01-28T03:30:00.000Z</published>
    <updated>2024-01-28T03:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-edge的问题"><a href="#1-edge的问题" class="headerlink" title="1.edge的问题"></a>1.edge的问题</h1><p>由于edge新版本在我的电脑上出现了莫名其妙且没找到解决办法的渲染问题，决定更换浏览器为chrome；</p><p>我已经检查过了，edge在所有插件都关闭的情况下依旧会渲染错误，且和edge的<code>新外观</code>没有关系。目前暂时没有找到出现这个渲染错误的原因，回退旧版本也没成功，干脆换chrome完事。</p><p>这个问题在我自己的电脑edge自动更新后出现，且在我实习单位的电脑上也有渲染错位问题，说明不是个例。只能骂骂微软了，什么时候改好这个bug我什么时候换回去。</p><blockquote><p>我的电脑的edge版本：版本 121.0.2277.83 (正式版本) (64 位)</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/e9d3ac5e1f6cfd268d9072989586f536.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/1ac7a87a688b39359bef12edc58977fc.png" alt="image.png"></p><p>不只是b站的渲染有问题，还有很多网页会出现类似的横着的东西变成竖着的，在不该有的位置莫名其妙出现一个滚动条等等</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/4105dd031e08a43ee74c9523aafbb9e9.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/78cd94fe96c19fdf04bb313dad8705b5.png" alt="image.png"></p><h1 id="2-edge无损转chrome"><a href="#2-edge无损转chrome" class="headerlink" title="2.edge无损转chrome"></a>2.edge无损转chrome</h1><p>对于浏览器来说其实只有两个重要数据，一个是收藏夹，一个是保存的密码。</p><h2 id="收藏夹"><a href="#收藏夹" class="headerlink" title="收藏夹"></a>收藏夹</h2><p>edge收藏夹导出：右上角三个点-收藏夹-弹出框的右上角三个点-导出收藏夹</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/f685ebdd3fe425ca3458b32d8858a6c9.png" alt="image.png"></p><p>这个选项会将收藏夹导出为html文件，在chome的书签中，选则导入书签和设置</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/24ece2c8a3131922d0f2d5b2415d2d80.png" alt="image.png"></p><p>选择以前导出的书签（HTML文件），然后把刚刚导出的edge书签html文件选择上就能正常导入了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/a995083136a6d3df8488dd39aa6e78d2.png" alt="image.png"></p><h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><p>edge密码导出：右上角三个点-设置-个人资料-密码-导出密码；</p><p>新版本这里叫电子钱包，旧版本应该只是个密码页面。在密码页面右上角三个点选择导出密码即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/9015fad0ad60ebdc2da0f2f8c82eb2ce.png" alt="image.png"></p><p>注意，导出密码之前应该确认你的电脑上没有病毒或恶意软件，因为导出后是csv明文文件，任何软件都能直接读取！</p><p>导出csv后，在chrome浏览器中进入密码管理工具，在<strong>密码管理工具的设置</strong>中有导入密码选项，选择csv文件即可导入密码。导入密码后建议立马将csv文件删除。</p><h1 id="3-关闭edge默认浏览器防护"><a href="#3-关闭edge默认浏览器防护" class="headerlink" title="3.关闭edge默认浏览器防护"></a>3.关闭edge默认浏览器防护</h1><p>记得关闭edge的默认浏览器设置：在edge的设置-默认浏览器中，关闭<code>保护默认浏览器设置</code>首选项。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/b54c663800d8688fadbed0cb61d1b825.png" alt="image.png"></p><p>在windows11的系统设置-应用-默认应用中搜索chrome，可以在这里设置chrome为默认浏览器。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/3bceefb979209938e0b40b96aafec55f.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/85e37feba749ebde96742b852f30edd6.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d77bca81b7237dfe4a763a0bbc11de00.png" alt="image.png"></p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>edge目前对比chrome来说最大的好处还是可以直连的同步功能。但现在windows端连页面渲染都有问题，那我肯定没办法，只能跑路chrome了。</p><h1 id="Hold-on"><a href="#Hold-on" class="headerlink" title="Hold on"></a>Hold on</h1><p>为什么chrome的牛客网也有这个渲染错误的问题？？？无语了……强迫症看的很难受啊！！！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d3321003553cc37d4e9c4727f0fb6453.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">edge更换chrome浏览器</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="编程工具" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【C++】Google Gtest测试框架的使用</title>
    <link href="https://blog.musnow.top/posts/3098116292/"/>
    <id>https://blog.musnow.top/posts/3098116292/</id>
    <published>2024-01-26T08:40:00.000Z</published>
    <updated>2024-01-26T08:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>gtest模块的安装参考站内教程 <a href="https://blog.musnow.top/posts/852447913">ubuntu安装google gtest</a></p><p>本文使用的gtest版本为1.14.0；</p><h1 id="1-gtest是用来干嘛的？"><a href="#1-gtest是用来干嘛的？" class="headerlink" title="1.gtest是用来干嘛的？"></a>1.gtest是用来干嘛的？</h1><p>google gtest是一个c++的单元测试模块，它提供了一系列规范化的宏，来帮助我们进行函数的单元测试。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/2c7e703ed9d4e1fac803d9ea2bc69eda.png" alt="image.png"></p><p>单元测试你可以理解为测试我们编写好的每个函数模块，确保这些函数的功能不会影响其他函数，并保证函数能依照预期的功能进行工作。</p><blockquote><p>要知道，绝大部分的软件bug都是在设计、初次代码编写的过程中产生的，比如你写了一个add函数，但是错误的将运算符写成了<code>-</code>，add就变成sub函数了，如果这个add函数在其他功能模块完成之后才发现被写错，就闹大笑话了。</p></blockquote><p>当然，上面这个add的例子并不合适，因为它太简单了。但实际项目中，就是由多个很简单的代码聚合而成的一个大软件模块。每一个看上去简单、不可能写错的地方，都有可能隐藏的出错的危险。</p><p>所以，这就需要我们在完成每个功能函数的编写后，通过单元测试来判断函数是否有问题。</p><h1 id="2-gtest的代码基本框架"><a href="#2-gtest的代码基本框架" class="headerlink" title="2.gtest的代码基本框架"></a>2.gtest的代码基本框架</h1><p>一般情况下，多模块的软件项目都会用cmake来实现批量化的编译和单元测试的运行。但本文只是对gtest模块使用的最基本教程，再加上我并没有学习cmake的使用，所以暂时使用g++直接对单模块进行编译并介绍gtest的测试宏。</p><blockquote><p><a href="https://google.github.io/googletest/reference/testing.html">Testing Reference | GoogleTest</a></p></blockquote><p>比较常用的是TEST和TEST_F这两个测试宏，更多测试宏请参考官方文档中的介绍。</p><h2 id="2-1-TEST-单元测试模块"><a href="#2-1-TEST-单元测试模块" class="headerlink" title="2.1 TEST 单元测试模块"></a>2.1 TEST 单元测试模块</h2><p>在gtest中，一个单元测试模块长下面这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(TestSuiteName, TestName) &#123;</span><br><span class="line">  ... statements ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以理解为，左侧是被测模块的名字，右侧是在这个被测模块中的某个测试的名字，statements是任意被测模块的代码；gtest框架建议使用大驼峰的命名方式，TEST的命名中不要带有<code>_</code>下划线。</p><blockquote><p>比如我有一个模块A的单元测试，那么左侧可以填写为<code>模块ATest</code>，右侧填写为类中某个函数的测试。这两个名字可以随便起，但是在同一个TestSuiteName中不能有两个相同的TestName；</p></blockquote><p>一个单元测试模块的成功与失败取决于内部定义的gtest断言宏，参考后文的介绍。</p><h2 id="2-2-TEST-F-类测试模块"><a href="#2-2-TEST-F-类测试模块" class="headerlink" title="2.2 TEST_F 类测试模块"></a>2.2 TEST_F 类测试模块</h2><p>上述的TEST方式是用于测试普通函数的，还有一个TEST_F可以用于对类进行测试</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST_F</span>(TestFixtureName, TestName) &#123;</span><br><span class="line">  ... statements ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时左侧的TestFixtureName不再是随便起的了，你必须定义一个继承于<code>testing::Test</code>的测试类，该类可以定义成员变量或对被测目标进行初始化、销毁操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line"><span class="keyword">protected</span>:  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetUp</span><span class="params">()</span> <span class="comment">// 初始化，在每个TEST_F中都会被调用</span></span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span> <span class="comment">// 销毁，在每个TEST_F结束时都会调用</span></span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 可以定义一些成员变量，在TEST_F中能访问</span></span><br><span class="line">    <span class="type">int</span> _a;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终的测试代码应该是下面这样的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyA) &#123; ... &#125;</span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyB) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-简单示例"><a href="#2-3-简单示例" class="headerlink" title="2.3 简单示例"></a>2.3 简单示例</h2><p>下面是一个简单的gtest单元测试编写的示例，包含测试单元体和main函数。一个文件里面可以写N个TEST或TEST_F，它们会按顺序执行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个函数测试</span></span><br><span class="line"><span class="comment">// 左侧是测试模块的名字，右侧是该模块测试的目的</span></span><br><span class="line"><span class="built_in">TEST</span>(ADDTEST, ADDTEST_TRUE)</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用如下g++命令编译该代码，注意gtest是一个动态库，需要使用<code>-lgtest</code>进行链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ test.cpp -o test -lgtest</span><br></pre></td></tr></table></figure><h1 id="3-gtest提供的断言宏"><a href="#3-gtest提供的断言宏" class="headerlink" title="3.gtest提供的断言宏"></a>3.gtest提供的断言宏</h1><p>官方文档：<a href="https://google.github.io/googletest/reference/assertions.html">Assertions Reference | GoogleTest</a></p><p>gtest中提供的宏分为ASSERT和EXPECT两种，其中ASSERT宏会在检查到错误的时候直接终止单元测试用例的运行（注意是单个单元测试），而EXPECT不会。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(EXP,EXP1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ASSERT_EQ</span>(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// 如果这个出错了，后续不会执行</span></span><br><span class="line"><span class="comment">// 这里不会被执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXP,EXP2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EXPECT_EQ</span>(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// 如果这个出错了，还是会继续往后执行这个模块的其他代码。</span></span><br><span class="line"><span class="comment">// 这里的代码能被执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试运行结束后，gtest会给出测试失败的模块汇总。</p><h2 id="3-1-相等-x2F-大小判断"><a href="#3-1-相等-x2F-大小判断" class="headerlink" title="3.1 相等&#x2F;大小判断"></a>3.1 相等&#x2F;大小判断</h2><table><thead><tr><th>ASSERT宏</th><th>EXPECT宏</th><th>功能</th><th>参数个数</th></tr></thead><tbody><tr><td>ASSERT_TRUE</td><td>EXPECT_TRUE</td><td>判真</td><td>1</td></tr><tr><td>ASSERT_FALSE</td><td>EXPECT_FALSE</td><td>判假</td><td>1</td></tr><tr><td>ASSERT_EQ</td><td>EXPECT_EQ</td><td>相等</td><td>2</td></tr><tr><td>ASSERT_NE</td><td>EXPECT_NE</td><td>不相等</td><td>2</td></tr><tr><td>ASSERT_GT</td><td>EXPECT_GT</td><td>第一个参数是否大于第二个参数</td><td>2</td></tr><tr><td>ASSERT_LT</td><td>EXPECT_LT</td><td>小于（原理同上）</td><td>2</td></tr><tr><td>ASSERT_GE</td><td>EXPECT_GE</td><td>大于等于</td><td>2</td></tr><tr><td>ASSERT_LE</td><td>EXPECT_LE</td><td>小于等于</td><td>2</td></tr><tr><td>ASSERT_FLOAT_EQ</td><td>EXPECT_FLOAT_EQ</td><td>单精度浮点数相等</td><td>2</td></tr><tr><td>ASSERT_DOUBLE_EQ</td><td>EXPECT_DOUBLE_EQ</td><td>双精度浮点数相等</td><td>2</td></tr><tr><td>ASSERT_NEAR</td><td>EXPECT_NEAR</td><td>浮点数是否接近（第三个参数为允许的误差值）</td><td>3</td></tr><tr><td>ASSERT_STREQ</td><td>EXPECT_STREQ</td><td>C字符串相等</td><td>2</td></tr><tr><td>ASSERT_STRNE</td><td>EXPECT_STRNE</td><td>C字符串不相等</td><td>2</td></tr><tr><td>ASSERT_STRCASEEQ</td><td>EXPECT_STRCASEEQ</td><td>C字符串相等（忽略大小写）</td><td>2</td></tr><tr><td>ASSERT_STRCASENE</td><td>EXPECT_STRCASENE</td><td>C字符串不相等（忽略大小写）</td><td>2</td></tr><tr><td>ASSERT_PRED1</td><td>EXPECT_PRED1</td><td>自定义谓词测试（有1到5级，对应不同参数个数的自定义函数）</td><td>2</td></tr><tr><td>ASSERT_THAT</td><td>EXPECT_THAT</td><td>判断函数返回值是否符合给定的matcher（gtest提供的）</td><td>2</td></tr></tbody></table><h2 id="3-2-异常相关"><a href="#3-2-异常相关" class="headerlink" title="3.2 异常相关"></a>3.2 异常相关</h2><p>除了上述这种判断大小和相等的宏，还有和异常以及程序崩溃相关的宏</p><table><thead><tr><th>ASSERT宏</th><th>EXPECT宏</th><th>作用</th><th>参数个数</th></tr></thead><tbody><tr><td>ASSERT_THROW</td><td>EXPECT_THROW</td><td>期待抛出指定异常，第一个参数是目标函数，第二个参数是异常类型</td><td>2</td></tr><tr><td>ASSERT_ANY_THROW</td><td>EXPECT_ANY_THROW</td><td>期待抛出任何异常</td><td>1</td></tr><tr><td>ASSERT_NO_THROW</td><td>EXPECT_NO_THROW</td><td>不希望抛出任何异常</td><td>1</td></tr><tr><td>ASSERT_EXIT</td><td>EXPECT_EXIT</td><td>期望程序以指定错误码exit，且标准错误输出符合第三个参数的regex表达式</td><td>3</td></tr><tr><td>ASSERT_DEATH</td><td>EXPECT_DEATH</td><td>期望程序错误退出（退出码非0），且标准错误输出符合第二个参数的regex表达式</td><td>2</td></tr><tr><td>ASSERT_DEBUG_DEATH</td><td>EXPECT_DEBUG_DEATH</td><td>同上，但是在调试模式下测试；非调试模式下只会执行函数，不做判断。</td><td>2</td></tr><tr><td>ASSERT_DEATH_IF_SUPPORTED</td><td>EXPECT_DEATH_IF_SUPPORTED</td><td>同DEATH，但是只有在支持的时候才会被调用，如果不支持则什么都不做。</td><td>2</td></tr></tbody></table><h2 id="3-3-直接表明成功和失败"><a href="#3-3-直接表明成功和失败" class="headerlink" title="3.3 直接表明成功和失败"></a>3.3 直接表明成功和失败</h2><p>还有两个宏是直接表明该单元测试是否成功，以及是否失败的。主动调用这两个宏会提前终止该单元测试用例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SUCCEED(); <span class="comment">// 成功</span></span><br><span class="line">FAIL();    <span class="comment">// 失败</span></span><br></pre></td></tr></table></figure><h2 id="3-4-添加失败信息"><a href="#3-4-添加失败信息" class="headerlink" title="3.4 添加失败信息"></a>3.4 添加失败信息</h2><p>有的时候gtest默认提供的ASSERT宏不够我们的使用，你可以用自定义的判断，并在不符合预期的时候将这个错误信息添加进去，Gtest在最后汇总的时候也会显示出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generates a nonfatal failure, which allows the current function to continue running.</span></span><br><span class="line">ADD_FAILURE();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generates a nonfatal failure at the file and line number specified.</span></span><br><span class="line">ADD_FAILURE_AT(file_path,line_number);</span><br></pre></td></tr></table></figure><p>这两个宏的效果和EXPECT类似，都允许继续往后执行该单元测试用例。</p><h1 id="4-使用示例"><a href="#4-使用示例" class="headerlink" title="4.使用示例"></a>4.使用示例</h1><p>大部分的使用都是一样的，下面只对几个有代表性的做使用示例；为了方便，只对ASSERT做示例，因为它的效果和EXPECT完全一致，上文已经提到了二者的区别了。</p><h2 id="4-1-ASSERT-EXIT"><a href="#4-1-ASSERT-EXIT" class="headerlink" title="4.1 ASSERT_EXIT"></a>4.1 ASSERT_EXIT</h2><p>ASSERT_EXIT有三个参数，分别为待测函数、退出码或退出信号、错误信息regex；待测函数必须以指定的错误码或错误信号退出程序，并在stderr中打印能被这个regex匹配的错误信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ASSERT_EXIT(statement,predicate,matcher);</span><br></pre></td></tr></table></figure><p>第二个参数的可选项，分别代表错误退出码和收到的错误信号</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns true if the program exited normally with the given exit status code.</span></span><br><span class="line">::testing::<span class="built_in">ExitedWithCode</span>(exit_code);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns true if the program was killed by the given signal.</span></span><br><span class="line"><span class="comment">// Not available on Windows.</span></span><br><span class="line">::testing::<span class="built_in">KilledBySignal</span>(signal_number);</span><br></pre></td></tr></table></figure><p>第三个参数在官网上的描述是这样的</p><blockquote><p>The parameter matcher is either a matcher for a <code>const std::string&amp;</code>, or a regular expression (see <a href="https://google.github.io/googletest/advanced.html#regular-expression-syntax">Regular Expression Syntax</a>)—a bare string s (with no matcher) is treated as <code>ContainsRegex(s)</code>, not <code>Eq(s)</code>.</p></blockquote><p>如果传入一个普通字符串，则会判断stderr输出的内容是否<strong>包含</strong>该字符串。</p><p>下面是一个简单的示例，我们的函数调用了<code>exit(1)</code>，使用ASSERT_EXIT来判断它是否以预期的错误码1退出程序。第三个参数<code>.*</code>是正则表达式，代表任意错误信息的匹配。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// int ret = 10/0;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以错误码1退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">ExitedWithCode</span>(<span class="number">1</span>),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后的执行效果如下，我们的单元测试成功了，因为函数的确是以错误码1退出的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>那么如果换一个退出方式呢？比如因为除0错误退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:11:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   11 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:17: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected exit code:</span><br><span class="line">            Terminated by signal 8</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>这个时候单元测试就失败了，并会打印出失败行的位置和失败的原因。这里提到失败是因为受到了信号8，但我们预期是错误码1。</p><p>将预期修改为信号8，就能通过测试</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="comment">// exit(1);</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号8退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的警告是g++编译器检测到除0错误后提供的，并非是运行时的错误。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:11:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   11 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>将第三个参数改为一个普通字符串，gtest会进行stderr输出是否包含该字符串的检查；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，单元测试失败的原因是“错误退出但是没有提供期望的error输出”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:10:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   10 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:16: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected error.</span><br><span class="line">  Expected: contains regular expression &quot;happy&quot;</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>如果在错误输出中包含happy字符串，则正常通过测试。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>; <span class="comment">// 包含happy字符串</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (1 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (1 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (1 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意：函数内的assert错误对应的是信号6，如果需要用ASSERT_EXIT来捕捉assert错误，则需要使用<code>testing::KilledBySignal(6)</code>；</p><h2 id="4-2-ASSERT-DEATH"><a href="#4-2-ASSERT-DEATH" class="headerlink" title="4.2 ASSERT_DEATH"></a>4.2 ASSERT_DEATH</h2><p>ASSERT_DEATH和ASSERT_EXIT宏的作用基本一致，只不过ASSERT_DEATH不需要我们传入期望退出的错误码或信号。此时<strong>任意非0错误码退出和任意信号退出</strong>都会被视为ASSERT_DEATH的测试成功情况。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPECT_DEATH(statement,matcher);</span><br><span class="line">ASSERT_DEATH(statement,matcher);</span><br></pre></td></tr></table></figure><p>这里的第二个参数和ASSERT_EXIT的第三个参数一致，可以是一个字符串，也可以是一个regex表达式。</p><p>示例代码和测试结果如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>ASSERT_DEATH只有在被测函数<strong>没有错误退出</strong>，或者以<code>exit(0)</code>退出的时候会出错。因为0号在操作系统中是进程退出的正常情况，非0才是错误信号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:15: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected exit code:</span><br><span class="line">            Exited with exit status 0</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>注意，<strong>抛出异常</strong>并没有归结到DEATH和EXIT的判定范围内。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="comment">// int ret = 10/0;</span></span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:16: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: threw an exception.</span><br><span class="line"> Error msg:</span><br><span class="line">[  DEATH   ] test exit happy</span><br><span class="line">[  DEATH   ] </span><br><span class="line">[  DEATH   ] test.cpp:16:: Caught std::exception-derived exception escaping the death test statement. Exception message: 123</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h2 id="4-3-ASSERT-DEBUG-DEATH"><a href="#4-3-ASSERT-DEBUG-DEATH" class="headerlink" title="4.3 ASSERT_DEBUG_DEATH"></a>4.3 ASSERT_DEBUG_DEATH</h2><p>对于ASSERT_DEBUG_DEATH，官方文档是这么描述的：</p><blockquote><p>In debug mode, behaves the same as EXPECT_DEATH. When not in debug mode (i.e. NDEBUG is defined), just executes statement.</p></blockquote><p>这里补充一下NDEBUG宏的作用，在标准库里面，它会控制assert是否起效果。如果一个程序define了NDEBUG宏（注意必须在引用<code>&lt;assert.h&gt;</code>头文件之前定义），那么assert将什么都不做。</p><p>可以看assert.h的源代码，当定义了NDEBUG宏后，assert会调用<code>__ASSERT_VOID_CAST (0)</code>；在C++中这个cast是一个<code>static_cast&lt;void&gt;</code>，在C语言中是一个<code>)void)</code>的强转，反正都是啥都不干。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined __cplusplus &amp;&amp; __GNUC_PREREQ (2,95)</span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> __ASSERT_VOID_CAST static_cast<span class="string">&lt;void&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> __ASSERT_VOID_CAST (void)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* void assert (int expression);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   If NDEBUG is defined, do nothing.</span></span><br><span class="line"><span class="comment">   If not, and EXPRESSION is zero, print an error message and abort.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span>NDEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> assert(expr)(__ASSERT_VOID_CAST (0))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* void assert_perror (int errnum);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   If NDEBUG is defined, do nothing.  If not, and ERRNUM is not zero, print an</span></span><br><span class="line"><span class="comment">   error message with the error text for ERRNUM and abort.</span></span><br><span class="line"><span class="comment">   (This is a GNU extension.) */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">ifdef</span>__USE_GNU</span></span><br><span class="line"><span class="meta">#  <span class="keyword">define</span> assert_perror(errnum)(__ASSERT_VOID_CAST (0))</span></span><br><span class="line"><span class="meta"># <span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">else</span> <span class="comment">/* Not NDEBUG.  */</span></span></span><br></pre></td></tr></table></figure><p>下面是一个简单的测试示例，当我们没有定义NDEBUG的时候，ASSERT_DEBUG_DEATH和ASSERT_DEATH做的是相同的操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEBUG_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>如果在文件开头定义了NDEBUG，那么ASSERT_DEBUG_DEATH则只会调用函数，并不会做错误信息的判断，如下所示，我们将函数中的exit删除，gtest也没有报告错误。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NDEBUG 1 <span class="comment">// 一定要在开头定义</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="comment">// exit(1); // 没有错误退出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEBUG_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们的函数并没有退出，但是由于定义了NDEBUG，ASSERT_DEBUG_DEATH宏没有报告错误。（去掉该宏，则会和ASSERT_DEATH一样提示出错）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test exit happy</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-4-ASSERT-THROW"><a href="#4-4-ASSERT-THROW" class="headerlink" title="4.4 ASSERT_THROW"></a>4.4 ASSERT_THROW</h2><p>调用对象应该抛出异常，并判断异常类型是否为期待类型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_throw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_THROW)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_THROW</span>(<span class="built_in">test_throw</span>(),std::runtime_error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THROW</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_THROW (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>当抛出的异常类型不一致的时候会出错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THROW</span><br><span class="line">test.cpp:12: Failure</span><br><span class="line">Expected: test_throw() throws an exception of type std::runtime_error.</span><br><span class="line">  Actual: it throws std::length_error with description &quot;123&quot;.</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_THROW (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_THROW</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>异常相关的还有两个</p><ul><li>ASSERT_ANY_THROW不需要传入第二个参数，只关注目标函数应该抛出异常；</li><li>ASSERT_NO_THROW也只有一个参数，目标函数不应该抛出异常；</li></ul><p>因为它们很简单，这里就不做演示了。</p><h2 id="4-5-ASSERT-EQ-x2F-NE"><a href="#4-5-ASSERT-EQ-x2F-NE" class="headerlink" title="4.5 ASSERT_EQ&#x2F;NE"></a>4.5 ASSERT_EQ&#x2F;NE</h2><p>相等和不相等的比较。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EQ)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">ASSERT_EQ</span>(ret,<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">ASSERT_NE</span>(ret,<span class="number">29</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EQ</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EQ (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>ASSERT_FLOAT_EQ和ASSERT_DOUBLE_EQ是在比较的基础上允许一定的<strong>浮点数精度误差值</strong>。如果你需要比较两个浮点数，请使用对应的浮点数类型比较宏，而不要直接使用ASSERT_EQ；</p><h2 id="4-6-ASSERT-GE-x2F-LE"><a href="#4-6-ASSERT-GE-x2F-LE" class="headerlink" title="4.6 ASSERT_GE&#x2F;LE"></a>4.6 ASSERT_GE&#x2F;LE</h2><p>注意，大小写比较都是左和右直接按顺序比较的，比如GE是判断<strong>左边是否大于右边</strong>（不要搞反顺序了）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_GE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">ASSERT_GE</span>(ret,<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">ASSERT_LE</span>(ret,<span class="number">29</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EQ</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EQ (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-7-ASSERT-NEAR"><a href="#4-7-ASSERT-NEAR" class="headerlink" title="4.7 ASSERT_NEAR"></a>4.7 ASSERT_NEAR</h2><p>该宏提供了第三个参数，在浮点数比较时允许一定的误差值。官网文档说明是保证val1和val2不超过abs_error的误差边界。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPECT_NEAR(val1,val2,abs_error)</span><br><span class="line">ASSERT_NEAR(val1,val2,abs_error)</span><br><span class="line"><span class="comment">// Verifies that the difference between val1 and val2 does not exceed the absolute error bound abs_error.</span></span><br></pre></td></tr></table></figure><p>下面是一个示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_NEAR)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_NEAR</span>(<span class="number">3.14</span>,<span class="number">3.15</span>,<span class="number">0.01</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为两个数字的差距的确在<code>0.01</code>的误差区间，所以可以通过测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_NEAR</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_NEAR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>如果将第三个参数的误差改为<code>0.001</code>，则无法通过测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_NEAR</span><br><span class="line">test.cpp:8: Failure</span><br><span class="line">The difference between 3.14 and 3.15 is 0.0099999999999997868, which exceeds 0.001, where</span><br><span class="line">3.14 evaluates to 3.1400000000000001,</span><br><span class="line">3.15 evaluates to 3.1499999999999999, and</span><br><span class="line">0.001 evaluates to 0.001.</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_NEAR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_NEAR</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h2 id="4-8-ASSERT-STREQ-x2F-STRCASEEQ"><a href="#4-8-ASSERT-STREQ-x2F-STRCASEEQ" class="headerlink" title="4.8 ASSERT_STREQ&#x2F;STRCASEEQ"></a>4.8 ASSERT_STREQ&#x2F;STRCASEEQ</h2><p>字符串相等比较，一个不忽略大小写，一个忽略大小写;</p><p>注意，这两个宏的入参都是<code>const char*</code>，不能直接传入<code>std::string</code>进行比较。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_STR)</span><br><span class="line">&#123;</span><br><span class="line">    std::string str1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    std::string str2 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    std::string str3 = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="built_in">ASSERT_STREQ</span>(str1.<span class="built_in">c_str</span>(),str2.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="built_in">ASSERT_STRCASEEQ</span>(str1.<span class="built_in">c_str</span>(),str3.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_STR</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_STR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-9-ASSERT-TRUE-x2F-FALSE"><a href="#4-9-ASSERT-TRUE-x2F-FALSE" class="headerlink" title="4.9 ASSERT_TRUE&#x2F;FALSE"></a>4.9 ASSERT_TRUE&#x2F;FALSE</h2><p>bool值真假的判断。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">ASSERT_TRUE</span>(a != b);</span><br><span class="line">    <span class="built_in">ASSERT_FALSE</span>(a == b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_TRUE</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意，这两个宏只接受bool值或者int类型，诸如nullptr这类值都是不能被直接接受的（除非你强转）。</p><ul><li>如果你需要判断一个函数的结果是否为空指针nullptr，请使用ASSERT_EQ来判断；</li><li>如果你的函数返回值用了int且用0来标识错误的情况，也建议用ASSERT_EQ来更可读的判断，而不要用ASSERT_TRUE&#x2F;FALSE；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">In file included from /usr/local/include/gtest/gtest-printers.h:122,</span><br><span class="line">                 from /usr/local/include/gtest/gtest-matchers.h:49,</span><br><span class="line">                 from /usr/local/include/gtest/internal/gtest-death-test-internal.h:47,</span><br><span class="line">                 from /usr/local/include/gtest/gtest-death-test.h:43,</span><br><span class="line">                 from /usr/local/include/gtest/gtest.h:65,</span><br><span class="line">                 from test.cpp:1:</span><br><span class="line">test.cpp: In member function &#x27;virtual void EXPTEST_EXPTEST_TRUE_Test::TestBody()&#x27;:</span><br><span class="line">test.cpp:8:5: error: converting to &#x27;bool&#x27; from &#x27;std::nullptr_t&#x27; requires direct-initialization [-fpermissive]</span><br><span class="line">    8 |     ASSERT_FALSE(nullptr);</span><br><span class="line">      |     ^~~~~~~~~~~~</span><br></pre></td></tr></table></figure><p>这里也能看出C++中nullptr和C语言中NULL的不同，使用ASSERT_FALSE来判断NULL是能通过编译的，因为它本质只是一个define的数字0，和bool值的本质是一样的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ASSERT_FALSE(NULL);</span><br></pre></td></tr></table></figure><h2 id="4-10-ADD-FAILURE"><a href="#4-10-ADD-FAILURE" class="headerlink" title="4.10 ADD_FAILURE"></a>4.10 ADD_FAILURE</h2><p>添加失败信息的效果示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a!=b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">ADD_FAILURE</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 假设我知道被测函数的目标文件和行号</span></span><br><span class="line">    <span class="built_in">ADD_FAILURE_AT</span>(<span class="string">&quot;add.hpp&quot;</span>,<span class="number">20</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你知道出错的被测函数的文件和所在行数，使用ADD_FAILURE_AT能更好的帮助定位问题。因为ADD_FAILURE只会显示出错单元测试的文件和位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_TRUE</span><br><span class="line">test.cpp:13: Failure</span><br><span class="line">Failed</span><br><span class="line"></span><br><span class="line">add.hpp:20: Failure</span><br><span class="line">Failed</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_TRUE</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>这里也能看到，ADD_FAILURE后，单元测试会像EXPECT宏一样继续往后运行。</p><h2 id="4-11-ASSERT-THAT"><a href="#4-11-ASSERT-THAT" class="headerlink" title="4.11 ASSERT_THAT"></a>4.11 ASSERT_THAT</h2><p>和ASSERT_THAT相关的matcher选项在gtest中提供了，注意需要引用gmock头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ::testing::AllOf;</span><br><span class="line"><span class="keyword">using</span> ::testing::Gt;</span><br><span class="line"><span class="keyword">using</span> ::testing::Lt;</span><br><span class="line"><span class="keyword">using</span> ::testing::MatchesRegex;</span><br><span class="line"><span class="keyword">using</span> ::testing::StartsWith;</span><br></pre></td></tr></table></figure><p>更多matcher可以查看官方文档：<a href="https://google.github.io/googletest/reference/matchers.html">Matchers</a></p><blockquote><p>这里还有个小细节，你会发现gtest官网文档中的所有<code>testing</code>命名空间前面都带了一个<code>::</code>，这样不管你在什么自定义的命名空间里面编写gtest的代码，都可以通过<code>::</code>先回到全局命名空间，再访问<code>testing</code>命名空间。即不会和用户自定义空间中的冲突。</p><p>另外，如果你需要使用gtest框架，应该避免自己的命名空间和gtest的命名空间重名。</p></blockquote><p>示例代码如下，我们的字符串的确是以he开头的，能通过检查。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_THAT)</span><br><span class="line">&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="built_in">ASSERT_THAT</span>(str.<span class="built_in">c_str</span>(),testing::<span class="built_in">StartsWith</span>(<span class="string">&quot;he&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THAT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_THAT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-12-ASSERT-PRED"><a href="#4-12-ASSERT-PRED" class="headerlink" title="4.12 ASSERT_PRED"></a>4.12 ASSERT_PRED</h2><p>谓词测试宏一共有5个，分别接受一个自定义函数和该函数对应的参数，并判断返回值是否为bool值的true。数字就代表函数的参数个数，最多支持5个参数的自定义函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ASSERT_PRED1</span>(pred,val1)</span><br><span class="line"><span class="built_in">ASSERT_PRED2</span>(pred,val1,val2)</span><br><span class="line"><span class="built_in">ASSERT_PRED3</span>(pred,val1,val2,val3)</span><br><span class="line"><span class="built_in">ASSERT_PRED4</span>(pred,val1,val2,val3,val4)</span><br><span class="line"><span class="built_in">ASSERT_PRED5</span>(pred,val1,val2,val3,val4,val5)</span><br></pre></td></tr></table></figure><p>我们定义一个测试函数，再把两个参数传入该函数，就能得到一个结果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_eq</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a == b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_PRED)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_PRED2</span>(is_eq, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 等价于 ASSERT_TRUE(is_eq(1,2));</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_PRED</span><br><span class="line">test.cpp:14: Failure</span><br><span class="line">is_eq(1, 2) evaluates to false, where</span><br><span class="line">1 evaluates to 1</span><br><span class="line">2 evaluates to 2</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_PRED (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_PRED</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h1 id="5-TEST-F"><a href="#5-TEST-F" class="headerlink" title="5.TEST_F"></a>5.TEST_F</h1><p>介绍完毕断言宏了，TEST的作用想必大家也明白了，下面对TEST_F给出一个简单的示例。</p><p>在上文介绍TEST_F中提到过编写的基本框架应该如下所示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyA) &#123; ... &#125;</span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyB) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>假设我们需要对MyClass类进行测试，那么MyClassTest类就是对MyClass进行初始化和销毁操作的，每一个TEST_F都是对MyClass中的某个成员变量进行测试。</p><p>下面是一个简单的对类的单元测试的示例，目的是确认AddX和AddY的情况符合我们的预期，能正常给成员变量添加值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyClass</span>(<span class="type">int</span> x = <span class="number">0</span>, <span class="type">int</span> y = <span class="number">0</span>) : _x(x), _y(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">AddX</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _x += val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">AddY</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _y += val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetX</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> _x; &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetY</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> _y; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> _x;</span><br><span class="line">    <span class="type">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetUp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;set up for MyClass\n&quot;</span>;</span><br><span class="line">        _mc = std::<span class="built_in">make_shared</span>&lt;MyClass&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;tear down for MyClass\n&quot;</span>;</span><br><span class="line">        _mc.<span class="built_in">reset</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::shared_ptr&lt;MyClass&gt; _mc;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, MyClassTestAddX)</span><br><span class="line">&#123;</span><br><span class="line">    _mc-&gt;<span class="built_in">AddX</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(_mc-&gt;<span class="built_in">GetX</span>(), <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, MyClassTestAddY)</span><br><span class="line">&#123;</span><br><span class="line">    _mc-&gt;<span class="built_in">AddY</span>(<span class="number">20</span>);</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(_mc-&gt;<span class="built_in">GetY</span>(), <span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在代码中，TEST_F体内可以访问MyClassTest的成员变量<code>_mc</code>，并调用它的成员函数。这样就避免了我们在每个单元测试中对一些公用的类进行多次初始化程序编写的操作。</p><p>编译运行这个代码，能看到SetUp和TearDown在每次TEST_F之前和之后都会被执行，并非只执行一次！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 2 tests from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 2 tests from MyClassTest</span><br><span class="line">[ RUN      ] MyClassTest.MyClassTestAddX</span><br><span class="line">set up for MyClass</span><br><span class="line">tear down for MyClass</span><br><span class="line">[       OK ] MyClassTest.MyClassTestAddX (0 ms)</span><br><span class="line">[ RUN      ] MyClassTest.MyClassTestAddY</span><br><span class="line">set up for MyClass</span><br><span class="line">tear down for MyClass</span><br><span class="line">[       OK ] MyClassTest.MyClassTestAddY (0 ms)</span><br><span class="line">[----------] 2 tests from MyClassTest (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 2 tests from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 2 tests.</span><br></pre></td></tr></table></figure><p>如果你需要测试一个类的私有成员，可以使用g++的编译命令<code>-fno-access-control</code>直接取消访问限定符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ test.cpp -o test -fno-access-control -lgtest</span><br></pre></td></tr></table></figure><p>此时在类外对私有成员和私有函数的直接访问不会出现编译报错。但需要注意的是，你只可以在<strong>单元测试</strong>中使用该编译命令，在生产环境中不应该这么做！</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>对于Gtest的宏的介绍到这里就结束了。</p><p>google gtest框架中还包含了一个gmock模块，这个模块的主要作用是继承一个父类，重写虚函数，并可以在测试夹具中用EXPECT_CALL自定义重写后函数的返回值和调用次数。在我遇到的实际项目中，这个gmock模块用到的次数很少，因为它的适用范围实在是太窄了。</p>]]></content>
    
    
    <summary type="html">C++ Google Gtest测试框架的使用教程</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="C++" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/C/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="Cpp" scheme="https://blog.musnow.top/tags/Cpp/"/>
    
    <category term="单元测试" scheme="https://blog.musnow.top/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】ubuntu安装google gtest框架</title>
    <link href="https://blog.musnow.top/posts/852447913/"/>
    <id>https://blog.musnow.top/posts/852447913/</id>
    <published>2024-01-26T03:40:00.000Z</published>
    <updated>2024-01-26T03:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu 22.04.03 LTS 安装 google gtest 框架</p><h1 id="1-依赖项"><a href="#1-依赖项" class="headerlink" title="1.依赖项"></a>1.依赖项</h1><p>首先在ubuntu中安装如下包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y unzip g++ gcc cmake make automake</span><br></pre></td></tr></table></figure><h1 id="2-下载软件包"><a href="#2-下载软件包" class="headerlink" title="2.下载软件包"></a>2.下载软件包</h1><p>进入google gtest的github页面，下载源码包 <a href="https://github.com/google/googletest/releases">Releases · google&#x2F;googletest</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/google/googletest/archive/refs/tags/v1.14.0.zip</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/ea030dafe5308bcb2f801ed363efcf86.png" alt="image.png"></p><p>将其上传到ubuntu中，并解压。你也可以下载tar.gz的压缩包，并使用<code>tar -zxvf</code>命令解压。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip googletest-1.14.0.zip</span><br></pre></td></tr></table></figure><h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h1><p>解压后进入文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd googletest-1.14.0</span><br></pre></td></tr></table></figure><p>依次执行如下命令，安装google gtest；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake .</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>这样就安装成功了。</p><h1 id="4-测试是否正常安装"><a href="#4-测试是否正常安装" class="headerlink" title="4.测试是否正常安装"></a>4.测试是否正常安装</h1><p>用如下测试代码看看是否能正常调用gtest模块。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(ADDTEST,ADDTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(num,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> </span>&#123;  </span><br><span class="line"> std::cout &lt;&lt; <span class="string">&quot;Running main() from gtest_main.cc\n&quot;</span>;  </span><br><span class="line"> testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);  </span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>编译并运行，没有问题！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ g++ test.cpp -o test -lgtest</span><br><span class="line">$ ./test</span><br><span class="line">Running main() from gtest_main.cc</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from ADDTEST</span><br><span class="line">[ RUN      ] ADDTEST.ADDTEST_TRUE</span><br><span class="line">[       OK ] ADDTEST.ADDTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from ADDTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意，gtest是一个动态库，编译的时候需要加上<code>-lgtest</code>进行链接。</p>]]></content>
    
    
    <summary type="html">ubuntu22.04.03安装google gtest框架</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="单元测试" scheme="https://blog.musnow.top/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】wsl2安装ubuntu并移动安装位置</title>
    <link href="https://blog.musnow.top/posts/3613882502/"/>
    <id>https://blog.musnow.top/posts/3613882502/</id>
    <published>2024-01-26T02:40:00.000Z</published>
    <updated>2024-01-26T02:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-启用wsl"><a href="#1-启用wsl" class="headerlink" title="1.启用wsl"></a>1.启用wsl</h1><p>首先是启用你的wsl，参考本站<a href="https://blog.musnow.top/posts/4065446782">wsl安装centos8</a>中的教程;</p><p>启用wsl后，更新一下，并设置版本为2；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --update</span><br><span class="line">wsl --set-default-version 2 <span class="comment"># 设置wsl版本为2，不然可能安装失败</span></span><br></pre></td></tr></table></figure><h1 id="2-安装ubuntu"><a href="#2-安装ubuntu" class="headerlink" title="2.安装ubuntu"></a>2.安装ubuntu</h1><p>在微软商店搜索ubuntu，根据你的需要安装指定的版本，我选择的是表明了版本号的Ubuntu 22.04.3 LTS版本。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/dba1d9e28d29cfa71b23641976622979.png" alt="image.png"></p><p>下载完毕后，在微软商店里面点击打开，会弹出一个新的终端，进行安装流程。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d6b4082ddbc2fe980ef2a38288e1c400.png" alt="image.png"></p><p>随后会提示你输入一个用户名，以及该用户名的密码。为了方便辨识不同的虚拟机，我直接将用户名设置为wsl了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Installing, this may take a few minutes...</span><br><span class="line">Please create a default UNIX user account. The username does not need to match your Windows username.</span><br><span class="line">For more information visit: https://aka.ms/wslusers</span><br><span class="line">Enter new UNIX username: wsl</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">Installation successful!</span><br><span class="line">To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;.</span><br><span class="line">See &quot;man sudo_root&quot; for details.</span><br><span class="line"></span><br><span class="line">Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 4.4.0-22621-Microsoft x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">This message is shown once a day. To disable it please create the</span><br><span class="line">/home/wsl/.hushlogin file.</span><br><span class="line">wsl@7945R9P:~$</span><br></pre></td></tr></table></figure><p>在windows的终端里面使用wsl命令可以看到当前安装的ubuntu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-22.04    Running         1</span><br></pre></td></tr></table></figure><h1 id="3-移动安装位置"><a href="#3-移动安装位置" class="headerlink" title="3.移动安装位置"></a>3.移动安装位置</h1><blockquote><p>参考: <a href="https://www.cnblogs.com/tl542475736/p/14855863.html">Site Unreachable</a></p></blockquote><p>此时先不要急着做下一步，因为默认情况下这个wsl主机是安装在C盘的，对于Linux系统而言，后续用久了容易涨到30GB甚至更大的存储空间消耗。除非你的C盘有非常非常非常多的剩余空间，不然还是建议移动到其他盘去重新安装。</p><p>首先用shutdown命令关闭虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><p>随后用export导出命令将该虚拟机打包导出到一个存储路径中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --export 虚拟机名字 导出文件路径</span><br></pre></td></tr></table></figure><p>稍等片刻即可成功导出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl --export Ubuntu-22.04 d:\wsl-ubuntu22.04.tar</span><br><span class="line">正在导出，这可能需要几分钟时间。</span><br><span class="line">操作成功完成。</span><br></pre></td></tr></table></figure><p>删除当前的虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister Ubuntu-22.04</span><br></pre></td></tr></table></figure><p>把刚刚导出的tar文件，导入wsl中。此时可以选择我们需要的安装路径，并且指定wsl版本为2（在这之前需要执行<code>wsl --update</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import 虚拟机名字 安装路径 tar包路径 --version 2</span><br></pre></td></tr></table></figure><p>注意，如果你的安装路径里有空格（比如<code>Progarm Files</code>文件夹），则需要用英文引号将路径给括起来。</p><p>如下所示，导入成功，并且版本为wsl2；导入后，tar文件可以删除，不会影响虚拟机使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl --unregister Ubuntu-22.04</span><br><span class="line">正在注销。</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\S2522&gt; wsl --import Ubuntu-22.04 &quot;D:\Program Files\WSL&quot; &quot;D:\Program Files\WSL\wsl-ubuntu22.04.tar&quot; --version 2</span><br><span class="line">正在导入，这可能需要几分钟时间。</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\S2522&gt; wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-22.04    Stopped         2</span><br></pre></td></tr></table></figure><p>查看一下这个安装路径，能在里面找到一个vhdx虚拟磁盘文件，这就代表我们移动安装目录成功了。不用担心自己的C盘被挤爆了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/4e2d6c0cc2b32263441ff8a87363f8c3.png" alt="image.png"></p><p>使用<code>wsl</code>命令即可进入该虚拟机。因为不是从微软商店直接安装的，所以默认进入的是root用户。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl</span><br><span class="line">^EWelcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.133.1-microsoft-standard-WSL2 x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This message is shown once a day. To disable it please create the</span><br><span class="line">/root/.hushlogin file.</span><br><span class="line">root@7945R9P:/mnt/c/Users/S2522#</span><br></pre></td></tr></table></figure><p>回到windows的命令行，使用如下命令配置默认用户为刚刚我们初始化时设置的用户（当时我设置的用户名是wsl）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu2204 config --default-user 用户名</span><br></pre></td></tr></table></figure><p>这样配置了之后，<code>wsl</code>命令默认进入的用户就是你刚刚从微软商店下载时初始化的子用户了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; ubuntu2204 config --default-user wsl</span><br><span class="line">PS C:\Users\S2522&gt; wsl</span><br><span class="line">To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;.</span><br><span class="line">See &quot;man sudo_root&quot; for details.</span><br><span class="line"></span><br><span class="line">wsl@7945R9P:/mnt/c/Users/S2522$</span><br></pre></td></tr></table></figure><h1 id="4-安装软件包"><a href="#4-安装软件包" class="headerlink" title="4.安装软件包"></a>4.安装软件包</h1><p>使用如下命令更新软件源，更新完毕后就可以自行下载你需要的软件包了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y update &amp;&amp; sudo apt -y upgrade</span><br></pre></td></tr></table></figure><p>这里列出我自己需要使用的软件包的安装命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install vim git net-tools cmake make automake doxygen unzip wget curl g++ gcc</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>后续就是Ubuntu的正常使用和Linux环境安装过程了，祝你使用愉快！</p>]]></content>
    
    
    <summary type="html">wsl2安装ubuntu并移动安装位置</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
    <category term="ubuntu" scheme="https://blog.musnow.top/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>【vscode】vscode paste image插件设置</title>
    <link href="https://blog.musnow.top/posts/4210795894/"/>
    <id>https://blog.musnow.top/posts/4210795894/</id>
    <published>2024-01-24T08:10:00.000Z</published>
    <updated>2024-01-24T08:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>vscode编辑md文件的时候，如果想插入图片，自带的粘贴只会粘贴到当前目录下，也没有文件重命名，很不友好。</p><p>在扩展商店里面有mushan的Paste Image插件，相比自带的，更加友好一点。但是它的配置把我弄糊涂了，简单测试了一下才明白处理的逻辑。</p><p>注意，本文编写的是对mushan的Paste Image插件的教程。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/aa55e470f0a668f03a44b936a4fe2948.png" alt="image.png"></p><p>首先是安装这个插件，这个不多说，然后进入插件设置。我这里说明一下每一个设置项的作用，只列出了需要修改的配置项。</p><p>注意：该插件的粘贴图片快捷键是<code>CTRL+ALT+V</code>。</p><table><thead><tr><th>设置项</th><th>作用</th><th>示例配置</th><th>说明</th></tr></thead><tbody><tr><td>Base Path</td><td>基础目录</td><td>${currentFileDir}</td><td>该项相当于粘贴文件的时候，应该把什么目录视作工作目录，最终图片路径会以这个path来计算相对路径；<code>currentFileDir</code>就是当前工作区文件的路径，所以不需要修改这个配置。</td></tr><tr><td>Default Name</td><td>图片文件名</td><td>Y-MM-DD-HH-mm-ss</td><td>粘贴后的图片文件名，可以根据当前时间格式化命名。注意这里不要添加其他非格式化项，不然容易命令出错。</td></tr><tr><td>Name Prefix</td><td>图片文件名前缀</td><td>留空</td><td>该项是图片文件名的前缀，比如设置为<code>image-</code>，则粘贴的图片文件名前面会带上<code>image-</code>；</td></tr><tr><td>Name Suffix</td><td>图片文件名后缀</td><td>留空</td><td>该项是图片文件名的后缀，设置效果同上。（文件名后缀是在文件扩展名之前的）</td></tr><tr><td>Path</td><td>图片文件保存位置</td><td>${currentFileDir}</td><td>图片文件会保存的目录，根据你的需要修改；</td></tr><tr><td>Prefix</td><td>最终文件路径的前缀</td><td>留空</td><td>最终文件路径的前缀，建议设置为<code>./</code>；</td></tr><tr><td>Suffix</td><td>最终文件路径后缀</td><td>留空</td><td>最终文件路径的后缀，不建议添加值，否则会因为扩展名被覆盖而影响解析；</td></tr></tbody></table><p>根据我的需要，我需要将图片粘贴到当前md文件所在目录下的img路径中，那么我就需要修改Path和Prefix两个配置项</p><table><thead><tr><th>项目</th><th>设置</th></tr></thead><tbody><tr><td>Path</td><td>${currentFileDir}&#x2F;img&#x2F;</td></tr><tr><td>Prefix</td><td>.&#x2F;</td></tr></tbody></table><p>如果你不设置Prefix，最终粘贴的图片路径如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](img/image-20240124161634.png)</span><br></pre></td></tr></table></figure><p>对于绝大部分markdown软件，这个路径都能被正常识别为相对路径并访问到图片。但是对于我正在使用的vuepress框架而言，必须将图片路径添加上<code>./</code>他才能识别出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](./img/image-20240124160742.png)</span><br></pre></td></tr></table></figure><p>设置了Prefix之后就没有问题了！</p><p>这个插件还是很好用的，如果你发现某些设置不生效，可以重启vscode或者重新写入配置项试试（我就遇到过，玄学问题）。</p>]]></content>
    
    
    <summary type="html">vscode paste image插件设置</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="编程工具" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="vscode" scheme="https://blog.musnow.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>【win】vscode无法使用ctrl+shift+p快捷键的解决方案</title>
    <link href="https://blog.musnow.top/posts/4138872091/"/>
    <id>https://blog.musnow.top/posts/4138872091/</id>
    <published>2024-01-24T08:00:00.000Z</published>
    <updated>2024-01-24T08:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用vscode的时候遇到的这个问题，明明快捷键设置的是<code>ctrl+shift+p</code>，但是在电脑上怎么敲都敲不出来，因为用这个快捷键打开命令面板都习惯了，也不想换，就在找原因。</p><p>同时百度的时候还遇到了几个可能的问题：</p><ul><li>键盘不支持全键无冲，ctrl+shift+p的组合冲突了</li><li>键盘坏了（最开始我还真有这个想法，但测试了一下就发现没坏）</li><li>如果是笔记本，测试自带键盘能否正常使用该快捷键</li></ul><p>最后发现是我开机自启了picgo，而picgo的快速上传快捷键和vscode冲突了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/dba80a531299698f411bce425b2ee676.png" alt="image.png"></p><p>在picgo的设置-快捷键设置里面，把这个快捷键给禁用就行。</p>]]></content>
    
    
    <summary type="html">vscode无法使用ctrl+shift+p快捷键解决方案</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="vscode" scheme="https://blog.musnow.top/tags/vscode/"/>
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Python】valorant国服和港服文件差距</title>
    <link href="https://blog.musnow.top/posts/87392930/"/>
    <id>https://blog.musnow.top/posts/87392930/</id>
    <published>2024-01-19T11:30:00.000Z</published>
    <updated>2024-01-19T11:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>今天整理本地文件的时候突然有点好奇，valorant国服和港服的文件是否会有大量相同的文件？</p><p>如果有很多相同的文件，我们就能用windows文件系统的<code>硬链接</code>功能将相同的文件映射为同一个，这样就能节省本地的存储空间。</p><h2 id="1-目视观察"><a href="#1-目视观察" class="headerlink" title="1.目视观察"></a>1.目视观察</h2><p>游戏都更新了<code>2024-01-19 17:00</code>当日的最新版本。</p><p>首先是看两个游戏的安装目录，可以发现都有live文件夹；</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/225c706bded245289b0df2291513f12b.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/a4f74e1a9e520a7a1b796a70b48fb372.png" alt="image.png"></p><p>从windows的文件夹属性来看，港服的文件会多一些，容量也多了将近12GB；但是国服的文件夹数量会比港服多很多。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/26db99c234f03092bbe2820ac215c4b1.png" alt="image.png"></p><h2 id="2-Python代码计算md5"><a href="#2-Python代码计算md5" class="headerlink" title="2.Python代码计算md5"></a>2.Python代码计算md5</h2><p>使用python简单写个代码来遍历这两个文件夹，通过计算MD5来判断有多少文件是完全相同的。</p><ul><li>MD5可以理解为一个文件的数字签名，只要文件内容相同，计算出来的MD5就是完全一致的。当然也有可能出现两个毫不相干的文件计算出来的MD5相同的情况（哈希冲突），但是几率很小，在本次实验中应该是不存在这种情况的。</li><li>Python可以使用os模块来获取一个文件目录下的所有文件。</li></ul><p>代码文件层级如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- main.py</span><br><span class="line">- utils</span><br><span class="line">- Files.py</span><br><span class="line">- Logger.py</span><br><span class="line">- __init__.py</span><br><span class="line">- log</span><br></pre></td></tr></table></figure><p>分了三个模块，其中Logger模块里面只有一个log初始化的代码；代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Logger.py</span></span><br><span class="line"><span class="keyword">import</span> logging <span class="comment"># 采用logging来替换所有print</span></span><br><span class="line"><span class="keyword">import</span> shutil,os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">LOGGER_NAME = <span class="string">&quot;valorant-test&quot;</span></span><br><span class="line">LOGGER_FILE = <span class="string">&quot;valorant-test.log&quot;</span> <span class="comment"># 如果想修改log文件的名字和路径，修改此变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否已有日志文件，如果有将其移动走</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(LOGGER_FILE):</span><br><span class="line">    new_path = LOGGER_FILE + <span class="string">&quot;.&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time())) +  <span class="string">&quot;.bak&quot;</span></span><br><span class="line">    shutil.move(LOGGER_FILE, new_path) <span class="comment"># 移动文件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[log] Previous log moved to <span class="subst">&#123;new_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化日志模块</span></span><br><span class="line"><span class="comment"># 只打印info以上的日志（debug低于info）</span></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    <span class="built_in">format</span>=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="comment"># 获取一个logger对象</span></span><br><span class="line">_log = logging.getLogger(LOGGER_NAME)</span><br><span class="line"><span class="string">&quot;&quot;&quot;自定义的logger对象&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 1.实例化控制台handler和文件handler，同时输出到控制台和文件</span></span><br><span class="line">file_handler = logging.FileHandler(LOGGER_FILE, mode=<span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">fmt = logging.Formatter(fmt=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line">file_handler.setFormatter(fmt)</span><br><span class="line"><span class="comment"># 添加handler</span></span><br><span class="line">_log.addHandler(file_handler)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Files.py</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_json_file</span>(<span class="params">path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;打开json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        tmp = json.load(f)</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_json_file</span>(<span class="params">path: <span class="built_in">str</span>, value</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;写入json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fw2:</span><br><span class="line">        json.dump(value, fw2, indent=<span class="number">2</span>, sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_file</span>(<span class="params">source:<span class="built_in">str</span>,target:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;拷贝文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> source == target:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    shutil.copy2(source, target)</span><br><span class="line">    _log.info(<span class="string">f&quot;[file] copy file from &#x27;<span class="subst">&#123;source&#125;</span>&#x27; to &#x27;<span class="subst">&#123;target&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_files_list</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取一个目录下所有文件列表，包括子目录</span></span><br><span class="line"><span class="string">    :param dir: 文件路径</span></span><br><span class="line"><span class="string">    :return: 文件列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    files_list = []</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>, topdown=<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            files_list.append(os.path.join(root, file))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> files_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dir</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;创建文件夹&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 如果目标文件目录不存在，创建文件目录</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">        os.mkdir(<span class="built_in">dir</span>)</span><br><span class="line">        _log.info(<span class="string">f&quot;[file] create dir: <span class="subst">&#123;<span class="built_in">dir</span>&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_md5</span>(<span class="params">file_path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    get file md5 by file path</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    chunk_size = <span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>  <span class="comment"># 根据需要调整单块的大小</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_md5 = hashlib.md5()</span><br><span class="line">        <span class="keyword">while</span> chunk := f.read(chunk_size):</span><br><span class="line">            file_md5.update(chunk)</span><br><span class="line">    <span class="keyword">return</span> file_md5.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_size</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获取文件的字节大小&quot;&quot;&quot;</span></span><br><span class="line">    size = os.path.getsize(file_path)</span><br><span class="line">    <span class="keyword">return</span> size</span><br></pre></td></tr></table></figure><p>主文件如下，函数的流程很简单，就是遍历这两个文件夹的所有文件，计算它们的MD5，并将结果通过dict写入一个json文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义包</span></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> Files</span><br><span class="line"><span class="keyword">from</span> utils.Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line">DIR_HK = <span class="string">&quot;E:\GAME\Riot Games\VALORANT\live&quot;</span>  <span class="comment"># 港服</span></span><br><span class="line">DIR_TX = <span class="string">&quot;E:\GAME\Tencent Games\VALORANT\live&quot;</span>  <span class="comment"># 国服</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    遍历两个游戏安装目录的文件，计算md5；</span></span><br><span class="line"><span class="string">    此操作耗时较长。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    hk_file = Files.get_files_list(DIR_HK)</span><br><span class="line">    tx_file = Files.get_files_list(DIR_TX)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file)&#125;</span> files&quot;</span>)</span><br><span class="line"></span><br><span class="line">    hk_file_dict = &#123;&#125;</span><br><span class="line">    tx_file_dict = &#123;&#125;</span><br><span class="line">    <span class="comment"># 遍历港府文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> hk_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        hk_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 遍历国服文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> tx_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        tx_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 写入json文件</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>, hk_file_dict)</span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>, tx_file_dict)</span><br></pre></td></tr></table></figure><p>这个代码的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:27 | [start]</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:30 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:31 | [tx] 967 files</span><br><span class="line">...省略中间遍历的打印</span><br><span class="line">[24-01-19 18:14:23] INFO:test.py:&lt;module&gt;:50 | [success]</span><br></pre></td></tr></table></figure><p>计算完毕md5后，获得了两个json文件，重新加载这两个文件来读取其中内容，遍历判断是否有相同的文件。</p><p>我知道这里多绕了一层，这是因为两个函数不是同时写出来的，我担心第一个函数运行有些问题，所以采用了写入json文件的方式而不是直接用变量存放结果再进行处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_md5_diff_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;展示港服和国服文件差异&quot;&quot;&quot;</span></span><br><span class="line">    hk_file_dict = Files.open_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>)</span><br><span class="line">    tx_file_dict = Files.open_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file_dict)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file_dict )&#125;</span> files&quot;</span>)</span><br><span class="line">    <span class="comment"># 国服的文件较少，遍历国服文件列表，查询是否存在于港服文件中</span></span><br><span class="line">    match_file_dict = &#123;&#125;</span><br><span class="line">    match_count = <span class="number">0</span></span><br><span class="line">    file_name_match_count = <span class="number">0</span> <span class="comment"># 文件名也相同</span></span><br><span class="line">    file_size_sum = <span class="number">0</span> <span class="comment"># 相同文件的字节数量</span></span><br><span class="line">    <span class="comment"># 开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> tx_file <span class="keyword">in</span> tx_file_dict:</span><br><span class="line">        <span class="keyword">for</span> hk_file,hk_md5 <span class="keyword">in</span> hk_file_dict.items():</span><br><span class="line">            <span class="keyword">if</span> tx_file_dict[tx_file] == hk_md5:</span><br><span class="line">                <span class="comment"># 字节数相加</span></span><br><span class="line">                cur_file_size = Files.get_file_size(tx_file)</span><br><span class="line">                file_size_sum += cur_file_size</span><br><span class="line">                <span class="comment"># 打印</span></span><br><span class="line">                _log.info(<span class="string">f&quot;[match] tx:<span class="subst">&#123;tx_file&#125;</span> hk:<span class="subst">&#123;hk_file&#125;</span> | <span class="subst">&#123;hk_md5&#125;</span> | <span class="subst">&#123;cur_file_size&#125;</span> Bytes&quot;</span>)</span><br><span class="line">                match_file_dict[hk_md5] = &#123;</span><br><span class="line">                    <span class="string">&quot;hk_file&quot;</span>:hk_file,</span><br><span class="line">                    <span class="string">&quot;tx_file&quot;</span>:tx_file</span><br><span class="line">                &#125;</span><br><span class="line">                match_count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> hk_file == tx_file:</span><br><span class="line">                    file_name_match_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 结束、打印</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/match_file.json&#x27;</span>,match_file_dict)</span><br><span class="line">    _log.info(<span class="string">f&quot;[match] <span class="subst">&#123;match_count&#125;</span> files | name match:<span class="subst">&#123;file_name_match_count&#125;</span> | total size:<span class="subst">&#123;file_size_sum / (<span class="number">1024</span> * <span class="number">1024</span>)&#125;</span> MB&quot;</span>)</span><br></pre></td></tr></table></figure><p>这个函数的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">... 省去中间部分的打印</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure><p>惊奇的发现，国服和港服的文件里面，只有279个文件的md5是相同的，而且这些文件的名字都不一样，加起来的总大小只有171MB！</p><p>这点大小就没有必要用硬链接来省硬盘容量了🤣。</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>我对游戏制作并不理解，看上去国服还是修改了很多东西的。做这个测试之前，我还以为国服和港服至少能有10GB左右的文件是相同的呢……</p><p>在评论区留下你的看法吧！</p><h3 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h3><details><summary>以下是相同md5文件的完整日志输出</summary><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak | 1a909a4e490c1121c0e01c94be4d8c77 | 6003861 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak | 353041a41d9da52ffefcc37c89dbb83b | 279905 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak | 78cf51888cf52a0f6131e948b2385c62 | 386884 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak | 03e4b627d65ccca6b810b99ef86dc88f | 3565138 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak | 75885f20b96687eb1a91905da87397dd | 5183550 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak | df0db5ceaee6af95c163b3bd22efabc4 | 317735 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak | 22299027a8a31c24a2f667f218163621 | 314031 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak | f6d256329b24a73d131a442fe1bdcd05 | 366595 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak | 37b37cdc6136fc8a0f5232bcaae9443e | 478939 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak | 98c2430f86321e05ffa21fb5de8e0823 | 228122 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak | ba68d98c5741feea3a2a8b3062e6b33c | 231572 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak | 62593b1c724fa2f7909683676e517ee5 | 207739 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak | 87f8df5088cf2e324e0b50a788e41b1e | 226211 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak | 37f2d16ff1e6423fe6c93bb5f3704f78 | 402687 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak | af1aee16186d1f5b808fea62788ba65b | 186958 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak | 32a7083e4afed6cbdd87489bf00fb72e | 186991 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak | 3a5e07e83ab696325194fda667f40adb | 224532 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak | 9a6a00edf4f4aebe264335d32dfbdd5a | 228808 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak | b706ebcee9553e038b82479edccf4165 | 202214 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak | d208ba29eb26f7325f7f055b4e6f3ba0 | 321134 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak | cd2443564cb7216f3a52578c76e83c80 | 211980 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak | ecdd6b5ebe2bd4c7e40a637ebc00f363 | 232070 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak | a0fb5f9fa4237ffcd73fb9a0b75df93f | 243625 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak | af47fe7576ef7f957a3dad4c2dbee25e | 451818 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak | 9b57b3e79446429691b04c848443ec1f | 265463 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak | 48dcfd6dbb6054b00f2eaaa98eb2854d | 460810 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak | 7803ed6631f55e56209a5a82e2c63e9e | 217428 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak | fe1a0fdb4f2102b21306ab175ad07d74 | 239083 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak | 4b8cbfcd0cc3cbd95b46ff927e17d3cc | 201977 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak | 814924c80224d39186d32d876c38a930 | 220397 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak | 49158449aedda1f3b020b5557ac0cf9a | 270807 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak | 8bff968d6f06d429759675eb278fee83 | 519415 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak | 0a73db278ddb5abcbe43ad4066bf239b | 230850 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak | 4a8f1111461833ba54bbf9a2c06d4896 | 234416 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak | 7c763171bdde1a6a8358180ed585034e | 234204 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak | 02809db4176d1a0819562a0c9707b893 | 567612 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak | ce0b8d9a5d379aeef89f4755e283a273 | 456368 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak | 96477cd1228bb45f0597c079492fdace | 208619 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak | 06b059219b57a339f6f324b2ca16ed78 | 205047 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak | b199dfcb09fbbc226c07b4091d654669 | 215699 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak | 9d831f342acb5ec998ba9a7368239759 | 225555 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak | 6d7bca559226543213e0bb122efd95d6 | 221133 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak | fa370bc586055c3f9c518af9d0070e5c | 223472 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak | 00199374b56500de5d89bcb1eaf9bca0 | 229091 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak | 531b7ab45701c376fbb35d09b641c386 | 351003 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak | 36fd894c0d958c754b5544754cb74af8 | 237218 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak | aa47507900c5c6a12074e6b928f8f5eb | 217919 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak | f87c694d5d45e2fce3640d7f10d58f1f | 341731 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak | 536462c950527c7a68b4bdca15feaed9 | 206145 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak | c55b06f4e9b461803bb768a6ffa9100a | 209319 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak | 5885c004fc8bb9a138f5ebdaf2601b2f | 527387 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak | 95479ec9ff43dae880acae39f8c9b710 | 503299 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak | 841f0db1bd81e44ee9825d1d56d34d8a | 438108 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak | 050b25ecc7718e55e3fcec5a7b239d7d | 221774 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak | 3fc1f166ec7c2efa83ef153ad584b78f | 358245 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak | fd23fb189a14b3f9e5dc25d84d6af873 | 254300 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak | 889d29f0d68c8bab9ebf2c7426f3613a | 190714 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak | 59cb5352e750cb44a07eae223f30c3c9 | 192079 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll | 1c9b45e87528b8bb8cfa884ea0099a85 | 2106216 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll | a7675ddea31dbacd14cc6e9199f7641f | 4488904 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat | bc7f54e4df91c9137dced27976228b66 | 10130560 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin | 94855c31f6c24656a6d67ceae0b04cca | 246209 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin | dfb3f71057e263620565783f9f676fb4 | 1562112 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll | a970b7fcc13c18a1998cf65a5b8cb699 | 1868736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll | c5be9b2846ad20b7abf3b1e3afe3f3ff | 3212640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll | 835591acabfb69a6f9dace12711f2243 | 847440 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps | e15c3c2ad82c41935c7ab27b76e58964 | 930 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf | 89454f173319872a5fa975b26d028f9d | 5395052 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll | 43b8ae36fb551bb0226bb59cf21431ce | 49771408 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll | 53a932b4f7819a9e62be4e84a2e808cd | 4327248 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll | 15ee5c7404fa5b6de0eb0c042474d3bf | 1369936 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll | 123404fa3ab377e006e8bb777dc58b36 | 383856 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm | b846e42b7caeadf1854f8739f4966e36 | 588065 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm | 6c0a4b8cabcc30ae3e135a9af7a2df8b | 2729576 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 | 8c1b4ebecd4d973e7520a5eca76d4992 | 46811173 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure></details>]]></content>
    
    
    <summary type="html">突然好奇，想看看valorant（无畏契约）的国服和港服文件有什么差异</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Python" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Python/"/>
    
    
    <category term="Python" scheme="https://blog.musnow.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【win】windows必装软件汇总</title>
    <link href="https://blog.musnow.top/posts/3861578416/"/>
    <id>https://blog.musnow.top/posts/3861578416/</id>
    <published>2024-01-18T09:30:00.000Z</published>
    <updated>2024-01-18T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下我自己使用windows电脑时必装的那些软件，每次配置新电脑这些软件都是必装。</p><p>欢迎评论区交流你常用的软件！</p><h1 id="1-生活日常"><a href="#1-生活日常" class="headerlink" title="1.生活日常"></a>1.生活日常</h1><ul><li>TIM（其实就是QQ，但是不装QQ，新出的QQ9也没有TIM好用）</li><li>微信</li><li>WPS（个人非常需要云同步，而且也充了会员）</li><li>腾讯会议（之前上网课用，现在是面试用）</li><li>网易邮箱大师（网页版老是让我重新登录，干脆下个客户端）</li><li>edge浏览器</li><li>火狐浏览器（备用）</li><li>火绒电脑管家</li><li>foobar2000（听歌）<a href="https://gitee.com/dream7180/foobox-cn">gitee.com&#x2F;dream7180&#x2F;foobox-cn</a></li><li>Adobe PR和PS（偶尔会用）</li><li>光影魔术手（简单处理图片）<a href="http://www.neoimaging.cn/">光影魔术手官方网站</a></li><li>完美解码（看视频用，其实就是potplayer）<a href="https://jm.wmzhe.com/">完美解码官方网站</a></li><li>偶尔用的上todesk和向日葵</li></ul><h1 id="2-软件开发"><a href="#2-软件开发" class="headerlink" title="2.软件开发"></a>2.软件开发</h1><ul><li>VS2019（C++，不过现在基本都是在linux上写代码了）</li><li>VSCODE</li><li>WSL2的CENTOS或UBUNTU</li><li>VMware（比virtualbox性能好太多了）</li><li>Tabby（ssh终端）<a href="https://tabby.sh/">Tabby - a terminal for a more modern age</a></li><li>Python3.10.x <a href="https://www.python.org/downloads/">Download Python | Python.org</a></li><li>nodejs v16.20.2（hexo需要）<a href="https://nodejs.org/dist/v16.20.2/">Index of &#x2F;dist&#x2F;v16.20.2&#x2F;</a></li><li>Git终端 <a href="https://git-scm.com/downloads">Git - Downloads</a></li></ul><h1 id="3-电脑优化和工具"><a href="#3-电脑优化和工具" class="headerlink" title="3.电脑优化和工具"></a>3.电脑优化和工具</h1><ul><li>Geek（绿色卸载软件） <a href="https://geekuninstaller.com/">Geek Uninstaller - the best FREE uninstaller</a></li><li>Bandzip v6.26（旧版本没有广告，可以关闭自动更新。新版虽然有广告，但完全不影响使用）<a href="https://www.bandisoft.com/bandizip/">Windows 版本的 Bandizip · 业内领先的压缩文件解决方案</a></li><li>ShanaEncoder v5.2.2.3 Chs（视频压缩软件）<a href="https://github.com/1265578519/ShanaEncoder/releases">Releases · 1265578519&#x2F;ShanaEncoder</a></li><li>Sanipaste（个人感觉特别好用，唯一缺少的就是长截图，一般都是TIM挂后台用QQ截图来截长屏）<a href="https://zh.snipaste.com/">Snipaste - 截图 + 贴图</a></li><li>Flash国际版（没有广告的flash，QQ需要使用）<a href="https://www.ittel.cn/archives/7327.html">Adobe Flash Player v34.0.0.277 国际版&#x2F;纯净版</a></li><li>MenuMgr_1.1_20130514（右键菜单管理工具，在联想软件商店里面下载）</li><li>图吧工具箱（很多电脑测试软件）<a href="https://www.tbtool.cn/">图吧工具箱 - 最纯净的硬件工具箱</a></li><li>FreeFileSync（文件夹同步和备份软件，用于本机上的两个硬盘备份资料，一个资料在两个盘上都存着）<a href="https://freefilesync.org/">FreeFileSync: Open Source File Synchronization &amp; Backup Software</a></li><li>Caesium Image Compressor（图片压缩软件）<a href="https://saerasoft.com/caesium">Caesium - Image Compressor</a></li><li>Everythings（搜索软件）<a href="https://www.voidtools.com/zh-cn/downloads/">下载 - voidtools</a></li><li>KeePass（密码管理，配合安卓APP <code>Keepass2Android</code> 和 Onedrive 进行多端同步）<a href="https://keepass.info/">KeePass Password Safe</a></li><li>EV录屏（没有水印和广告，录屏比较方便）<a href="https://www.ieway.cn/evcapture.html">EV录屏 - 免费高清无水印的屏幕录制软件</a></li><li>draw.io和xmind（都是画图软件）</li><li>闪豆下载器（下B站视频）</li><li>raidrive&#x2F;cloudrive（挂载云盘，但实际体验感觉不如直接用云盘web页面）<a href="https://www.clouddrive2.com/">CloudDrive - Home</a></li><li>EarTrumpet（便捷调控每个应用的音量，微软商店下载）</li></ul><h1 id="4-游戏"><a href="#4-游戏" class="headerlink" title="4.游戏"></a>4.游戏</h1><p>小心别下假平台了哦</p><ul><li>Steam客户端 <a href="https://store.steampowered.com/">欢迎来到 Steam</a></li><li>Epic客户端 <a href="https://store.epicgames.com/zh-CN/">Epic游戏商城</a></li><li>EA app（这个是在steam上买的EA游戏会捆绑下载的）</li><li>瓦罗兰特国服和港服（国服出了之后很少玩港服了，即便我国服0皮肤）</li><li>LOL（特别少玩）</li><li>逍遥模拟器（手游模拟器，用过的几个模拟器里面性能最好的）<a href="https://www.xyaz.cn/">逍遥安卓模拟器_安卓模拟器电脑版_安卓手游模拟器哪个好用_逍遥手机模拟器官网</a></li><li>雷神减速器（主要是便宜）<a href="https://www.leigod.com/">雷神网游加速器-专线加速游戏,按分钟计费可暂停,免费试用</a></li><li>parsec（远程控制，支持手柄）<a href="https://parsec.app/">Connect to Work or Games from Anywhere | Parsec</a></li><li>steam++（walt toolkits，微软商店可下载）</li><li>msi afterburner（性能监看）<a href="https://www.msi.com/Landing/afterburner/graphics-cards">Afterburner</a></li><li>DirectX-927（很多电脑都缺少这个依赖包，一些游戏就玩不了，目前遇到的是valorant港服缺少该包就无法玩）<a href="https://pan.baidu.com/s/1145Ll8vGtByMW6OKk6Zi2Q">百度网盘-提取码1067</a></li></ul><h1 id="5-笔记"><a href="#5-笔记" class="headerlink" title="5.笔记"></a>5.笔记</h1><ul><li>思源笔记 <a href="https://b3log.org/siyuan/">思源笔记 - 隐私优先的个人知识管理系统，支持 Markdown 排版、块级引用和双向链接</a></li><li>obsidian <a href="https://obsidian.md/">Obsidian - Sharpen your thinking</a></li><li>Typora <a href="https://typoraio.cn/">Typora 官方中文站</a></li><li>Picgo（博客图床）<a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></li></ul><h1 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h1><ul><li>迅雷</li><li>qbittorrent&#x2F;motrix</li><li>tailscale</li></ul>]]></content>
    
    
    <summary type="html">博主个人使用windows时的必装软件</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】hexo-butterfly主题添加装备展示页面</title>
    <link href="https://blog.musnow.top/posts/2383339565/"/>
    <id>https://blog.musnow.top/posts/2383339565/</id>
    <published>2024-01-14T08:03:00.000Z</published>
    <updated>2024-01-14T08:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在翻开往的时候看到了一位老哥的博客里面正好有这个教程，整了一下发现效果还不错！</p><ul><li><a href="https://blog.zhheo.com/p/de771c8e.html">Hexo的Butterfly魔改教程：我的装备，分享你在用的设备 | 张洪Heo</a></li><li><a href="https://b.leonus.cn/2022/custom.html">Hexo博客添加自定义css和js文件 | Leonus</a></li></ul><p>注：文中的代码部分均引用自原博客</p><h1 id="添加文件到hexo-butterfly主题中"><a href="#添加文件到hexo-butterfly主题中" class="headerlink" title="添加文件到hexo-butterfly主题中"></a>添加文件到hexo-butterfly主题中</h1><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>首先，魔改hexo主题最好是用git方式安装的主题，即主题的文件是在你的hexo目录的<code>themes</code>文件夹下，而不是用npm安装的主题（那样安装的主题是在node_modules下，换设备或者更新主题的时候修改会被覆盖）</p><h2 id="添加相关文件"><a href="#添加相关文件" class="headerlink" title="添加相关文件"></a>添加相关文件</h2><h3 id="添加pug文件"><a href="#添加pug文件" class="headerlink" title="添加pug文件"></a>添加pug文件</h3><p>在<code>themes/butterfly/layout/includes/page/equipment.pug</code>中写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#equipment</span><br><span class="line">  if site.data.equipment</span><br><span class="line">    each i in site.data.equipment</span><br><span class="line">      .equipment-item</span><br><span class="line">        h2.equipment-item-title= i.class_name</span><br><span class="line">        .equipment-item-description= i.description</span><br><span class="line">        .equipment-item-content</span><br><span class="line">          each item, index in i.equipment_list</span><br><span class="line">            .equipment-item-content-item</span><br><span class="line">              .equipment-item-content-item-cover</span><br><span class="line">                img.equipment-item-content-item-image(data-lazy-src=url_for(item.image) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;` alt=item.name)</span><br><span class="line">              .equipment-item-content-item-info</span><br><span class="line">                .equipment-item-content-item-name= item.name</span><br><span class="line">                .equipment-item-content-item-specification= item.specification</span><br><span class="line">                .equipment-item-content-item-description= item.description</span><br><span class="line">                .equipment-item-content-item-toolbar</span><br><span class="line">                  if item.link.includes(&#x27;https://&#x27;) || item.link.includes(&#x27;http://&#x27;)</span><br><span class="line">                    a.equipment-item-content-item-link(href= item.link, target=&#x27;_blank&#x27;) 详情</span><br><span class="line">                  else</span><br><span class="line">                    a.equipment-item-content-item-link(href= item.link, target=&#x27;_blank&#x27;) 查看文章</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加pug注册"><a href="#添加pug注册" class="headerlink" title="添加pug注册"></a>添加pug注册</h3><p>在<code>themes\butterfly\layout\page.pug</code>中添加如下修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;equipment&#x27;</span><br><span class="line">  include includes/page/equipment.pug</span><br></pre></td></tr></table></figure><p>我的butterfly主题是未魔改过的4.9.0版本，添加后的page.pug文件如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  #page</span><br><span class="line">    if top_img === false</span><br><span class="line">      h1.page-title= page.title</span><br><span class="line"></span><br><span class="line">    case page.type</span><br><span class="line">      when &#x27;tags&#x27;</span><br><span class="line">        include includes/page/tags.pug</span><br><span class="line">      when &#x27;link&#x27;</span><br><span class="line">        include includes/page/flink.pug</span><br><span class="line">      when &#x27;categories&#x27;</span><br><span class="line">        include includes/page/categories.pug</span><br><span class="line">      when &#x27;equipment&#x27;</span><br><span class="line">        include includes/page/equipment.pug</span><br><span class="line">      default</span><br><span class="line">        include includes/page/default-page.pug</span><br><span class="line"></span><br><span class="line">    if page.comments !== false &amp;&amp; theme.comments &amp;&amp; theme.comments.use</span><br><span class="line">      - var commentsJsLoad = true</span><br><span class="line">      !=partial(&#x27;includes/third-party/comments/index&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br></pre></td></tr></table></figure><h3 id="添加css文件和引用"><a href="#添加css文件和引用" class="headerlink" title="添加css文件和引用"></a>添加css文件和引用</h3><p>在<code>source</code>中创建一个equipment文件夹，方便定位新添加文件。在equipment文件夹中添加equipment.css文件。</p><p>该文件的完整路径为<code>source/equipment/equipment.css</code>，内容如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 我的装备 */</span></span><br><span class="line"><span class="selector-class">.equipment-item-content</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">8px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">25%</span> - <span class="number">12px</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always);</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-card-bg);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--heo-shadow-border);</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1200px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">12px</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-info</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span> <span class="number">16px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-name</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">width</span>: fit-content;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-specification</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-description</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    -webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">    -webkit-box-orient: vertical;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.equipment-item-content-item-link</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-gray-op);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.equipment-item-content-item-link</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-main);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-white);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h2</span><span class="selector-class">.equipment-item-title</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-description</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-cover</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-secondbg);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">img</span><span class="selector-class">.equipment-item-content-item-image</span> &#123;</span><br><span class="line">    <span class="attribute">object-fit</span>: cover;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#equipment</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">26px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-toolbar</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.bber-reply</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在butterfly的配置文件中添加css的引用，这里我添加到了head部分中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># 装备页面的css</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/equipment/equipment.css?1&quot;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加index文件"><a href="#添加index文件" class="headerlink" title="添加index文件"></a>添加index文件</h3><p>在<code>source/equipment</code>中添加<code>index.md</code>文件，写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的装备</span><br><span class="line">date: 2020-07-22 00:45:12</span><br><span class="line">aside: false</span><br><span class="line">type: equipment</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这里的标题可以根据你的需要修改。</p><h3 id="添加data文件（配置）"><a href="#添加data文件（配置）" class="headerlink" title="添加data文件（配置）"></a>添加data文件（配置）</h3><p>随后就是data文件的添加了，这部分和link里面的友链配置很类似。</p><p>在<code>source/data</code>文件夹下添加<code>equipment.yml</code>文件，并写入如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">生产力</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">提升自己生产效率的硬件设备</span></span><br><span class="line">  <span class="attr">equipment_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">翻新</span> <span class="string">MacBookPro</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">M1Pro</span> <span class="string">32G</span> <span class="string">/</span> <span class="string">1TB</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">屏幕显示效果好、色彩准确、对比度强、性能强劲、续航优秀。可以用来开发和设计。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/YnW8cc2150681686120255749.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://blog.zhheo.com/p/daebc472.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">iPhone</span> <span class="number">13</span> <span class="string">Pro</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">白色</span> <span class="string">/</span> <span class="string">256G</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">第一代支持promotion的iPhone，A15性能优秀。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/TofzQM2219061686120261484.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.apple.com/by/iphone-13-pro/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">米物多模键盘85</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">无线蓝牙</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">一款可以同时连接多个设备的键盘，适配windows和mac，按键中间空隙合适，圆形按键比较好看。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/1OXX4d2179068168614817390.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://item.jd.com/100012980718.html</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">出行</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">用来出行的实物及设备</span></span><br><span class="line">  <span class="attr">equipment_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">航宇之星双肩包</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">标准版</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">造型炫酷，包的容量非常大，还有魔术贴位置，我贴上了鸡哥的头像。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/20jaBU2179061686121157367.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://detail.meizu.com/item/pasasjb.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">魅族重塑斜挎包</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">标准版</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">一款轻便小巧的斜挎包，虽然体积比较小，能放的东西少，但是非常好看。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/wCvvZ82359068686121235468.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://detail.meizu.com/item/pandaerxkb.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">素乐W12</span> <span class="string">磁吸充电宝</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">布朗熊</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">尺寸非常的小，在吸13pro的时候没有任何多余出来的部分。支持lighting充电。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/76rbNh2049068686121144539.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://item.jd.com/100045568421.html</span></span><br></pre></td></tr></table></figure><p>注意，这里面的图片链接都是源博主heo的博客链接，它们都有防盗链，所以在你的本地测试中应该是无法访问这些图片的，这都是正常情况。你应该根据自己的需要将其替换成你自己的图片。</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>效果还是很不错的，虽然没有原博主使用的主题中那么炫酷，但作为一个展示页面肯定是够用啦！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/07c0e034a4f0bef1e1aa76c09a55baff.png" alt="image.png"></p><p>这里我发现了一个问题，就是整个框框没有描边，边界感很差，甚至说看不到哪里是边界。为了更好的辨认每一个框框，我们可以修改一下原博主的css文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.equipment-item-content-item</span>&#123;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#585858</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将原本的css文件中如上部分里面的border修改一下就可以了，颜色根据你的喜好调整。有了描边之后，看起来会舒服一些！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/65a39a71c2393.png"></p><p>改成我自己的图片后的最终效果</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/65a3a66b3b50c.png"></p>]]></content>
    
    
    <summary type="html">hexo-butterfly主题添加装备展示页面</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="博客建站" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【C++】std::chrono::duration的含义和用法</title>
    <link href="https://blog.musnow.top/posts/2910129003/"/>
    <id>https://blog.musnow.top/posts/2910129003/</id>
    <published>2024-01-12T01:30:30.000Z</published>
    <updated>2024-01-12T01:30:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p><code>std::choro::duration</code>是C++11引入的一个用于计算时间滴答周期的类，与之配合使用的是<code>std::ratio</code>类，该类是一个分数类，为精确表示分数提供了一个方式。</p><h1 id="2-std-ratio"><a href="#2-std-ratio" class="headerlink" title="2.std::ratio"></a>2.std::ratio</h1><p>我们知道，对于计算机来说，使用浮点类型是会有精度缺失的。所以<code>std::ratio</code>类便提供了分子和分母，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    std::<span class="type">intmax_t</span> Num,</span><br><span class="line">    std::<span class="type">intmax_t</span> Denom = <span class="number">1</span></span><br><span class="line">&gt; <span class="keyword">class</span> ratio;</span><br></pre></td></tr></table></figure><p>该类的模板定义如下，Num是分子，Denom是分母。不传入分母的时候，分母默认为1。</p><p>假设我们需要表示1秒的千分之一（即一毫秒）就可以用如下方式来定义一个ratio</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> ratio&lt;<span class="number">1</span>,<span class="number">1000</span>&gt; milli;</span><br></pre></td></tr></table></figure><p>代表<code>1/1000</code>这个分数；</p><h2 id="cpp中自带的几个ratio"><a href="#cpp中自带的几个ratio" class="headerlink" title="cpp中自带的几个ratio"></a>cpp中自带的几个ratio</h2><p>为了方便标识单位之间的差距（单位换算），cpp中预定义了一些常用的ratio</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">typedef ratio&lt;1,       1000000000000000000&gt; atto;</span><br><span class="line">typedef ratio&lt;1,          1000000000000000&gt; femto;</span><br><span class="line">typedef ratio&lt;1,             1000000000000&gt; pico;</span><br><span class="line">typedef ratio&lt;1,                1000000000&gt; nano;</span><br><span class="line">typedef ratio&lt;1,                   1000000&gt; micro;</span><br><span class="line">typedef ratio&lt;1,                      1000&gt; milli;</span><br><span class="line">typedef ratio&lt;1,                       100&gt; centi;</span><br><span class="line">typedef ratio&lt;1,                        10&gt; deci;</span><br><span class="line">typedef ratio&lt;                       10, 1&gt; deca;</span><br><span class="line">typedef ratio&lt;                      100, 1&gt; hecto;</span><br><span class="line">typedef ratio&lt;                     1000, 1&gt; kilo;</span><br><span class="line">typedef ratio&lt;                  1000000, 1&gt; mega;</span><br><span class="line">typedef ratio&lt;               1000000000, 1&gt; giga;</span><br><span class="line">typedef ratio&lt;            1000000000000, 1&gt; tera;</span><br><span class="line">typedef ratio&lt;         1000000000000000, 1&gt; peta;</span><br><span class="line">typedef ratio&lt;      1000000000000000000, 1&gt; exa;</span><br></pre></td></tr></table></figure><p>我们可以用类作用域符号<code>::</code>来访问到这些比例的分子和分母。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; std::centi::num &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; std::centi::den &lt;&lt; std::endl;</span><br><span class="line"><span class="comment">// 运行结果为 1/100</span></span><br></pre></td></tr></table></figure><h1 id="3-std-chrono-duration"><a href="#3-std-chrono-duration" class="headerlink" title="3.std::chrono::duration"></a>3.std::chrono::duration</h1><p>这个类是用来表示一个时间的周期&#x2F;长度的，其基于1s为基本单位，用ratio来表示和1s相比的偏移量。</p><p>在cppreference上的介绍如下</p><blockquote><p>Class template std::chrono::duration represents a time interval.<br>It consists of a count of ticks of type Rep and a tick period, where the tick period is a compile-time rational constant representing the number of seconds from one tick to the next.<br>The only data stored in a duration is a tick count of type Rep. If Rep is floating point, then the duration can represent fractions of ticks. Period is included as part of the duration’s type, and is only used when converting between different durations.</p></blockquote><p>该类的定义如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Rep</span>,</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Period</span> = std::ratio&lt;<span class="number">1</span>&gt;</span><br><span class="line">&gt; <span class="keyword">class</span> duration;</span><br></pre></td></tr></table></figure><p>其中Rep是一个变量类型，可以传入int、float、double等类型；</p><p>Period是一个<code>std::ratio</code>，可以传入基于一秒的比例，这个比例就代表了时间的单位;</p><h2 id="cpp中自带的几个chrono"><a href="#cpp中自带的几个chrono" class="headerlink" title="cpp中自带的几个chrono"></a>cpp中自带的几个chrono</h2><p>为了方便我们使用，cpp中自带了几个用于表示时间的chrono的定义</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/// nanoseconds</span></span><br><span class="line">    <span class="keyword">using</span> nanoseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, nano&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// microseconds</span></span><br><span class="line">    <span class="keyword">using</span> microseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, micro&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// milliseconds</span></span><br><span class="line">    <span class="keyword">using</span> milliseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, milli&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// seconds</span></span><br><span class="line">    <span class="keyword">using</span> seconds= duration&lt;_GLIBCXX_CHRONO_INT64_T&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// minutes</span></span><br><span class="line">    <span class="keyword">using</span> minutes= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt; <span class="number">60</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// hours</span></span><br><span class="line">    <span class="keyword">using</span> hours= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">3600</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt; 201703L</span></span><br><span class="line">    <span class="comment">/// days</span></span><br><span class="line">    <span class="keyword">using</span> days= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">86400</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// weeks</span></span><br><span class="line">    <span class="keyword">using</span> weeks= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">604800</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// years</span></span><br><span class="line">    <span class="keyword">using</span> years= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">31556952</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// months</span></span><br><span class="line">    <span class="keyword">using</span> months= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">2629746</span>&gt;&gt;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// C++20</span></span></span><br></pre></td></tr></table></figure><p>代码里面出现的宏定义其实就是<code>int64_t</code>的别名。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">define</span> _GLIBCXX_CHRONO_INT64_T int64_t</span></span><br></pre></td></tr></table></figure><p>这些变量之前在学习C++线程休眠的时候就已经遇到过了，从中也能看到<code>std::ratio</code>在chrono中代表的比例关系，比如一小时是3600秒，那么就需要传入比例<code>std::ratio&lt;3600,1&gt;</code>，上面的代码里面省略了1是因为ratio的分母缺省值就是1。</p><h2 id="代码示例1"><a href="#代码示例1" class="headerlink" title="代码示例1"></a>代码示例1</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">int</span>, std::ratio&lt;<span class="number">1</span>, <span class="number">100000000</span>&gt;&gt; shakes;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">int</span>, std::centi&gt; jiffies;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">float</span>, std::ratio&lt;<span class="number">12096</span>,<span class="number">10000</span>&gt;&gt; microfortnights;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">float</span>, std::ratio&lt;<span class="number">3155</span>,<span class="number">1000</span>&gt;&gt; nanocenturies;</span><br><span class="line"> </span><br><span class="line">    std::<span class="function">chrono::seconds <span class="title">sec</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;1 second is:\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;shakes&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; shakes\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;jiffies&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; jiffies\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;microfortnights&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; microfortnights\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;nanocenturies&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; nanocenturies\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码示例运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++ test.cpp -o test -std=c++17 &amp;&amp; ./test</span><br><span class="line">1 second is:</span><br><span class="line">100000000 shakes</span><br><span class="line">100 jiffies</span><br><span class="line">0.82672 microfortnights</span><br><span class="line">0.316957 nanocenturies</span><br></pre></td></tr></table></figure><p>我们能看到，第一个里面传入的比例是<code>1/100000000</code>，这就代表1秒包含了100000000个shakes，假设我们需要一个休眠<code>1/100000000</code>秒的操作，就可以通过<code>std::this_thread::sleep_for</code>和这个shakes变量来进行精确的定时休眠。</p><h2 id="代码示例2"><a href="#代码示例2" class="headerlink" title="代码示例2"></a>代码示例2</h2><p>让当前线程休眠100毫秒，有几种不同的方式，都是等价的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">milliseconds</span>(<span class="number">100</span>)); </span><br><span class="line">    <span class="comment">// or </span></span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">duration</span>&lt;<span class="type">long</span> <span class="type">long</span>, std::milli&gt;(<span class="number">100</span>)); </span><br><span class="line">    <span class="comment">// or   </span></span><br><span class="line">    <span class="comment">// typedef ratio&lt;1, 1000&gt; milli; </span></span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::duration&lt;<span class="type">long</span> <span class="type">long</span>, std::ratio&lt;<span class="number">1</span>, <span class="number">1000</span>&gt; &gt;(<span class="number">100</span>)); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="4-std-chrono-duration-cast"><a href="#4-std-chrono-duration-cast" class="headerlink" title="4.std::chrono::duration_cast"></a>4.std::chrono::duration_cast</h1><p>为了方便在不同的时间单位之间进行转换，CPP提供了一个特殊的cast来进行处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::chrono::<span class="built_in">duration_cast</span>&lt;目标类型&gt;(源类型对象);</span><br></pre></td></tr></table></figure><p>比如可以用下面的代码将3秒转换为毫秒，注意圆括号里面的传参是源类型的一个对象，不能只传入类型（那样就不是变量类型转换了）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::chrono::milliseconds ms = std::chrono::<span class="built_in">duration_cast</span>&lt;std::chrono::milliseconds&gt;(std::chrono::<span class="built_in">minutes</span>(<span class="number">3</span>));</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;3 minutes equals to &quot;</span> &lt;&lt; ms.<span class="built_in">count</span>() &lt;&lt; <span class="string">&quot; milliseconds\n&quot;</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++ test.cpp -o test -std=c++17 &amp;&amp; ./test</span><br><span class="line">3 minutes equals to 180000 milliseconds</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>基本要了解的内容就这些了。</p><p>参考文档</p><ul><li><a href="https://www.cnblogs.com/bianchengnan/p/9478638.html">C++新标准之std::chrono::duration - BCN - 博客园</a></li><li><a href="https://tool.oschina.net/uploads/apidocs/cpp/en/cpp/chrono/duration.html">std::chrono::duration - cppreference.com</a></li><li><a href="https://tool.oschina.net/uploads/apidocs/cpp/en/cpp/numeric/ratio/ratio.html">std::ratio - cppreference.com</a></li></ul>]]></content>
    
    
    <summary type="html">std中chrono::duration的含义和用法</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="C++" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/C/"/>
    
    
    <category term="Cpp" scheme="https://blog.musnow.top/tags/Cpp/"/>
    
    <category term="Cpp11" scheme="https://blog.musnow.top/tags/Cpp11/"/>
    
  </entry>
  
  <entry>
    <title>【博客】个人独立博客站点在写博客的时候应该注意什么？</title>
    <link href="https://blog.musnow.top/posts/2118926128/"/>
    <id>https://blog.musnow.top/posts/2118926128/</id>
    <published>2024-01-11T06:49:00.000Z</published>
    <updated>2024-01-11T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人独立博客站点在写博客的时候应该注意什么？</p></blockquote><p>这个问题是我对技术类个人博客写作时的纯主观见解，各位就图一乐看看，谢谢。</p><h2 id="1-把读者当作第一次看相关技术文章"><a href="#1-把读者当作第一次看相关技术文章" class="headerlink" title="1.把读者当作第一次看相关技术文章"></a>1.把读者当作第一次看相关技术文章</h2><p>这一点其实<strong>很难</strong>做到，包括我在本站写的很多博客都<strong>并没有做到这一点</strong>。</p><p>所谓把读者当作第一次看相关技术文章，举个例子：你写了一篇部署某某docker容器的教程，那么理应在博客中涉及如何在Linux主机上安装docker的教程部分。</p><blockquote><p>这个安装docker的教程部分可以直接添加至文章内，或者单独写一篇文章，把链接放在该文开头。</p></blockquote><p>这样做有什么好处？除了让别人能点击链接看你的站点里面的另外一篇文章，更重要的是保证读者在看你这篇文章的时候，不需要去额外搜索其他的东西。</p><p>之前在<a href="https://blog.musnow.top/posts/4065446782">WSL安装CENTOS8</a>的博客中我就吐槽过这个问题。我找到的资料原文作者图文不对应，用着win11的电脑写着win10的步骤（步骤是错的），整个设置和开启的过程也没有图片，很让人无语。</p><p>对于使用windows系统比较熟练，知道怎么找设置选项的读者来说，这并不是神马大问题。但是对于很多刚入门编程学习的小白来说，图文不对只会让人感到困惑，最终还是得去搜其他资料，找怎么在win11里面开启wsl。</p><p>而原博主只需要多花30秒把那个win10的步骤改成win11的，就能节省读者去搜索另外一篇博客的时间。</p><p>同理，如果我想使用minio这个项目，发现最好的部署方式是docker部署，但我的主机上没有docker，此时我就得搜索两篇博客</p><ol><li>如何在linux上安装docker</li><li>如何在docker里面安装minio</li></ol><p>但实际查询资料的时候，以我个人为例，我都是先搜到第二个问题，再回过头去搜第一个问题的。如果我搜到的第二个问题的博客里面，作者引用或者介绍了如何安装docker的方式，那么我就不需要去额外搜索第一个问题了，这便是给读者节省了时间。</p><h2 id="2-减少博客里面的图片数量"><a href="#2-减少博客里面的图片数量" class="headerlink" title="2.减少博客里面的图片数量"></a>2.减少博客里面的图片数量</h2><p>这个是根据不同类型的博客而言的， 对于很多教程类博客而言，图片&#x2F;步骤截图是不可或缺的。</p><p>但是对于Linux类、代码编程类的博客而言，完全可以用代码块来替代图片。比如简单测试程序的运行结果，完全没必要截图，而是可以直接用代码块展示结果。在一些情况下可以做到整篇博客完全不需要截图。</p><p>减少图片数量的好处：</p><ol><li>用户加载博客的时间缩短；</li><li>图床压力减少；</li><li>博客“失效”概率降低；</li></ol><p>所谓博客失效，就是有些教程博客中的图片不见或者加载不出来了，直接导致这篇博客废掉了。如果博客中图片数量较少，对博客有效性的影响就更低，博客失效的概率也就降低了。</p><h2 id="3-避免豆腐块"><a href="#3-避免豆腐块" class="headerlink" title="3.避免豆腐块"></a>3.避免豆腐块</h2><p>这其实是从学生阶段学到的东西，即写任何长段文字的时候都应该<strong>分点分段</strong>。</p><p>有些文章一上去整个豆腐块扒在那里，没有分段，看的巨难受。更有甚者连标点都没几个……</p><h2 id="4-拒绝半途而废"><a href="#4-拒绝半途而废" class="headerlink" title="4.拒绝半途而废"></a>4.拒绝半途而废</h2><p>有些博文非常奇怪啊，写到一半戛然而止，非常怀疑是爬虫没有把后半部分爬出来……</p><h2 id="5-说清楚版本号"><a href="#5-说清楚版本号" class="headerlink" title="5.说清楚版本号"></a>5.说清楚版本号</h2><p>环境部署、程序安装等等教程的时候，一定要在博客里面写清楚你当前使用的系统的版本号，很多时候一些不兼容问题就是版本号对不上导致的。</p><h2 id="6-写明结果"><a href="#6-写明结果" class="headerlink" title="6.写明结果"></a>6.写明结果</h2><p>最简单的一个例子，leetcode的一篇题解博客，你应该给出leetcode通过的截图。我就遇到过题解里面思路啪啪啪一顿输出，结果最终的代码复制粘贴过去都没办法通过的。</p><p>代码没办法通过可能是leetcode更改了测试用例，也有可能是题目要求有变化。</p><p>如果你在文章里面贴了leetcode通过截图，读者就不会把问题怀疑到你身上。但如果没有，我就得吐槽一下：“怎么有人代码都没办法通过还好意思发题解的啊？”</p><p>写明结果，避免误会。有头有尾才能令人信服。</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>暂时就想到这么多，后续能想到其他的再来补充。</p>]]></content>
    
    
    <summary type="html">个人独立博客站点在写博客的时候应该注意什么？谈谈我的个人想法</summary>
    
    
    
    <category term="随便写写" scheme="https://blog.musnow.top/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
    
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【2024】新年快乐！</title>
    <link href="https://blog.musnow.top/posts/2404659746/"/>
    <id>https://blog.musnow.top/posts/2404659746/</id>
    <published>2023-12-31T16:00:00.000Z</published>
    <updated>2023-12-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>给所有阅读本站文章的朋友们道一声，2024 新年快乐！</p><h2 id="新年目标"><a href="#新年目标" class="headerlink" title="新年目标"></a>新年目标</h2><p>新年新目标</p><ul><li><input disabled="" type="checkbox"> 完成一个新的个人项目（cpp）</li><li><input disabled="" type="checkbox"> 填mysql博客的坑（之前没有写完）</li><li><input disabled="" type="checkbox"> 填cpp哈希、B树、图等数据结构博客的坑</li><li><input disabled="" type="checkbox"> 学习redis</li><li><input disabled="" type="checkbox"> 学习docker</li></ul><p>更多的目标就不记录啦，学完这些差不多就要准备暑期实习或者是2024的秋招了，祝我好运吧！</p><ul><li><input disabled="" type="checkbox"> 拿到一个中大厂的offer</li></ul><p>也希望大家在2024能心想事成哦！</p>]]></content>
    
    
    <summary type="html">新年快乐，新年新目标</summary>
    
    
    
    <category term="随便写写" scheme="https://blog.musnow.top/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
    
    
    <category term="随笔" scheme="https://blog.musnow.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】使用cloudflare pages自动化部署hexo</title>
    <link href="https://blog.musnow.top/posts/1673796161/"/>
    <id>https://blog.musnow.top/posts/1673796161/</id>
    <published>2023-12-30T03:53:00.000Z</published>
    <updated>2023-12-30T03:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将教您使用cloudflare pages来白嫖部署hexo博客。</p><h1 id="1-注册cloudflare"><a href="#1-注册cloudflare" class="headerlink" title="1.注册cloudflare"></a>1.注册cloudflare</h1><p>这部分就省略了，用邮箱注册就可以了</p><p>cloudflare pages的免费版本功能如下：</p><ul><li>并发构建数：1（如果有多个pages，同一时刻只能进行其中一个的构建）</li><li>每月构建数：500（每个月只能帮你构建500次）</li><li>自定义域名：100个</li><li>一个pages最多20,000个文件</li><li>最大单个文件限制：25MB</li><li>每日限制函数请求数：100,000次（超出后会失败）</li><li>静态文件请求次数：无限</li></ul><p>这些限制对于一个过气（压根没人看）的个人博客来说绰绰有余了，而且cloudflare的防护能力在哪里，被盗刷访问量的几率并不大。而且静态文件的访问次数是没有做任何限制的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/121a43bdac3a64ed8fae7f5e34054a58.png" alt="image.png"></p><h1 id="2-配置cloudflare-pages"><a href="#2-配置cloudflare-pages" class="headerlink" title="2.配置cloudflare pages"></a>2.配置cloudflare pages</h1><blockquote><p>参考官方文档：<a href="https://developers.cloudflare.com/pages/framework-guides/deploy-a-hexo-site/">Deploy a Hexo site · Cloudflare Pages docs</a><br>请注意，官方文档中的部署命令有错误！</p></blockquote><p>在你的账户主页，点击左侧的<code>workers &amp; pages</code>，随后点击页面上的Pages</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/26ef2613c1017dd5d58251da57455cf1.png" alt="image.png"></p><p>随后点击<code>connect to git</code>，绑定你的GitHub或者Gitlab账户。我选择绑定GitHub，这里的绑定操作就点几下的事情（我忘记截图了）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/b880b8fbde854fabf636a37aa4cbf350.png" alt="image.png"></p><p>绑定了账户后可以在这里看到你的仓库。我的hexo在github上有两个仓库，一个是hexo源配置的仓库，包括md源文件和主题等配置项，另外一个是<code>github.io</code>静态文件的仓库，是从本地使用<code>hexo d</code>命令推送到github上的。这里要选择的应该是hexo原配置仓库，这样你的md文件有变动就会触发更新，而<strong>不需要</strong>手动执行<code>hexo d</code>；</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/21d34f7229729c691158a20f7c9011d5.png" alt="image.png"></p><p>选择了之后，会弹出来让你选择分支、部署命令、发布页面</p><ul><li>分支：根据你自己的情况选择</li><li>Framework perset：这里面没有hexo，保留为None即可</li><li>部署命令：<code>npm run build</code></li><li>发布页面：public</li></ul><p>配置如下图所示</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/0dba6b6bba9866f17fb46f7038a761dc.png" alt="image.png"></p><p>请注意，在cf的官方文档里面，提到部署命令使用<code>hexo generate</code>，这是错误的！因为该命令会报错找不到hexo，无法正常部署！如下便是我依照官方文档使用了<code>hexo generate</code>命令之后的错误输出，报错了<code>hexo: not found</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">11:50:19.363Some issues need review, and may require choosing</span><br><span class="line">11:50:19.363a different dependency.</span><br><span class="line">11:50:19.363</span><br><span class="line">11:50:19.363Run `npm audit` for details.</span><br><span class="line">11:50:19.383Executing user command: hexo generate</span><br><span class="line">11:50:19.391/bin/sh: 1: hexo: not found</span><br><span class="line">11:50:19.393Failed: Error while executing user command. Exited with error code: 127</span><br><span class="line">11:50:19.400Failed: build command exited with code: 1</span><br><span class="line">11:50:20.318Failed: error occurred while running build command</span><br></pre></td></tr></table></figure><p>使用<code>npm run build</code>就能正常部署，稍等几分钟你就能获得一个链接，博客就部署成功了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/1c9b8ffb986a339743d2a77b435f5cae.png" alt="image.png"></p><p>点击<code>Custom domains</code>来配置你的自定义域名，因为我的主域名并没有在cloudflare上使用，所以这里得选择右侧的<code>my dns provider</code>来配置CNAME解析。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/230c4ea14e1c6b459371f23fccd61c8b.png" alt="image.png"></p><p>去你的域名控制台添加对应CNAME即可，添加CNAME解析后，点击下方的<code>check DNS records</code>验证是否配置成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/65555144cd179ce2be9ada8298fadad5.png" alt="image.png"></p><p>成功了之后你就可以用自定义域名来访问这个cloudflare pages了，而且ssl证书也会自动部署，不需要我们做任何额外操作。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>cf的这个配置还是挺简单的，不过有个缺点就是国内cf的访问速度很捉急，甚至有可能打不开。不过hexo静态博客的优势在于我们可以弄一大堆镜像站，这样主站挂了也不担心😜。</p><p>如果你是本站的访问者，本站的站点分布如下，只需要在域名的blog后面加个数字即可，还是很好记住的。如果哪天你发现主站打不开了，可以试试其他镜像站，总有一个能打开的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">blog.msunow.top   主站（又拍云CDN）</span><br><span class="line">blog1.musnow.top  netlify部署（主站回源站）</span><br><span class="line">blog2.musnow.top  vercel部署</span><br><span class="line">blog3.musnow.top  cloudflare pages部署</span><br><span class="line">musnows.github.io</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用cloudflare pages自动化部署hexo</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="博客建站" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
    <category term="cloudflare" scheme="https://blog.musnow.top/tags/cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】hexo-butterfly主题添加非主站提示</title>
    <link href="https://blog.musnow.top/posts/3865345902/"/>
    <id>https://blog.musnow.top/posts/3865345902/</id>
    <published>2023-12-29T13:42:00.000Z</published>
    <updated>2023-12-29T14:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>因为hexo可以很方便的在多个平台上免费部署，为了让自己的博客能uptime更久一段时间，很多老哥都和我一样，把自己的hexo博客在好多个平台上都部署了一份。</p><p>但是我一直想要一个功能，就是在别人访问的不是主站点的时候，提示他们，并让他们帮你查查主站是不是down了。这个功能即本文标题所述的“非主站提醒”</p><h2 id="js脚本实现"><a href="#js脚本实现" class="headerlink" title="js脚本实现"></a>js脚本实现</h2><p>其实实现起来并不复杂，一个js脚本就可以实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 直接定义允许的域名</span></span><br><span class="line">    <span class="keyword">const</span> allowedDomain = <span class="string">&quot;blog.musnow.top&quot;</span>;  <span class="comment">// 替换为你的主站域名</span></span><br><span class="line">    <span class="comment">// 获取当前页面的域名</span></span><br><span class="line">    <span class="keyword">const</span> currentDomain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hostname</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查域名是否匹配</span></span><br><span class="line">    <span class="keyword">if</span> (currentDomain !== allowedDomain) &#123;</span><br><span class="line">        <span class="comment">// 创建横幅提醒</span></span><br><span class="line">        <span class="keyword">const</span> banner = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        banner.<span class="property">id</span> = <span class="string">&quot;domainMismatchBanner&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态生成链接</span></span><br><span class="line">        <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        link.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + allowedDomain; <span class="comment">// 指向主站的链接</span></span><br><span class="line">        link.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;  <span class="comment">// 在新窗口或标签页中打开链接</span></span><br><span class="line">        link.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;#b8dbff&quot;</span>;</span><br><span class="line">        link.<span class="property">style</span>.<span class="property">textDecoration</span> = <span class="string">&quot;underline&quot;</span>;</span><br><span class="line">        link.<span class="property">innerText</span> = <span class="string">&quot;主站&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将链接添加到横幅内容中</span></span><br><span class="line">        banner.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;您当前访问的是镜像站，如果&quot;</span>));</span><br><span class="line">        banner.<span class="title function_">appendChild</span>(link);</span><br><span class="line">        banner.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;无法访问，请联系站长，感谢！&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将横幅应用CSS样式</span></span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&quot;#fb7070&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;#fff&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">textAlign</span> = <span class="string">&quot;center&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&quot;3px&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">bottom</span> = <span class="string">&quot;0&quot;</span>;  <span class="comment">// 将top改为bottom</span></span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;1000&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将横幅添加到body</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(banner);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把这个脚本复制，在hexo配置目录的<code>source</code>文件夹下创建一个<code>js</code>文件夹，将该脚本命名为<code>domain_check.js</code>并放入文件夹。</p><p>随后使用hexo-butterfly自带的head和bottom注入功能来引用这个脚本，建议在bottom里面引用。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line"><span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/domain_check.js&quot;&gt;&lt;/script&gt;</span> <span class="comment"># 检查域名是否正确</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>效果如下，当访问主站的时候，不会有提示。当访问blog1这个镜像站的时候，就会有底部横幅提示。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/c206a11cd20c1ed3c2c53426af98f8cf.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/3c9b5b103312292c4291ea7227c9d3c8.png" alt="image.png"></p><p>手机上的效果也不差，对于一个提示来说足够了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/613c2fdcae443442a359b29d7a09e097.jpg" alt="Screenshot_20231229_214855.jpg"></p>]]></content>
    
    
    <summary type="html">给hexo-butterfly主题添加非主站提示</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="博客建站" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
