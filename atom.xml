<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>慕雪的寒舍</title>
  
  <subtitle>雪下了一夜</subtitle>
  <link href="https://blog.musnow.top/atom.xml" rel="self"/>
  
  <link href="https://blog.musnow.top/"/>
  <updated>2024-02-10T08:51:22.000Z</updated>
  <id>https://blog.musnow.top/</id>
  
  <author>
    <name>慕雪年华</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Redis】基本命令学习（未完成）</title>
    <link href="https://blog.musnow.top/posts/3677820204/"/>
    <id>https://blog.musnow.top/posts/3677820204/</id>
    <published>2024-02-10T08:33:30.000Z</published>
    <updated>2024-02-10T08:51:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>学习Redis的命令可以参考官网文档：<a href="https://redis.io/commands">Commands | Redis</a></p><h1 id="1-set和get"><a href="#1-set和get" class="headerlink" title="1.set和get"></a>1.set和get</h1><p>在redis中，最常用的就是这两个命令。顾名思义，set是用来设置key值的，get是用来获取某个key值的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set key value</span><br><span class="line">get key</span><br></pre></td></tr></table></figure><p>在redis中不区分命令的大小写（但是区分key和value的大小写），字符串也不需要加引号（如果有空格就需要加）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; set key1 value1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; set key2 value2</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get key2</span><br><span class="line">&quot;value2&quot;</span><br><span class="line">127.0.0.1:6379&gt; get key3</span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; get KEY2</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure><p>最后的key3是一个不存在的键值，Redis返回了<code>(nil)</code>，意思和NULL其实一样，就是没有值。同时大写的KEY2也没有值，因为Redis中的Key需要区分大小写。</p><h1 id="2-keys"><a href="#2-keys" class="headerlink" title="2.keys"></a>2.keys</h1><p>keys命令用于查询当前Redis中的key值有哪些，如果匹配不上则返回<code>empty array</code>。</p><p>命令格式如下，<a href="https://redis.io/commands/keys/">KEYS | Redis</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keys [pattern]</span><br></pre></td></tr></table></figure><p>其中参数pattern是一个字符串，类似于正则表达式，用来匹配Redis中已有的key的名称。</p><p>举个最简单的例子，<code>key*</code>代表匹配以key开头的所有键值，可以看到当前我的Redis有上文set的两个key。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys key*</span><br><span class="line">1) &quot;key1&quot;</span><br><span class="line">2) &quot;key2&quot;</span><br></pre></td></tr></table></figure><p>pattern支持的格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">h?llo     matches hello, hallo and hxllo</span><br><span class="line">问号只匹配一个字符</span><br><span class="line"></span><br><span class="line">h*llo     matches hllo and heeeello</span><br><span class="line">星号代表匹配无数个字符</span><br><span class="line"></span><br><span class="line">h[ae]llo  matches hello and hallo, but not hillo</span><br><span class="line">匹配a或者e这两个字符</span><br><span class="line"></span><br><span class="line">h[^e]llo  matches hallo, hbllo, ... but not hello</span><br><span class="line">匹配除了e以外的其他单个字符</span><br><span class="line"></span><br><span class="line">h[a-b]llo matches hallo and hbllo</span><br><span class="line">匹配a到b这个区间中的字符</span><br></pre></td></tr></table></figure><p>如果你需要匹配的字符串中包含 <code>[</code>、<code>]</code>、<code>*</code>、<code>?</code> 这些特殊字符，可以用<code>\</code>来转义它们。</p>]]></content>
    
    
    <summary type="html">Redis基本命令学习</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Redis" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Redis/"/>
    
    
    <category term="Redis" scheme="https://blog.musnow.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>【Redis】Ubuntu22.04安装Redis</title>
    <link href="https://blog.musnow.top/posts/269089114/"/>
    <id>https://blog.musnow.top/posts/269089114/</id>
    <published>2024-02-10T06:54:05.000Z</published>
    <updated>2024-02-11T01:44:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装和启动"><a href="#安装和启动" class="headerlink" title="安装和启动"></a>安装和启动</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y redis</span><br></pre></td></tr></table></figure><p>安装了之后使用如下方式启动redis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start redis</span><br></pre></td></tr></table></figure><p>看一下6379端口号是否有进程在监听，有代表启动成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root:/etc/redis]# systemctl status redis</span><br><span class="line">● redis-server.service - Advanced key-value store</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/redis-server.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sat 2024-02-10 14:45:11 CST; 4min 56s ago</span><br><span class="line">       Docs: http://redis.io/documentation,</span><br><span class="line">             man:redis-server(1)</span><br><span class="line">   Main PID: 1350 (redis-server)</span><br><span class="line">     Status: &quot;Ready to accept connections&quot;</span><br><span class="line">      Tasks: 5 (limit: 9527)</span><br><span class="line">     Memory: 7.5M</span><br><span class="line">     CGroup: /system.slice/redis-server.service</span><br><span class="line">             └─1350 &quot;/usr/bin/redis-server 127.0.0.1:6379&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; &gt;</span><br><span class="line"></span><br><span class="line">Feb 10 14:45:11 wsl-ubuntu systemd[1]: Starting Advanced key-value store...</span><br><span class="line">Feb 10 14:45:11 wsl-ubuntu systemd[1]: Started Advanced key-value store.</span><br><span class="line">[root:/etc/redis]# netstat -nltp | grep 6379</span><br><span class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      1350/redis-server 1</span><br><span class="line">tcp6       0      0 ::1:6379                :::*                    LISTEN      1350/redis-server 1</span><br></pre></td></tr></table></figure><p>注意，如果你尝试在子用户里用如下命令查看redis是否绑定成功端口，可能查询不到结果。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nltp | grep redis</span><br></pre></td></tr></table></figure><p>因为在子用户中，我们看不到当前占用6379端口的进程名字。只有root用户能看到。</p><h1 id="允许远程访问"><a href="#允许远程访问" class="headerlink" title="允许远程访问"></a>允许远程访问</h1><p>默认情况下redis绑定的ip是127.0.0.1，这个ip地址只允许本机访问，即你只能在这台linux主机上访问这个redis。</p><p>如果想实现远程访问，我们需要将绑定的ip改成0.0.0.0，并且关闭远程访问的保护</p><p>使用如下命令切换到root用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su - </span><br></pre></td></tr></table></figure><p>进入redis的配置文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/redis</span><br></pre></td></tr></table></figure><p>这里有一个<code>redis.conf</code>配置文件，我们需要修改的是下面的条目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bind 127.0.0.1 ::1</span><br><span class="line">protected-mode yes</span><br></pre></td></tr></table></figure><p>将它们修改为如下所示，即启用了redis允许远程访问的模式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bind 0.0.0.0 ::1</span><br><span class="line">protected-mode no</span><br></pre></td></tr></table></figure><p>修改完毕配置文件后，重启服务器即可生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><h1 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h1><p>和MySQL一样，Redis也是客户-服务端架构的软件。在Linux中，使用<code>redis-cli</code>命令即可直接连到当前主机的redis服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root:/etc/redis]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>如果需要链接非本机的redis服务器，使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h IP地址 -p 端口</span><br></pre></td></tr></table></figure><p>当然，我们也可以像MySQL一样使用C语言的开发包来链接redis，那是后话了。</p><h1 id="命令学习"><a href="#命令学习" class="headerlink" title="命令学习"></a>命令学习</h1><p>redis的命令学习可以参考官网 <a href="https://redis.io/commands/">Commands | Redis</a></p><p>虽然是英文文档，但是照着翻译读读差不多都能看明白是怎么用的。</p>]]></content>
    
    
    <summary type="html">ubuntu22.04下安装redis</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Redis" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Redis/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="Redis" scheme="https://blog.musnow.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>【vscode】远程主机可能不符合glibc和libstdc++ vscode服务器的先决条件</title>
    <link href="https://blog.musnow.top/posts/1712214675/"/>
    <id>https://blog.musnow.top/posts/1712214675/</id>
    <published>2024-02-09T01:54:24.000Z</published>
    <updated>2024-02-09T02:37:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>如图，VSCODE 1.86版本突然不支持我的centos7.6服务器了，这可咋办?</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/803920d76095f770c24324cfed769f89.png" alt="image.png"></p><p>百度了一下，官网上说是centos7缺少依赖项，已经无法被支持。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/c28bde6edd23e6a5285d42485f810f1a.png" alt="image.png"></p><h1 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a>回退版本</h1><p>不过并不是没有办法解决，回退到1.85版本就行了。</p><blockquote><p>参考：<a href="https://blog.csdn.net/Xuuuuuuuuuuu/article/details/135991844">vscode的ssh忽然连不上服务器：远程主机可能不符合glibc和libstdc++ VS Code服务器的先决条件-CSDN博客</a></p></blockquote><h2 id="关闭自动更新"><a href="#关闭自动更新" class="headerlink" title="关闭自动更新"></a>关闭自动更新</h2><p>回退之前，你先要把vscode的自动更新关掉，不然你安装了1.85后不用过10秒就会自动更新……</p><p>在vscode的设置里面搜索更新，点击左侧的<code>应用程序-更新</code>，找到更新模式，设置为None即取消自动更新，然后再去掉后台下载新版本的勾。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/1169a49b1d503846a31bdedcbc6c02a9.png" alt="image.png"></p><p>然后去微软官网下载1.85旧版本，位置是vscode官网的update模块，在更新日志<code>November 2023 (version 1.85)</code>里面能找到旧版本。</p><p><a href="https://code.visualstudio.com/updates/v1_85">Visual Studio Code November 2023</a></p><p>windows主机点击这个x64下载就行了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/9e57878ba739716326425a3c87c80999.png" alt="image.png"></p><h2 id="回退插件版本"><a href="#回退插件版本" class="headerlink" title="回退插件版本"></a>回退插件版本</h2><p>安装1.85后remote-ssh和wsl插件都会显示不可用，会是灰色状态带一个红色感叹号。</p><p>点击插件旁边的齿轮，选择安装另外一个版本，安装4个月前的版本就行了。</p><ul><li>wsl插件：0.81.8</li><li>remote-ssh插件：0.107.0</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/4f8240bb5ab45cddbfecca7473b5a10e.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/114aa6786aa0fe8fac26cd5ec48e92d4.png" alt="image.png"></p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>安装完毕这两个旧版本插件后，就能连上centos7.6的服务器了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/2945ac9e10cbee3fcfd0a2e2f398c048.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">远程主机可能不符合glibc和libstdc++ vscode服务器的先决条件的解决办法</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="编程工具" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="vscode" scheme="https://blog.musnow.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>【Redis】初步认识Redis和分布式系统</title>
    <link href="https://blog.musnow.top/posts/996575798/"/>
    <id>https://blog.musnow.top/posts/996575798/</id>
    <published>2024-02-08T05:02:41.000Z</published>
    <updated>2024-02-10T07:41:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-什么是Redis"><a href="#1-什么是Redis" class="headerlink" title="1.什么是Redis"></a>1.什么是Redis</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/903cf874bef24f120d4a6f89d6f08868.png" alt="image.png"></p><p>Redis是一个开源的，基于键值对key-value的NoSQL数据库。Redis内部存放的值可以是string、hash、list、set、zset、bitmaps、GEO等多种数据结构或算法；除了数据存放，Redis还提供了键值过期、订阅发布、事务、流水线、Lua脚本等附加功能，因此Redis能满足很多应用场景。</p><p>Redis会将数据存放在<strong>内存</strong>中，所以Redis的检索速率非常快（或者说IO吞吐高）。同时，为了保证数据不丢失，Redis会将内存中的数据用快照或者日志的方式存在硬盘上，实现一定程度上的数据持久化。</p><h2 id="1-2-什么时候用Redis？"><a href="#1-2-什么时候用Redis？" class="headerlink" title="1.2 什么时候用Redis？"></a>1.2 什么时候用Redis？</h2><p>在编程语言中定义变量，也是将数据存放在内存中。Redis的优势是在分布式集群系统中，而单机（单进程）程序里面，直接在编程语言中定义变量&#x2F;数据结构是更好的选择（Redis的快只是相对于MySQL这类数据库而言的）。</p><ul><li>如果未来需要引入分布式架构，使用Redis是一个好选择。否则没有必要。</li></ul><p>如果一个系统需要涉及到多个变量、多台主机时，Redis就能起作用了。它基于TCP，可以将自己内存中的变量分享给多个进程、多个主机来访问，这样分布式系统之间就能进行<strong>数据同步</strong>了。</p><p>又因为Redis是在内存中存放，所以它的检索速度相比MySQL会有更快的查询速度。在互联网应用中对数据库的查询性能要求较高，所以Redis就比MySQL更加适合这种场景。</p><blockquote><p>比如存储浏览器中的用户Cookie和Session的对应关系，这里还有一个特点，就是session并不是必须要永久保存的数据，我们能允许一定的数据丢失，后果无非是用户需要重新登录网页而已。</p></blockquote><p>当然，现在更多的选择是将Redis和MySQL等数据库结合，将热点数据（最常访问的数据）放入Redis，全量数据在MySQL中。此时Redis就好比一个数据的缓存了。</p><ul><li>保证热点数据的查询性能；</li><li>保证全量数据的正确保存；</li><li>但是会出现Redis和MySQL中增删改的数据同步问题；</li><li>使用Redis+MySQL会大大增加系统复杂性。</li></ul><h2 id="1-3-Redis不能做的事情？"><a href="#1-3-Redis不能做的事情？" class="headerlink" title="1.3 Redis不能做的事情？"></a>1.3 Redis不能做的事情？</h2><p>因为Redis主要还是内存存储，所以它不适合存储大规模数据。</p><h1 id="2-分布式"><a href="#2-分布式" class="headerlink" title="2.分布式"></a>2.分布式</h1><p>前面提到，Redis的真正适用场景是分布式系统。那么什么是分布式系统呢？</p><h2 id="2-1-单机架构"><a href="#2-1-单机架构" class="headerlink" title="2.1 单机架构"></a>2.1 单机架构</h2><p>所谓单机架构，就是一个系统的所有服务都在一台服务器中运行。</p><p>如下图所示，假设这是一个简单的电商系统，它的数据库和应用程序都在同一台服务器上。用户访问这个服务器来获取电商服务。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/4b3ddd75cab10fc351e38737b5c18ad7.png" alt="image.png"></p><p>之前我写的小项目<a href="https://blog.musnow.top/posts/4231483510">视频点播系统</a>，也是一个单机架构。采用MySQL作为数据库，C++来提供应用服务。</p><p>如果一台主机的性能能足够满足我们的用户服务需求了，单机架构就是很不错的选择，因为它的维护复杂度不高，且部署成本也较低。</p><h2 id="2-2-分布式"><a href="#2-2-分布式" class="headerlink" title="2.2 分布式"></a>2.2 分布式</h2><p>主机的性能指标包括IO性能（内存和硬盘）、网络吞吐、CPU计算性能等，这些性能都会在用户量增长到某一个量级时顶不住，导致服务的请求耗时较长甚至出现处理错误，用户体验差。</p><p>此时我们可以采取两个措施，开源节流：</p><ul><li>开源：给主机升级硬件</li><li>节流：通过软件debug找到影响系统性能的部分，针对性进行软件优化；</li></ul><p>但是，一台主机的性能，不管再怎么升级硬件，总归是有上限的。如果一个主机都被升级到顶天了还没有办法服务我们的性能，此时就需要<strong>多台主机</strong>来帮忙了。这便是分布式系统的基础。</p><ul><li>引入分布式其实是个万不得已的操作；</li><li>会导致系统复杂度大大提高；</li><li>系统出现BUG的可能性越来越高；</li><li>程序员被“开猿节流”的可能性越来越高……</li></ul><p>2023年年末，各大互联网厂家（阿里、滴滴）旗下的服务挨个boom，正是说明了这一点……</p><p>先来看看一个最简单的分布式系统吧，即将应用服务和数据库服务分离。</p><ul><li>应用服务器：CPU和内存性能，提高处理速度；</li><li>存储服务器：更大更快的硬盘，增加IO吞吐量；</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/7420a71996b1c3c0a848e644d0419b13.png" alt="image.png"></p><h2 id="2-3-负载均衡"><a href="#2-3-负载均衡" class="headerlink" title="2.3 负载均衡"></a>2.3 负载均衡</h2><p>进一步扩展，就需要更多的主机，以及负载均衡措施了。</p><ul><li>一个负载均衡服务器和两个独立的应用服务器；</li><li>用户请求负载均衡服务器；</li><li>负载均衡服务器根据两个应用服务器当前的负载，选择较低的服务器来处理请求（这里涉及到负载均衡的算法）；</li></ul><p>此时两个应用服务器在一定程度上都干了相同的活，就能减少单个机器的压力。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/fef48f23eed772c5c53a99c5b89f26e2.png" alt="image.png"></p><p>注意，虽然负载均衡服务器看上去会接受所有用户的请求，但它的请求承担能力是远远大于应用服务器的。因为它的工作很简单，只是一个简单的识别和分配工作，并不涉及到具体的功能。</p><p>如果请求量大到负载均衡服务器也顶不住了，那可以添加多个负载均衡服务器（可以采用多地节点的方式）。</p><p>添加上负载均衡措施后，就有了服务集群，这个集群中某个服务器挂掉对整个服务器的影响不高（它的请求可以由其他正常运行的服务器承担）一定程度上提高了可用性。</p><p>另外，负载均衡服务器也需要使用一些算法，比如想办法让同一个用户的请求始终走到同一个应用服务器上，避免在不同应用服务器中进行数据交换。</p><h2 id="2-4-数据库读写分离"><a href="#2-4-数据库读写分离" class="headerlink" title="2.4 数据库读写分离"></a>2.4 数据库读写分离</h2><p>前面提到的措施都是在优化应用服务器的负载，那么数据库服务器的负载应该如何降低呢？</p><p>比较简单的一种办法就是数据库的<code>读写分离</code>。即读数据库的操作和写数据库的操作由不同的服务器来承担。</p><ul><li>应用程序需要写入，请求A服务器</li><li>A服务器处理写入后，定期同步到B服务器</li><li>应用程序需要读取时请求B服务器</li></ul><p>考虑到实际场景中，<strong>读取的频率会远远高于写入</strong>，在这种情况下，读取服务器B大部分情况下只需要处理读请求，压力会降低。而且我们可以提供多个和B一样的读服务器，加上负载均衡，进一步减少读服务器的压力。</p><p>为什么说读的频率远远高于写入？以聊天软件为例：</p><ul><li>当用户打开聊天软件的主界面时，软件需要对当前聊天框里的所有联系人&#x2F;群组里面的消息进行一次查询；</li><li>当用户打开自己的个人信息时，软件需要查询个人信息（当然这个信息可能是本地早就缓存好了的）；</li><li>当用户打开朋友圈的时候，需要查询好友的朋友圈，并把最新的说说推送给当前用户</li><li>……</li></ul><p>上述的这一系列操作都是读查询，完全没有涉及到写。当用户使用聊天软件，没有发出消息时，聊天软件一直在做的都是读操作！以此类推，大部分软件在使用的时候，都是读操作居多，写操作相对较少。</p><h2 id="2-5-热点缓存"><a href="#2-5-热点缓存" class="headerlink" title="2.5 热点缓存"></a>2.5 热点缓存</h2><p>有一个经典的二八原则，在数据库场景也能适用：20%的数据能支撑80%的访问。</p><p>所以我们可以引入针对这20%的热点数据的<strong>缓存</strong>，保证这些热点数据能更快的被查询（读）。Redis可以说就是用来做缓存的。</p><p>缓存需要更快的查询速度，代价就是它存放不了太多的数据。比如Redis需要将数据存入内存中，内存的容量远远小于磁盘，存不了很多数据。所以缓存一定要使用适合场景的算法，保证缓存中的数据有尽可能高的命中率。</p><p>当然，这样会导致缓存服务器会承受较大的查询压力。不过完整数据库的查询压力又被进一步减少了。</p><h2 id="2-6-分库分表"><a href="#2-6-分库分表" class="headerlink" title="2.6 分库分表"></a>2.6 分库分表</h2><p>当一个服务器存储不下当前系统的<strong>全量数据</strong>时，就需要进行分库分表了。即将数据库进行一定的拆分，存放在多个服务器中。</p><p>如下图所示，将原本一个数据库的不同表，放在不同服务器中。这样一个服务器上就只用存放一部分数据，减少了存储容量的同时，也减少了单个服务器在查询方面的压力。同时，我们可以为某个表建立一个存储的集群，这也是依照负载均衡的基本思路来扩展主从。</p><p>如果一个表过大，没有办法放入一台主机，也可以根据表的<strong>主键</strong>来将该表拆分放入不同的服务器。比如服务器A放入主键1到10万，服务器B放入10万零1到20万等等……</p><p>这个拆分可以一直持续下去，直到性能满足了业务的需要。具体的拆分方式也是根据具体业务来进行处理的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/313e9c3894bd95766643b2d6150946b3.png" alt="image.png"></p><p>分布式的处理其实都是基于具体业务的需要来分析的。业务决定了我们应该选取的技术解决方案。</p><h2 id="2-7-微服务架构"><a href="#2-7-微服务架构" class="headerlink" title="2.7 微服务架构"></a>2.7 微服务架构</h2><p>前面提到的处理都是在服务器拆分、数据库拆分上处理的。我们的应用服务器依旧是一个服务器能完成这个业务的所有任务。这样会导致该应用服务器的代码非常庞大，且难以进行维护。</p><p>我们可以将整个系统根据功能进行拆分，用户管理是一个应用服务器、商品交易是一个应用服务器、交易处理也是一个应用服务器，在不同的服务器之间可以通过消息中间件之类的方式进行数据通信。</p><p>而诸如安全处理等大家都用得上的公共服务，可以单开一个进行处理。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/e46480d91db2ab3edce15e0946c0a14c.png" alt="image.png"></p><p>实际上，微服务是在解决团队协作的问题。单一应用服务器在规模大了之后会非常非常复杂，而使用微服务架构，<strong>可以将团队按照业务拆分成不同的小组</strong>，每个小组只需要维护产品中的一部分服务，这样维护单个服务的难度就降低了，更重要的是，企业的组织架构的分配变得更加方便。</p><h3 id="微服务的优势"><a href="#微服务的优势" class="headerlink" title="微服务的优势"></a>微服务的优势</h3><p>微服务的优势：</p><ul><li>解决了团队组织架构分配的问题</li><li>方便代码功能的复用（比如不同服务它的用户管理模块的代码其实是差别不大的，方便进行复用）</li><li>不同的服务，可以进行针对性的部署（比如某些服务的性能需求不高，就可以部署在配置相对较差的服务器上）</li></ul><h3 id="微服务的缺点"><a href="#微服务的缺点" class="headerlink" title="微服务的缺点"></a>微服务的缺点</h3><p>微服务架构对应用服务的拆分会进一步扩大整个系统的复杂性，反正就是越拆越复杂。缺点如下：</p><ul><li>系统响应速度降低：因为不同的模块是在不同的服务集群上处理，它们之间需要使用网络进行通信，相比于单个完整的应用服务器，整个系统的响应速度降低了。要想保证系统响应速度降低幅度小，就得引入更多的硬件资源来处理（更快的网卡）</li><li>系统出现问题概率提高：因为微服务会引入更多的机器，导致出现问题的概率被提高。需要更多更详细的监控和告警方式来保证多台云服务器的可用性。</li></ul><h1 id="3-分布式中涉及到的相关概念"><a href="#3-分布式中涉及到的相关概念" class="headerlink" title="3.分布式中涉及到的相关概念"></a>3.分布式中涉及到的相关概念</h1><h2 id="3-1-应用Application-x2F-系统System"><a href="#3-1-应用Application-x2F-系统System" class="headerlink" title="3.1 应用Application&#x2F;系统System"></a>3.1 应用Application&#x2F;系统System</h2><p>一个应用（系统）就是一个或者一组服务器程序</p><h2 id="3-2-模块Module-x2F-组件Componet"><a href="#3-2-模块Module-x2F-组件Componet" class="headerlink" title="3.2 模块Module&#x2F;组件Componet"></a>3.2 模块Module&#x2F;组件Componet</h2><p>应用中的不同功能被拆分成不同的模块，共同组成最终的应用程序</p><h2 id="3-3-分布式Distributed"><a href="#3-3-分布式Distributed" class="headerlink" title="3.3 分布式Distributed"></a>3.3 分布式Distributed</h2><p>引入多个服务器&#x2F;主机，协同配合完成一系列工作（物理上的多个主机）</p><h2 id="3-4-集群Cluster"><a href="#3-4-集群Cluster" class="headerlink" title="3.4 集群Cluster"></a>3.4 集群Cluster</h2><p>引入多个服务器&#x2F;主机，协同配合完成一系列工作（逻辑上的多个主机）</p><h2 id="3-5-主Master-x2F-从Slave"><a href="#3-5-主Master-x2F-从Slave" class="headerlink" title="3.5 主Master&#x2F;从Slave"></a>3.5 主Master&#x2F;从Slave</h2><p>多个服务器节点中，一个是主节点，其他是从节点。<code>从节点</code>需要从<code>主节点</code>中同步数据。</p><h2 id="3-6-中间件Middleware"><a href="#3-6-中间件Middleware" class="headerlink" title="3.6 中间件Middleware"></a>3.6 中间件Middleware</h2><p>和具体业务无关，但在系统中需要使用的服务。比如数据库、缓存、消息队列等。</p><h2 id="3-7-可用性Availability"><a href="#3-7-可用性Availability" class="headerlink" title="3.7 可用性Availability"></a>3.7 可用性Availability</h2><p>系统整体可用时间&#x2F;总时间</p><blockquote><p>三个9代表可用性是<code>99.999%</code>；</p></blockquote><h2 id="3-8-响应时间Response-Time-RT"><a href="#3-8-响应时间Response-Time-RT" class="headerlink" title="3.8 响应时间Response Time RT"></a>3.8 响应时间Response Time RT</h2><p>用于衡量服务器的性能，响应时间越快越好</p><h2 id="3-9-吞吐Throughput和并发Concurrent"><a href="#3-9-吞吐Throughput和并发Concurrent" class="headerlink" title="3.9 吞吐Throughput和并发Concurrent"></a>3.9 吞吐Throughput和并发Concurrent</h2><p>衡量系统处理请求的能力，也是衡量性能的方式之一。</p><h1 id="4-Redis的特性"><a href="#4-Redis的特性" class="headerlink" title="4.Redis的特性"></a>4.Redis的特性</h1><p>我们可以在redis的官网上看到redis的特性，一个一个来认识一下吧</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/9aec7a8ebddb4dd911e41981cea8d11a.png" alt="image-20240210135822201"></p><h2 id="4-1-In-memory-data-structures"><a href="#4-1-In-memory-data-structures" class="headerlink" title="4.1 In-memory data structures"></a>4.1 In-memory data structures</h2><p>前面已经提到过，Redis是一个KV方式的内存级数据库，它的Key都是string，value可以是string、hash、list、set、zset、bitmaps、GEO等各种数据结构。</p><p>使用Key-Value方式来存放数据的数据库，被称为<code>非关系数据库</code>，NoSQL也是类似的含义。</p><h2 id="4-2-Progarmmability"><a href="#4-2-Progarmmability" class="headerlink" title="4.2 Progarmmability"></a>4.2 Progarmmability</h2><p>针对Redis的操作，可以通过简单的交互式命令来存放数据，也可以通过脚本来批量执行一些操作。</p><h2 id="4-3-Extentsibility"><a href="#4-3-Extentsibility" class="headerlink" title="4.3 Extentsibility"></a>4.3 Extentsibility</h2><p>Redis提供了一系列API，可以在Redis原有功能的基础上配置扩展，比如让Redis支持更多数据结构。支持C&#x2F;C++&#x2F;Rust语言。</p><h2 id="4-4-Persistence"><a href="#4-4-Persistence" class="headerlink" title="4.4 Persistence"></a>4.4 Persistence</h2><p>Redis是将数据存放在内存中的，但也提供了<strong>持久化</strong>方式来保证系统重启时数据不会丢失。</p><h2 id="4-5-Clustering"><a href="#4-5-Clustering" class="headerlink" title="4.5 Clustering"></a>4.5 Clustering</h2><p>Redis作为分布式系统的中间件，原生支持集群部署。</p><p>Horizontal scalability 指的是系统的水平扩展能力，类似于“分库分表”。</p><h2 id="4-6-High-availability"><a href="#4-6-High-availability" class="headerlink" title="4.6 High availability"></a>4.6 High availability</h2><p>Redis原生支持主从结构，从节点相当于主节点的备份，主节点失效时从节点能立马顶上去（替补）。</p><h2 id="4-7-天下武功唯快不破"><a href="#4-7-天下武功唯快不破" class="headerlink" title="4.7 天下武功唯快不破"></a>4.7 天下武功唯快不破</h2><p>Redis能被广泛的使用，最大的原因还是因为它很快！</p><ol><li>Redis数据在内存中，比访问硬盘的数据库快的多</li><li>Redis的核心功能逻辑较为简单，只是操作内存中的数据结构</li><li>Redis使用了多路复用(epoll)来处理网络请求。</li><li>Redis使用的单线程模型（高版本Redis引入了多线程），减少了线程竞争的不必要的开销。</li></ol><p>这里要补充一点，多线程提高效率的前提是执行的是CPU密集型的操作，多线程才能充分利用CPU的多核心资源。而Redis的核心功能只是操作内存中的数据，对CPU的负载并不高。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1>]]></content>
    
    
    <summary type="html">什么是Redis？什么是分布式系统？</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Redis" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Redis/"/>
    
    
    <category term="Redis" scheme="https://blog.musnow.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>【Docker】gitea的ssh容器直通</title>
    <link href="https://blog.musnow.top/posts/1063684344/"/>
    <id>https://blog.musnow.top/posts/1063684344/</id>
    <published>2024-02-07T07:01:43.000Z</published>
    <updated>2024-02-07T11:38:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-跟着文档走"><a href="#1-跟着文档走" class="headerlink" title="1.跟着文档走"></a>1.跟着文档走</h1><p>gitea的安装比较简单，直接使用官方文档中的docker-compose文件即可。如果想实现ssh容器直通，需要对这个docker-compose文件做一定修改。</p><blockquote><p>如果你还没有安装docker，参考本站教程 <a href="https://blog.musnow.top/posts/2069190154">linux安装docker</a>；</p></blockquote><p>gitea的官方文档上有关于docker容器ssh直通的教程，但是写的不够清晰，有些问题我没有搞懂。本文基于我的折腾记录和docker安装的gitea 1.21.4文档</p><p><a href="https://docs.gitea.com/zh-cn/next/installation/install-with-docker#ssh-%E5%AE%B9%E5%99%A8%E7%9B%B4%E9%80%9A">使用 Docker 安装 | Gitea Documentation</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/4a6a40b4f39a75d32fc7fc45919316ba.png" alt="image.png"></p><p>首先是跟着文章里面的步骤做，先创建一个git子用户。wsl中创建子用户的命令参考本站博客（使用adduser命令），注意创建的git用户的uid和gid是1001，docker-compose中的环境变量需要对应修改。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">environment:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">USER_UID=1001</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">USER_GID=1001</span></span><br></pre></td></tr></table></figure><p>还需要新增一个路径映射</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- /home/git/.ssh/:/data/git/.ssh</span><br></pre></td></tr></table></figure><blockquote><p>注意：为了避免文件读写权限问题，我建议在创建git子用户后，在该子用户中操作docker-compose和新建gitea的映射文件夹，这样能保证1001用户和gitea容器一定能访问到文件夹且具有权限。</p></blockquote><p>在git用户中执行如下命令。出现的提示框全部回车即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u git ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;Gitea Host Key&quot;</span></span><br></pre></td></tr></table></figure><p>随后执行如下命令，即把<code>/home/git/.ssh/id_rsa.pub</code>写入<code>/home/git/.ssh/authorized_keys</code>文件。执行完毕后请不要再手动修改authorized_keys文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(cat /home/git/.ssh/id_rsa.pub)</span>&quot;</span> &gt;&gt; /home/git/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>还需要创建一个脚本来执行ssh信息转发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/local/bin/gitea</span><br></pre></td></tr></table></figure><p>写入如下内容，可以通过<code>CTRL+SHIFT+V</code>直接粘贴。这里假设你将gitea容器的22端口转发到宿主机的2222端口（如果你的宿主机映射端口不同，可以修改脚本中的端口号）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2222 -o StrictHostKeyChecking=no git@127.0.0.1 &quot;SSH_ORIGINAL_COMMAND=\&quot;$SSH_ORIGINAL_COMMAND\&quot; $0 $@&quot;</span><br></pre></td></tr></table></figure><p>因为ssh容器直通都是本机处理的操作，所以我们可以在docker-compose中端口映射的时候限制来源IP地址为本地回环地址，这样就能保证只有宿主机中能访问2222端口到gitea中，而2222端口无法直接被外界访问。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line">  <span class="comment"># [...]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:2222:22&quot;</span></span><br></pre></td></tr></table></figure><h2 id="ssh直通流程"><a href="#ssh直通流程" class="headerlink" title="ssh直通流程"></a>ssh直通流程</h2><p>配置完毕ssh直通后，git操作流程如下：</p><ol><li>用户使用<code>git@IP地址</code>访问主机，默认访问22端口；</li><li>主机验证git用户下<code>.ssh/authorized_keys</code>的<code>command</code>开头的公钥中，发现用户公钥；</li><li>主机执行command指定的脚本，将此次请求的信息转发给gitea容器的ssh端口；</li><li>gitea容器执行ssh请求处理；</li></ol><p>如果不使用容器直通，你可以选择用https来进行git操作，或者在ssh使用时添加端口号。二者都会比直接使用ssh麻烦一些。</p><h1 id="2-安装ssh服务"><a href="#2-安装ssh服务" class="headerlink" title="2.安装ssh服务"></a>2.安装ssh服务</h1><p>另外，默认情况下wsl中是没有ssh服务的，你会发现22端口无人使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root:~]# netstat -nltp | grep 22</span><br><span class="line">tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      2816/docker-proxy</span><br></pre></td></tr></table></figure><p>需要安装一下ssh服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y openssh-server</span><br><span class="line">sudo systemctl start sshd</span><br></pre></td></tr></table></figure><p>使用如下命令查看服务状态以及是否启用了开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root:~]# systemsystemctl status sshd</span><br><span class="line">● ssh.service - OpenBSD Secure Shell server</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Wed 2024-02-07 14:59:06 CST; 9min ago</span><br><span class="line">       Docs: man:sshd(8)</span><br><span class="line">             man:sshd_config(5)</span><br><span class="line">   Main PID: 5202 (sshd)</span><br><span class="line">      Tasks: 1 (limit: 9527)</span><br><span class="line">     Memory: 1.7M</span><br><span class="line">     CGroup: /system.slice/ssh.service</span><br><span class="line">             └─5202 &quot;sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups&quot;</span><br><span class="line"></span><br><span class="line">Feb 07 14:59:06 wsl-ubuntu systemd[1]: Starting OpenBSD Secure Shell server...</span><br><span class="line">Feb 07 14:59:06 wsl-ubuntu sshd[5202]: Server listening on 0.0.0.0 port 22.</span><br><span class="line">Feb 07 14:59:06 wsl-ubuntu sshd[5202]: Server listening on :: port 22.</span><br><span class="line">Feb 07 14:59:06 wsl-ubuntu systemd[1]: Started OpenBSD Secure Shell server.</span><br><span class="line">[root:~]# sudo systemctl is-enabled sshd</span><br><span class="line">alias</span><br><span class="line">[root:~]# sudo systemctl is-enabled ssh</span><br><span class="line">enabled</span><br></pre></td></tr></table></figure><p>此时再看看22端口，就有人干活了，sshd服务启动成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root:~]# netstat -nltp | grep 22</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      5202/sshd: /usr/sbi</span><br><span class="line">tcp        0      0 127.0.0.1:2222          0.0.0.0:*               LISTEN      2816/docker-proxy</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      5202/sshd: /usr/sbi</span><br></pre></td></tr></table></figure><h1 id="3-web界面添加用户ssh公钥"><a href="#3-web界面添加用户ssh公钥" class="headerlink" title="3.web界面添加用户ssh公钥"></a>3.web界面添加用户ssh公钥</h1><p>随后就是和github一样的操作， 在gitea的web页面添加用户的公钥。</p><p><a href="https://blog.musnow.top/posts/3625274788/">【Linux】如何使用 ssh 密钥配置 git</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/4e28dd20b29a4e7ebaabcce3c09ac579.png" alt="image.png"></p><p>添加完毕后，检查一下git用户里面的<code>/home/git/.ssh/authorized_keys</code>文件是否有变动，文件应该如下格式，会有一个<code>command=</code>存放了你刚刚在gitea web页面添加的用户公钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa &lt;Gitea Host Key&gt;</span><br><span class="line"></span><br><span class="line"># other keys from users</span><br><span class="line">command=&quot;/usr/local/bin/gitea --config=/data/gitea/conf/app.ini serv key-1&quot;,no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty &lt;user pubkey&gt;</span><br></pre></td></tr></table></figure><p>文档中关于这一块的描述不够清楚（我感觉是机翻的问题）</p><blockquote><p>原文：重要提示：来自 git 用户的公钥需要“按原样”添加，而通过 Gitea 网络界面添加的所有其他公钥将以 <code>command=&quot;/app [...]</code> 作为前缀。</p></blockquote><p>其实这个说明的意思是，默认情况下的<code>authorized_keys</code>文件中应该只有下面的内容（即“按原样”添加），而gitea web页面添加的其他公钥应该都是以<code>command=&quot;</code> 作为前缀，<strong>自动</strong>添加到<code>authorized_keys</code>文件之后的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa &lt;Gitea Host Key&gt;</span><br></pre></td></tr></table></figure><p>说白了就是，在执行完毕上文提到的将<code>id_rsa.pub</code>文件的内容写入<code>authorized_keys</code>的操作后，<strong>我们就不要手动修改authorized_keys这个文件了</strong>！如果出现问题，再依照文档中的这个提示检查该文件中的公钥格式是否正确。</p><p>官网文档中还提到了下面几个注意事项，我们全都不用管！只要你没有修改过配置文件和gitea容器中的环境，这些配置项都是默认情况下就OK了的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/4a3b6349ff4e3db039e87550910597d8.png" alt="image.png"></p><h1 id="4-验证是否直通成功"><a href="#4-验证是否直通成功" class="headerlink" title="4.验证是否直通成功"></a>4.验证是否直通成功</h1><p>尝试验证ssh是否成功，这里的ip是wsl的本机ip，可以在wsl中通过ifconfig命令查看。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@172.26.39.91</span><br></pre></td></tr></table></figure><p>如果出现下面的情况，说明22端口没有被成功开放，请检查:</p><ul><li>宿主机中的22端口是否已经配置了sshd服务，并正常监听22端口；</li><li>在web页面添加的用户公钥是否添加到了<code>/home/git/.ssh/authorized_keys</code>文件中；</li><li><code>/usr/local/bin/gitea</code>脚本中的命令无误。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\新机测试\test-git&gt; git clone git@172.26.39.91:musnows/test-action.git</span><br><span class="line">Cloning into &#x27;test-action&#x27;...</span><br><span class="line">ssh: connect to host 172.26.39.91 port 22: Connection refused</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>如果看到了下面的内容，可以说明我们wsl中的的ssh服务已经成功启动了，但是没有成功通过脚本验证git用户。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\新机测试\test-git&gt; ssh -T git@172.26.39.91</span><br><span class="line">The authenticity of host &#x27;172.26.39.91 (172.26.39.91)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:xRPtWVSIsHrqmP3VaBD+ZR24nE6SWmgjWUYENN0IfB8.</span><br><span class="line">This key is not known by any other names</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;172.26.39.91&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">bash: line 1: /usr/local/bin/gitea: Permission denied</span><br></pre></td></tr></table></figure><p>这是因为我们的git用户没有办法执行<code>/usr/local/bin/gitea</code>脚本，还记得吗，这个脚本是通过sudo创建的，默认情况下是一个文本文件，且只有root用户有权限访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root:~]# ll /usr/local/bin/gitea</span><br><span class="line">-rw-r--r-- 1 root root 109 Feb  7 14:47 /usr/local/bin/gitea</span><br></pre></td></tr></table></figure><p>解决办法很简单，将其权限改成777即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root:~]# chmod 777 /usr/local/bin/gitea</span><br><span class="line">[root:~]# ll /usr/local/bin/gitea</span><br><span class="line">-rwxrwxrwx 1 root root 109 Feb  7 14:47 /usr/local/bin/gitea*</span><br></pre></td></tr></table></figure><p>此时再次测试，发现成功直通gitea容器内ssh！这里会显示你在web页面中添加的ssh密钥的名字<code>user from windows</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS D:\新机测试\test-git&gt; ssh -T git@172.26.39.91</span><br><span class="line">Warning: Permanently added &#x27;[127.0.0.1]:2222&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">Hi there, musnows! You&#x27;ve successfully authenticated with the key named user from windows, but Gitea does not provide shell access.</span><br><span class="line">If this is unexpected, please log in with password and setup Gitea under another user.</span><br></pre></td></tr></table></figure><p>再试试能不能通过ssh克隆仓库，搞定！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS D:\新机测试\test-git&gt; git clone git@172.26.39.91:musnows/test-action.git</span><br><span class="line">Cloning into &#x27;test-action&#x27;...</span><br><span class="line">remote: Enumerating objects: 80, done.</span><br><span class="line">remote: Counting objects: 100% (80/80), done.</span><br><span class="line">remote: Compressing objects: 100% (58/58), done.</span><br><span class="line">remote: Total 80 (delta 22), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Receiving objects: 100% (80/80), 56.15 KiB | 9.36 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (22/22), done.</span><br></pre></td></tr></table></figure><h1 id="5-docker-compose文件"><a href="#5-docker-compose文件" class="headerlink" title="5.docker-compose文件"></a>5.docker-compose文件</h1><p>下面给出本文所用的gitea容器docker-compose文件，只在官方文档所提供的版本上做了少量修改。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">gitea:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/gitea:1.21.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_UID=1001</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_GID=1001</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/home/git/data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/home/git/.ssh/:/data/git/.ssh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;30000:3000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:2222:22&quot;</span></span><br></pre></td></tr></table></figure><p>注意，在初始化gitea的时候不要修改web界面和ssh的监听端口，否则上文的ssh直通可能会失败！</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>如果有疑问，欢迎在评论区交流。</p><p>相关参考：<a href="https://moqiaoduo.cn/310.html">如何通过Docker搭建Gitea并配置SSL和SSH直通 - 莫乔多博客</a></p>]]></content>
    
    
    <summary type="html">docker安装的gitea在wsl2上配置ssh容器直通</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Docker真好玩" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Docker%E7%9C%9F%E5%A5%BD%E7%8E%A9/"/>
    
    
    <category term="Docker" scheme="https://blog.musnow.top/tags/Docker/"/>
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
    <category term="gitea" scheme="https://blog.musnow.top/tags/gitea/"/>
    
  </entry>
  
  <entry>
    <title>【WSL】wsl中ubuntu无法通过useradd添加用户</title>
    <link href="https://blog.musnow.top/posts/803882566/"/>
    <id>https://blog.musnow.top/posts/803882566/</id>
    <published>2024-02-07T06:59:43.000Z</published>
    <updated>2024-02-07T07:00:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>适用于hexo-butterfly主题的front-matter模板。</p><h1 id="情况说明"><a href="#情况说明" class="headerlink" title="情况说明"></a>情况说明</h1><p>在wsl2中的ubuntu22.04无法使用useradd添加用户，表现为执行命令后，只出现该用户和用户组，但<code>/home</code>目录下没有出现该用户的家目录文件夹，且无法使用<code>su - 用户名</code>成功切换到该用户上。</p><p>如下所示，我先从wsl子用户切换到root用户，然后执行useradd命令，发现用户创建没有完全成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">wsl:~$ sudo su - </span><br><span class="line"></span><br><span class="line">root:~# useradd git</span><br><span class="line">root:~# ls /home</span><br><span class="line">wsl</span><br><span class="line">root:~# sudo adduser git</span><br><span class="line">adduser: The user `git&#x27; already exists.</span><br><span class="line">root:~# userdel -r git</span><br><span class="line">userdel: git mail spool (/var/mail/git) not found</span><br><span class="line">userdel: git home directory (/home/git) not found</span><br><span class="line">root:~# userdel -r git</span><br><span class="line">userdel: user &#x27;git&#x27; does not exist</span><br></pre></td></tr></table></figure><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>这是因为wsl2和传统的VMware类型虚拟机有一定区别，其不支持使用useradd直接添加用户，而是提供了adduser命令来处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser &lt;新的用户名&gt;</span><br></pre></td></tr></table></figure><p>使用这个命令则可以正常创建用户，如下所示我创建了一个用户名为git的用户。需要填写用户信息的部分直接回车跳过即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root:~# sudo adduser git</span><br><span class="line">Adding user `git&#x27; ...</span><br><span class="line">Adding new group `git&#x27; (1001) ...</span><br><span class="line">Adding new user `git&#x27; (1001) with group `git&#x27; ...</span><br><span class="line">Creating home directory `/home/git&#x27; ...</span><br><span class="line">Copying files from `/etc/skel&#x27; ...</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">Changing the user information for git</span><br><span class="line">Enter the new value, or press ENTER for the default</span><br><span class="line">        Full Name []:</span><br><span class="line">        Room Number []:</span><br><span class="line">        Work Phone []:</span><br><span class="line">        Home Phone []:</span><br><span class="line">        Other []:</span><br><span class="line">Is the information correct? [Y/n] y</span><br><span class="line">root:~# ls /home</span><br><span class="line">git  wsl</span><br></pre></td></tr></table></figure><p>使用id命令可以查看新用户的用户组以及uid等相关信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:~# id git</span><br><span class="line">uid=1001(git) gid=1001(git) groups=1001(git)</span><br></pre></td></tr></table></figure><p>注意，该新用户不在<code>/etc/sudoers</code>文件中，无法使用sudo命令。需要修改该文件，在如下位置之后添加一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root ALL=(ALL:ALL) ALL</span><br><span class="line"># 新增此行</span><br><span class="line">用户名 ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">wsl中ubuntu无法通过useradd添加用户,应该使用adduser命令</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>【sqlite3】MySQL8转sqlite3需要对sql做的一些处理</title>
    <link href="https://blog.musnow.top/posts/2778694447/"/>
    <id>https://blog.musnow.top/posts/2778694447/</id>
    <published>2024-02-06T03:19:37.000Z</published>
    <updated>2024-02-06T04:07:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h1><p>最近编写我的kook机器人的时候，发现MySQL对于这种低访问频次的应用并不友好，经常出现断连的问题，具体到python中的报错如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pymysql.err.InterfaceError: (0, &#x27;&#x27;)</span><br></pre></td></tr></table></figure><p>出现这种报错，就可以认为是MySQL那端因为自身策略中断了和你的应用的链接。因为我的机器人和MySQL是在同一台主机上，肯定不是网络本身问题导致的。</p><p>所以我需要将MySQL数据库换成sqlite3数据库。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/701727d98b31f035e72bef4e76b341a1.png"></p><h1 id="MySQL转sqlite3"><a href="#MySQL转sqlite3" class="headerlink" title="MySQL转sqlite3"></a>MySQL转sqlite3</h1><h2 id="导出MySQL中的数据"><a href="#导出MySQL中的数据" class="headerlink" title="导出MySQL中的数据"></a>导出MySQL中的数据</h2><p>好在我的机器人使用的是python的peewee这个ORM库，只需要修改底层的DB引擎就能快速在MySQL和sqlite3之间切换。我们要解决的只是怎么把MySQL8.0.30的数据导入到sqlite3中。</p><blockquote><p>本文测试使用的版本为：<code>MySQL 8.0.30</code> 和 <code>sqlite3 3.44.0</code></p></blockquote><p>首先是从MySQL将数据库里面的所有数据导出为sql文件，因为我安装了1panel服务器面板，所以可以直接使用面板的备份功能，再把备份好的tar下载下来（里面就是sql文件）</p><p>这里给出用命令行来处理的方式，一般使用的工具为mysqldump，在安装MySQL的时候这个工具应该就会连带安装。我的MySQL是用docker安装的，docker容器内的终端也有这个命令工具。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@RainYun-8aNbbsmA:~/docker]# docker exec -it mysql /bin/bash</span><br><span class="line">bash-4.4# mysqldump</span><br><span class="line">Usage: mysqldump [OPTIONS] database [tables]</span><br><span class="line">OR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]</span><br><span class="line">OR     mysqldump [OPTIONS] --all-databases [OPTIONS]</span><br><span class="line">For more options, use mysqldump --help</span><br><span class="line">bash-4.4# </span><br></pre></td></tr></table></figure><p>导出整个数据库的数据到sql的命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u username -ppassword dbname &gt; dbname.sql；</span><br></pre></td></tr></table></figure><p>比如我有个testdb数据库，将其导入testdb.sql的命令如下，这里我直接使用了root用户来处理。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123456 testdb &gt; testdb.sql</span><br></pre></td></tr></table></figure><p>因为在命令行使用密码被认为是不安全的，所以键入如上命令的时候会有一个警告，可以忽略它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump: [Warning] Using a password on the command line interface can be insecure.</span><br></pre></td></tr></table></figure><p>ls查看一下，当前路径上已经有我们需要的sql数据文件了。</p><h2 id="docker内文件拷贝到宿主机"><a href="#docker内文件拷贝到宿主机" class="headerlink" title="docker内文件拷贝到宿主机"></a>docker内文件拷贝到宿主机</h2><p>因为我现在的这个操作是在一个docker容器里面，我还需要将其从docker中拷贝出来，方法有两个</p><ol><li>将sql文件拷贝到docker的持久化目录中（即映射到了宿主机的目录中）；</li><li>使用docker copy命令；</li></ol><p>对于1panel安装的MySQL容器而言，你可以在容器的详细设置里面看到映射路径的关系。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/83b63cefa278acce4ddaf80fcbe5fe56.png" alt="image.png"></p><p>如果使用docker cp命令，格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> 容器ID:容器内路径 宿主机路径</span><br></pre></td></tr></table></figure><p>这里的容器ID可以是容器的名字，也可以是docker ps命令查看到的容器<code>CONTAINER ID</code>；mysqldump命令弄出来的sql文件是在容器内的根目录上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker cp mysql:/testdb.sql ~/testdb.sql</span></span><br><span class="line">Successfully copied 9.85MB to /root/testdb.sql</span><br></pre></td></tr></table></figure><h2 id="修改sql文件"><a href="#修改sql文件" class="headerlink" title="修改sql文件"></a>修改sql文件</h2><p>MySQL导出的sql文件不能直接被sqlite3识别，在我的机器人数据库中遇到如下几个问题，需要修改sql文件。</p><ul><li>用peewee创建sqlite数据库时生成的create table语句替换MySQL导出的sql文件内部已有的建表语句；</li><li>删除sql文件中的<code>LOCK TABLES </code>和<code>UNLOCK TABLES;</code>，因为sqlite不支持；</li><li>sql文件中的转义字符<code>\&quot;</code>替换成<code>&quot;</code>。因为在sqlite3中不需要进行此转义。如果不修改，那么在sqlite3中list的json字符串中就会留有<code>\&quot;</code>导致无法被<code>json.loads</code>（猜测sqlite3中<code>&#39;</code>的优先级高于<code>&quot;</code>）</li></ul><p>首先是把python中peewee使用的数据库模型改成sqlite，然后启动一下这个机器人，此时peewee就会创建一个db文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 数据库文件名.db</span><br></pre></td></tr></table></figure><p>进入该db文件后执行如下查询命令，能看到sqlite3的建表语句，将其替换掉MySQL中导出sql里面的建表命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT sql FROM sqlite_master WHERE type=&#x27;table&#x27;;</span><br></pre></td></tr></table></figure><p>如果你用的不是peewee这种ORM库，则还需要自行修改建表命令为sqlite3的命令（可以问问gpt让他帮你改一下，或者自己重写一个）。比如在sqlite3中就不支持表后跟随的<code>AUTO_INCREMENT=4728</code>语句。</p><h2 id="文件导入到sqlite3"><a href="#文件导入到sqlite3" class="headerlink" title="文件导入到sqlite3"></a>文件导入到sqlite3</h2><p>sqlite3的导入命令格式如下，左侧是数据库文件名字，右侧是需要导入的源sql文件。为了避免文件名编码问题，建议使用全英文名字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 数据库名字.db &lt; 需要导入的文件.sql</span><br></pre></td></tr></table></figure><p>这个命令成功的时候不会有任何输出，使用如下命令进入导入后生成的db文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite3 数据库名字.db</span><br></pre></td></tr></table></figure><p>不出意外的话，所有数据就已经导入到这个新的数据库文件中了，检查一下和MySQL中的数据库有没有不一样的地方吧！</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>有更多问题，欢迎评论留言讨论。</p>]]></content>
    
    
    <summary type="html">MySQL8转sqlite3需要对sql做的一些处理</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
    <category term="sqlite3" scheme="https://blog.musnow.top/tags/sqlite3/"/>
    
  </entry>
  
  <entry>
    <title>【win】使用分区助手扩容C盘</title>
    <link href="https://blog.musnow.top/posts/3746722946/"/>
    <id>https://blog.musnow.top/posts/3746722946/</id>
    <published>2024-02-02T01:15:20.000Z</published>
    <updated>2024-02-02T02:33:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h2><p>如果你像我一样，用的是联想的笔记本，这3年内的联想笔记本都会出厂分盘（据我所知是这样的），C盘雷打不动的200GB，D盘中会存放一个原厂的驱动文件夹，包括你这台电脑的所有驱动。</p><p>但是，200GB很快就会被某些奇奇怪怪的软件缓存给撑满，即便我把微信和QQ两个软件的资料文件夹给转移到D盘了，C盘在用了几个月后就莫名其妙的只剩下50G甚至更少了，看着让人很是焦绿，还是给它扩容一下吧。</p><h2 id="分区助手"><a href="#分区助手" class="headerlink" title="分区助手"></a>分区助手</h2><p>windows是自带磁盘分区管理的，<code>右键我的电脑-属性-存储-磁盘管理</code>，这里能到你的系统里面的所有物理硬盘，和每个硬盘的分区情况，可以在这里对分区进行一定的调整。</p><p>但很遗憾的是，在这里并不能对C盘进行扩容操作，当你给D盘<code>压缩卷</code>后再右键C盘，会发现<code>扩展卷</code>按钮是灰色的，无法被点击，也就无法扩容。</p><p>这时候就需要使用第三方工具来操作了：<a href="https://www.disktool.cn/">傲梅分区助手、轻松备份、数据恢复(恢复之星)、远程控制（AnyViewer）等软件免费下载官网</a></p><blockquote><p>注意：之前在B站看过相关视频，有不少人评论说使用该工具导致系统盘内资料丢失的（虽然在我的几次搞机使用体验中并没有遇到）。为了保险起见，请先备份你的<strong>C盘所在物理盘</strong>内的所有文件后再进行操作！数据无价！<strong>备份，备份，备份</strong>！！</p></blockquote><p>下载软件后安装，安装完毕后打开软件会让你输入一个免费使用密码，这个密码一直是1122（至少一年没变过了，如果不行就去它们的公众号获取一下最新密码吧）</p><p>本次测试使用的是新版10.2版本。</p><p>进入软件后看到的界面和windows自带的磁盘管理类似，这里能看到原装1TB的固态分了一个C盘和一个D盘（下图中已经是我操作后的结果了，所以C盘是300GB）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/9247b21d9bbd6d8997a14dc33c912316.png" alt="image.png"></p><p>如果你想扩容C盘，右键红色框框区域的C盘，选择<code>调整/移动分区</code>，会打开如下界面。勾选<code>从(*)分区中划分空间给(C)</code>，此时右侧会出现一个下拉菜单，勾选D盘（一定不要勾选那两个<code>*</code>开头的保留分区），此时就可以输入你想给C盘扩容后的容量了，比如想把C盘扩容到300GB就输入300即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/c89b075a1e132a8adaca64af27a4b18c.png" alt="image.png"></p><p>再次提醒：进行下一步之前，请先备份C盘所在文件夹的资料文件！！！</p><p>作为示例，这里我输入C盘扩容到350GB</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/72abda5f856a99013ca91cee16406a4b.png" alt="image.png"></p><p>点击确定，会发现下方分区大小已经变化了，但实际上我们的操作还没提交，右上角可以看到提交按钮亮起，有三个操作需要进行</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/d0076d1aa4c517a429d324713be9b0d7.png" alt="image.png"></p><p>这三个操作分别是缩容D盘，移动分区，扩容C盘。这里显示的预期时间很夸张，但实际上15分钟左右就能完成。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/2ad8be24ca47afcb336e76c97e9e9220.png" alt="image.png"></p><p>此时点击执行，会让你选择在什么模式下操作，一般情况选择Windows PE模式即可。选择后点击确定，分区助手就会重启电脑并开始扩容操作。</p><p>再次提醒：这一步的确定后就没有回头路了！！！一定要备份哦！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/19bc8602625ff5e20b5d57c7ed8294c3.png" alt="image.png"></p><p>会先在软件内走个进度条，随后重启电脑进入PE模式操作，PE界面长下面这样。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/a70195203766f4672afd546e10a34eea.png" alt="image.png"></p><p>耐心等待他完成即可，分区助手会自动重启电脑回到windows。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>然后就搞定了！成功将C盘从200GB扩容到300GB，且两个盘的资料都在。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/02/be620570e1124c946d5b6c531992ae58.png" alt="image.png"></p><p>最后还是得上个提醒，虽然我这边实测能成功，但不代表你那边一定能保留资料！备份准没错哦。</p>]]></content>
    
    
    <summary type="html">使用分区助手扩容windows的C盘</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Artalk】可信域名未配置导致的跨域访问问题</title>
    <link href="https://blog.musnow.top/posts/1277415323/"/>
    <id>https://blog.musnow.top/posts/1277415323/</id>
    <published>2024-01-31T03:40:00.000Z</published>
    <updated>2024-01-31T13:11:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天折腾halo的时候，发现artalk出现跨域访问报错，内容如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access to fetch at &#x27;https://artk.musnow.top/api/stat&#x27; from origin &#x27;https://halo.musnow.top&#x27; has been blocked by CORS policy: The &#x27;Access-Control-Allow-Origin&#x27; header contains multiple values &#x27;, https://halo.musnow.top&#x27;, but only one is allowed. </span><br><span class="line">Have the server send the header with a valid value, or, if an opaque response serves your needs, set the request&#x27;s mode to &#x27;no-cors&#x27; to fetch the resource with CORS disabled.</span><br></pre></td></tr></table></figure><p>尝试在nginx里面加了一个跨域访问头，依旧没有解决这个问题</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">&#x27;https://halo.musnow.top&#x27;</span> always;</span><br></pre></td></tr></table></figure><p>后来咨询其他老哥才知道，这是artalk内部可信域名配置的问题，不需要修改nginx配置文件。(记得把上方的nginx配置删掉)</p><p>我只添加了站点的可信域名，artalk系统设置里面还有一个可信域名配置</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/6d160c66af4d1c70cfb05cce383131f8.png" alt="image.png"></p><p>设置了之后需要重启artalk容器，才能让修改生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart artalk-go</span><br></pre></td></tr></table></figure><p>现在就OK了</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/8ca3eab60bfb00557e0284d19b668de8.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">artalk后台可信域名未配置导致的跨域访问问题</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Docker真好玩" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Docker%E7%9C%9F%E5%A5%BD%E7%8E%A9/"/>
    
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="Docker" scheme="https://blog.musnow.top/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>【MySQL】内置函数</title>
    <link href="https://blog.musnow.top/posts/4252514363/"/>
    <id>https://blog.musnow.top/posts/4252514363/</id>
    <published>2024-01-30T07:45:00.000Z</published>
    <updated>2024-01-30T07:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>像编程语言一样，MySQL同样也提供了一部分内置函数供用户在SQL中进行调用。这些内置函数能简单处理一部分数据，避免我们在不同的用户层语言中进行逻辑编写。</p><h1 id="1-日期函数"><a href="#1-日期函数" class="headerlink" title="1.日期函数"></a>1.日期函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>current_date()</td><td>当前日期</td></tr><tr><td>current_time()</td><td>当前时间</td></tr><tr><td>current_timestamp()</td><td>当前日期和时间</td></tr><tr><td>now()</td><td>当前日期和时间（同上）</td></tr><tr><td>unix_timestamp()</td><td>当前时间戳数字</td></tr><tr><td>date(datetime)</td><td>返回datetime参数中的日期部分</td></tr><tr><td>date_add(date,interval d_value_type)</td><td>在date中添加日期或时间，interval后的参数可以是<code>year/month/day/hour/mintue/second</code></td></tr><tr><td>date_sub(date,interval d_value_type)</td><td>在date中减去日期或时间，interval后的参数可以是<code>year/month/day/hour/mintue/second</code></td></tr><tr><td>datediff(date1,date2)</td><td>计算两个日期的时间差，单位为天</td></tr><tr><td>date_format(date,format_string)</td><td>根据format_string字符串来格式化时间显示</td></tr><tr><td>year(date)</td><td>获取日期中的年份</td></tr><tr><td>month(date)</td><td>获取日期中的月份</td></tr><tr><td>day(date)</td><td>获取日期中的天</td></tr><tr><td>str_to_date(string,format_string)</td><td>字符串转时间</td></tr></tbody></table><p>下面挨个做个演示</p><h2 id="1-1-获取日期和时间"><a href="#1-1-获取日期和时间" class="headerlink" title="1.1 获取日期和时间"></a>1.1 获取日期和时间</h2><p>获取时间分为获取当前日期，获取当前时间，和获取当前日期+时间；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select current_time();</span><br><span class="line">+----------------+</span><br><span class="line">| current_time() |</span><br><span class="line">+----------------+</span><br><span class="line">| 14:27:49       |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select now();</span><br><span class="line">+---------------------+</span><br><span class="line">| now()               |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2024-01-30 14:27:53 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select current_date();</span><br><span class="line">+----------------+</span><br><span class="line">| current_date() |</span><br><span class="line">+----------------+</span><br><span class="line">| 2024-01-30     |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select current_timestamp();</span><br><span class="line">+---------------------+</span><br><span class="line">| current_timestamp() |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2024-01-30 14:30:39 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>经过测试可以发现，在MySQL中，<code>current_timestamp()</code>函数和<code>now()</code>函数的效果等效。</p><p>只有<code>UNIX_TIMESTAMP()</code>函数返回的才是时间戳的数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT UNIX_TIMESTAMP();</span><br><span class="line">+------------------+</span><br><span class="line">| UNIX_TIMESTAMP() |</span><br><span class="line">+------------------+</span><br><span class="line">|       1706596346 |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/f6e691162d0c2360f990ab378809588b.png" alt="image-20240130143435696"></p><h2 id="1-2-获取时间的部分值"><a href="#1-2-获取时间的部分值" class="headerlink" title="1.2 获取时间的部分值"></a>1.2 获取时间的部分值</h2><p>使用YEAR\MONTH\DAY函数从一个时间中提取日期的部分信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW()) <span class="keyword">AS</span> current_year;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(NOW()) <span class="keyword">AS</span> current_month;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(NOW()) <span class="keyword">AS</span> current_day;</span><br></pre></td></tr></table></figure><p>执行效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT YEAR(NOW()) AS current_year;</span><br><span class="line">+--------------+</span><br><span class="line">| current_year |</span><br><span class="line">+--------------+</span><br><span class="line">|         2024 |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; SELECT MONTH(NOW()) AS current_month;</span><br><span class="line">+---------------+</span><br><span class="line">| current_month |</span><br><span class="line">+---------------+</span><br><span class="line">|             1 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; SELECT DAY(NOW()) AS current_day;</span><br><span class="line">+-------------+</span><br><span class="line">| current_day |</span><br><span class="line">+-------------+</span><br><span class="line">|          30 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-3-时间运算"><a href="#1-3-时间运算" class="headerlink" title="1.3 时间运算"></a>1.3 时间运算</h2><p>MySQL中时间可以直接用加减进行运算，时间列和时间函数返回的时间之间可以通过大于小于来比较大小；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT NOW() + INTERVAL 1 DAY;</span><br><span class="line">+------------------------+</span><br><span class="line">| NOW() + INTERVAL 1 DAY |</span><br><span class="line">+------------------------+</span><br><span class="line">| 2024-01-31 14:49:57    |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>在大学数据库的考试中一般会给出一张表，存了学生的出生日期，让你筛选出年龄小于20岁的学生，此时就需要进行年份的提取和时间计算</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 假设学生表中是id,name,birth三个字段</span></span><br><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">year</span>(now()) <span class="operator">-</span> <span class="keyword">year</span>(birth)) <span class="operator">&lt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>下面演示表格中提到的<code>date_add/date_sub</code>运算函数的用法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在日期的基础上加上时间</span></span><br><span class="line"><span class="keyword">select</span> date_add(<span class="string">&#x27;2024-1-1&#x27;</span>,<span class="type">interval</span> <span class="number">2</span> <span class="keyword">month</span>);</span><br><span class="line"><span class="comment">-- 在日期的基础上减去时间</span></span><br><span class="line"><span class="keyword">select</span> date_sub(<span class="string">&#x27;2023-10-1&#x27;</span>, <span class="type">interval</span> <span class="number">2</span> <span class="keyword">day</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第二个参数可选的时间间隔</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span></span><br><span class="line"><span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span></span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select date_sub(&#x27;2023-10-1&#x27;, interval 2 day);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| date_sub(&#x27;2023-10-1&#x27;, interval 2 day) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2023-09-29                            |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select date_add(&#x27;2024-1-1&#x27;,interval 2 month);</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| date_add(&#x27;2024-1-1&#x27;,interval 2 month) |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| 2024-03-01                            |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>另外，MySQL中是允许日期中出现前导0的，依旧可以被正常识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select date_sub(&#x27;2023-01-01&#x27;, interval 2 day);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| date_sub(&#x27;2023-01-01&#x27;, interval 2 day) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2022-12-30                             |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>使用datediff函数计算两个日期的差值（日期要用单引号传入）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SELECT DATEDIFF(&#x27;2022-01-30&#x27;, &#x27;2022-01-15&#x27;);</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| DATEDIFF(&#x27;2022-01-30&#x27;, &#x27;2022-01-15&#x27;) |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">|                                   15 |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>具体例子：在msg表中查询两分钟内发布的消息，可以用<code>date_add</code>函数来实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> msg </span><br><span class="line"><span class="keyword">where</span> date_add(sendtime, <span class="type">interval</span> <span class="number">2</span> <span class="keyword">minute</span>) <span class="operator">&gt;</span> now();</span><br></pre></td></tr></table></figure><h2 id="1-4-日期格式化"><a href="#1-4-日期格式化" class="headerlink" title="1.4 日期格式化"></a>1.4 日期格式化</h2><p>使用date_format函数将时间格式化输出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>);</span><br></pre></td></tr></table></figure><p>在这个格式化字符串中，你可以把一些值给写死，比如将分钟和秒写死为0点0分；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y-%m-%d %H:00:00&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最终效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2024-01-30 14:59:33                    |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:00:00&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%Y-%m-%d %H:00:00&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 2024-01-30 14:00:00                    |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>年份Y可以为小y，此时只显示年份的后二位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select DATE_FORMAT(now(),&#x27;%y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| DATE_FORMAT(now(),&#x27;%y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">| 24-01-30 15:00:23                      |</span><br><span class="line">+----------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-5-字符串转时间"><a href="#1-5-字符串转时间" class="headerlink" title="1.5 字符串转时间"></a>1.5 字符串转时间</h2><p><code>str_to_date</code>函数可以将给定的时间字符串和给定的字符串时间格式，转换为一个datetime类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> str_to_date(<span class="string">&#x27;2024-01-02 20:37:14&#x27;</span>, <span class="string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>);</span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%Y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%Y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| 2024-01-02 20:37:14                                     |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>如果你给定的格式化字符串和时间字符串不符合，则无法成功转换，结果为NULL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%y-%m-%d %H:%i:%s&#x27;);</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| str_to_date(&#x27;2024-01-02 20:37:14&#x27;, &#x27;%y-%m-%d %H:%i:%s&#x27;) |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">| NULL                                                    |</span><br><span class="line">+---------------------------------------------------------+</span><br><span class="line">1 row in set, 1 warning (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="1-6-其他参考函数"><a href="#1-6-其他参考函数" class="headerlink" title="1.6 其他参考函数"></a>1.6 其他参考函数</h2><p>以下是比较全的MySQL日期函数，可供参考</p><details><summary>点我查看</summary><p>原文链接：<a href="https://blog.csdn.net/qinshijangshan/article/details/72874667">MySQL之日期时间处理函数</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL日期时间处理函数</span></span><br><span class="line"><span class="comment">-- 当前日期：2017-05-12（突然发现今天512，是不是会拉防空警报）</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW() <span class="keyword">FROM</span> DUAL;<span class="comment">-- 当前日期时间：2017-05-12 11:41:47</span></span><br><span class="line"><span class="comment">-- 在MySQL里也存在和Oracle里类似的dual虚拟表：官方声明纯粹是为了满足select ... from...这一习惯问题，mysql会忽略对该表的引用。</span></span><br><span class="line"><span class="comment">-- 那么MySQL中就不用DUAL了吧。</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW();<span class="comment">-- 当前日期时间：2017-05-12 11:41:55</span></span><br><span class="line"><span class="comment">-- 除了 now() 函数能获得当前的日期时间外，MySQL 中还有下面的函数：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:19:31</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>;<span class="comment">-- 2017-05-15 10:19:51</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>();<span class="comment">-- 2017-05-15 10:20:00</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>;<span class="comment">-- 2017-05-15 10:20:10</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:20:21(v4.0.6)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIMESTAMP</span>;<span class="comment">-- 2017-05-15 10:20:30(v4.0.6)</span></span><br><span class="line"><span class="comment">-- 这些日期时间函数，都等同于 now()。鉴于 now() 函数简短易记，建议总是使用 now()来替代上面列出的函数。</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE();<span class="comment">-- 当前日期时间：2017-05-12 11:42:03</span></span><br><span class="line"><span class="comment">-- sysdate() 日期时间函数跟 now() 类似，</span></span><br><span class="line"><span class="comment">-- 不同之处在于：now() 在执行开始时值就得到了;sysdate() 在函数执行时动态得到值。</span></span><br><span class="line"><span class="comment">-- 看下面的例子就明白了：</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW(), SLEEP(<span class="number">3</span>), NOW();</span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE(), SLEEP(<span class="number">3</span>), SYSDATE();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> CURDATE();<span class="comment">-- 当前日期：2017-05-12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>();<span class="comment">-- 当前日期：等同于 CURDATE()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>;<span class="comment">-- 当前日期：等同于 CURDATE()</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> CURTIME();<span class="comment">-- 当前时间：11:42:47</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>();<span class="comment">-- 当前时间：等同于 CURTIME()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>;<span class="comment">-- 当前时间：等同于 CURTIME()</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 获得当前 UTC 日期时间函数</span></span><br><span class="line"><span class="keyword">SELECT</span> UTC_TIMESTAMP(), UTC_DATE(), UTC_TIME()</span><br><span class="line"><span class="comment">-- MySQL 获得当前时间戳函数：current_timestamp, current_timestamp()</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>, <span class="built_in">CURRENT_TIMESTAMP</span>();<span class="comment">-- 2017-05-15 10:32:21 | 2017-05-15 10:32:21</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 日期时间 Extract（选取） 函数</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@dt</span> <span class="operator">=</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">DATE</span>(<span class="variable">@dt</span>);<span class="comment">-- 获取日期：2017-05-15</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIME</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取时间：10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取年份</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取月份</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取日</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取时</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取秒</span></span><br><span class="line"><span class="keyword">SELECT</span> MICROSECOND(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取毫秒</span></span><br><span class="line"><span class="keyword">SELECT</span> QUARTER(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 获取季度</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 20 (获取周)</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>, <span class="number">7</span>);<span class="comment">-- ****** 测试此函数在MySQL5.6下无效</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKOFYEAR(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 同week()</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFYEAR(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 135 (日期在年度中第几天)</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFMONTH(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 5 (日期在月度中第几天)</span></span><br><span class="line"><span class="keyword">SELECT</span> DAYOFWEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 2 (日期在周中第几天；周日为第一天)</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKDAY(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 0</span></span><br><span class="line"><span class="keyword">SELECT</span> WEEKDAY(<span class="string">&#x27;2017-05-21 10:37:14.123456&#x27;</span>);<span class="comment">-- 6(与dayofweek()都表示日期在周的第几天，只是参考标准不同，weekday()周一为第0天，周日为第6天)</span></span><br><span class="line"><span class="keyword">SELECT</span> YEARWEEK(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 201720(年和周)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">YEAR</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">MONTH</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">DAY</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">HOUR</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">MINUTE</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(<span class="keyword">SECOND</span> <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(QUARTER <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(WEEK <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(YEAR_MONTH <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_HOUR <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_MINUTE <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 151037(日时分)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 15103714(日时分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(DAY_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 15103714123456(日时分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_MINUTE <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 1037(时分)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 103714(时分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(HOUR_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 103714123456(日时分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MINUTE_SECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 3714(分秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(MINUTE_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 3714123456(分秒毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">EXTRACT</span>(SECOND_MICROSECOND <span class="keyword">FROM</span> <span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- 14123456(秒毫秒)</span></span><br><span class="line"><span class="comment">-- MySQL Extract() 函数除了没有date(),time() 的功能外，其他功能一应具全。</span></span><br><span class="line"><span class="comment">-- 并且还具有选取‘day_microsecond&#x27; 等功能。</span></span><br><span class="line"><span class="comment">-- 注意这里不是只选取 day 和 microsecond，而是从日期的 day 部分一直选取到 microsecond 部分。</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> DAYNAME(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- Monday(返回英文星期)</span></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>);<span class="comment">-- May(返回英文月份)</span></span><br><span class="line"><span class="keyword">SELECT</span> LAST_DAY(<span class="string">&#x27;2016-02-01&#x27;</span>);<span class="comment">-- 2016-02-29 (返回月份中最后一天)</span></span><br><span class="line"><span class="keyword">SELECT</span> LAST_DAY(<span class="string">&#x27;2016-05-01&#x27;</span>);<span class="comment">-- 2016-05-31</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- DATE_ADD(date,INTERVAL expr type) 从日期加上指定的时间间隔</span></span><br><span class="line"><span class="comment">-- type参数可参考：http://www.w3school.com.cn/sql/func_date_sub.asp</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 表示：2018-05-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> QUARTER);<span class="comment">-- 表示：2017-08-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 表示：2017-06-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> WEEK);<span class="comment">-- 表示：2017-05-22 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 表示：2017-05-16 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span>);<span class="comment">-- 表示：2017-05-15 11:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span>);<span class="comment">-- 表示：2017-05-15 10:38:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span>);<span class="comment">-- 表示：2017-05-15 10:37:15.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> MICROSECOND);<span class="comment">-- 表示：2017-05-15 10:37:14.123457</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- DATE_SUB(date,INTERVAL expr type) 从日期减去指定的时间间隔</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 表示：2016-05-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> QUARTER);<span class="comment">-- 表示：2017-02-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 表示：2017-04-15 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> WEEK);<span class="comment">-- 表示：2017-05-08 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 表示：2017-05-14 10:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">HOUR</span>);<span class="comment">-- 表示：2017-05-15 09:37:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MINUTE</span>);<span class="comment">-- 表示：2017-05-15 10:36:14.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span>);<span class="comment">-- 表示：2017-05-15 10:37:13.123456</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2017-05-15 10:37:14.123456&#x27;</span>,<span class="type">INTERVAL</span> <span class="number">1</span> MICROSECOND);<span class="comment">-- 表示：2017-05-15 10:37:14.123455</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 经特殊日期测试，DATE_SUB(date,INTERVAL expr type)可放心使用</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 前一天：2017-05-11</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">DAY</span>);<span class="comment">-- 后一天：2017-05-13</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 一个月前日期：2017-04-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">MONTH</span>);<span class="comment">-- 一个月后日期：2017-06-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 一年前日期：2016-05-12</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(CURDATE(),<span class="type">INTERVAL</span> <span class="number">-1</span> <span class="keyword">YEAR</span>);<span class="comment">-- 一年后日期：20178-06-12</span></span><br><span class="line"><span class="comment">-- MySQL date_sub() 日期时间函数 和 date_add() 用法一致，并且可以用INTERNAL -1 xxx的形式互换使用；</span></span><br><span class="line"><span class="comment">-- 另外，MySQL 中还有两个函数 subdate(), subtime()，建议，用 date_sub() 来替代。</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 另类日期函数：period_add(P,N), period_diff(P1,P2)</span></span><br><span class="line"><span class="comment">-- 函数参数“P” 的格式为“YYYYMM” 或者 “YYMM”，第二个参数“N” 表示增加或减去 N month（月）。</span></span><br><span class="line"><span class="comment">-- MySQL period_add(P,N)：日期加/减去N月。</span></span><br><span class="line"><span class="keyword">SELECT</span> PERIOD_ADD(<span class="number">201705</span>,<span class="number">2</span>), PERIOD_ADD(<span class="number">201705</span>,<span class="number">-2</span>);<span class="comment">-- 201707  20170503</span></span><br><span class="line"><span class="comment">-- period_diff(P1,P2)：日期 P1-P2，返回 N 个月。</span></span><br><span class="line"><span class="keyword">SELECT</span> PERIOD_DIFF(<span class="number">201706</span>, <span class="number">201703</span>);<span class="comment">-- </span></span><br><span class="line"><span class="comment">-- datediff(date1,date2)：两个日期相减 date1 - date2，返回天数</span></span><br><span class="line"><span class="keyword">SELECT</span> DATEDIFF(<span class="string">&#x27;2017-06-05&#x27;</span>,<span class="string">&#x27;2017-05-29&#x27;</span>);<span class="comment">-- 7</span></span><br><span class="line"><span class="comment">-- TIMEDIFF(time1,time2)：两个日期相减 time1 - time2，返回 TIME 差值</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMEDIFF(<span class="string">&#x27;2017-06-05 19:28:37&#x27;</span>, <span class="string">&#x27;2017-06-05 17:00:00&#x27;</span>);<span class="comment">-- 02:28:37</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL日期转换函数</span></span><br><span class="line"><span class="keyword">SELECT</span> TIME_TO_SEC(<span class="string">&#x27;01:00:05&#x27;</span>); <span class="comment">-- 3605</span></span><br><span class="line"><span class="keyword">SELECT</span> SEC_TO_TIME(<span class="number">3605</span>);<span class="comment">-- 01:00:05</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL （日期、天数）转换函数：to_days(date), from_days(days)</span></span><br><span class="line"><span class="keyword">SELECT</span> TO_DAYS(<span class="string">&#x27;0000-00-00&#x27;</span>); <span class="comment">-- NULL </span></span><br><span class="line"><span class="keyword">SELECT</span> TO_DAYS(<span class="string">&#x27;2017-06-05&#x27;</span>); <span class="comment">-- 736850</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_DAYS(<span class="number">0</span>);           <span class="comment">-- &#x27;0000-00-00&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_DAYS(<span class="number">736850</span>);      <span class="comment">-- &#x27;2017-06-05&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL Str to Date （字符串转换为日期）函数：str_to_date(str, format)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;06.05.2017 19:40:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %H:%i:%s&#x27;</span>);<span class="comment">-- 2017-06-05 19:40:30</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;06/05/2017&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>);                  <span class="comment">-- 2017-06-05</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;2017/12/3&#x27;</span>,<span class="string">&#x27;%Y/%m/%d&#x27;</span>)       <span class="comment">-- 2017-12-03</span></span><br><span class="line"><span class="keyword">SELECT</span> STR_TO_DATE(<span class="string">&#x27;20:09:30&#x27;</span>, <span class="string">&#x27;%h:%i:%s&#x27;</span>)       <span class="comment">-- NULL(超过12时的小时用小写h，得到的结果为NULL)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 日期时间格式化</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_FORMAT(<span class="string">&#x27;2017-05-12 17:03:51&#x27;</span>, <span class="string">&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;</span>);<span class="comment">-- 2017年05月12日 17时03分51秒(具体需要什么格式的数据根据实际情况来;小写h为12小时制;)</span></span><br><span class="line"><span class="keyword">SELECT</span> TIME_FORMAT(<span class="string">&#x27;2017-05-12 17:03:51&#x27;</span>, <span class="string">&#x27;%Y年%m月%d日 %H时%i分%s秒&#x27;</span>);<span class="comment">-- 0000年00月00日 17时03分51秒(time_format()只能用于时间的格式化)</span></span><br><span class="line"><span class="comment">-- STR_TO_DATE()和DATE_FORMATE()为互逆操作</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 获得国家地区时间格式函数：get_format()</span></span><br><span class="line"><span class="comment">-- MySQL get_format() 语法：get_format(date|time|datetime, &#x27;eur&#x27;|&#x27;usa&#x27;|&#x27;jis&#x27;|&#x27;iso&#x27;|&#x27;internal&#x27;</span></span><br><span class="line"><span class="comment">-- MySQL get_format() 用法的全部示例：</span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%m.%d.%Y&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%d.%m.%Y&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;internal&#x27;</span>);   <span class="comment">-- &#x27;%Y%m%d&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%Y-%m-%d %H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(DATETIME,<span class="string">&#x27;internal&#x27;</span>); <span class="comment">-- &#x27;%Y%m%d%H%i%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;usa&#x27;</span>);   <span class="comment">-- &#x27;%h:%i:%s %p&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;jis&#x27;</span>);   <span class="comment">-- &#x27;%H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;iso&#x27;</span>);   <span class="comment">-- &#x27;%H:%i:%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;eur&#x27;</span>);   <span class="comment">-- &#x27;%H.%i.%s&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;internal&#x27;</span>);     <span class="comment">-- &#x27;%H%i%s&#x27;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 拼凑日期、时间函数：makdedate(year,dayofyear), maketime(hour,minute,second)</span></span><br><span class="line"><span class="keyword">SELECT</span> MAKEDATE(<span class="number">2017</span>,<span class="number">31</span>);   <span class="comment">-- &#x27;2017-01-31&#x27; </span></span><br><span class="line"><span class="keyword">SELECT</span> MAKEDATE(<span class="number">2017</span>,<span class="number">32</span>);   <span class="comment">-- &#x27;2017-02-01&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> MAKETIME(<span class="number">19</span>,<span class="number">52</span>,<span class="number">35</span>);  <span class="comment">-- &#x27;19:52:35&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 时区（timezone）转换函数：convert_tz(dt,from_tz,to_tz)</span></span><br><span class="line"><span class="keyword">SELECT</span> CONVERT_TZ(<span class="string">&#x27;2017-06-05 19:54:12&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>); <span class="comment">-- 2017-06-05 11:54:12</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL （Unix 时间戳、日期）转换函数</span></span><br><span class="line"><span class="comment">-- unix_timestamp(), unix_timestamp(date), from_unixtime(unix_timestamp), from_unixtime(unix_timestamp,format)</span></span><br><span class="line"><span class="comment">-- 将具体时间时间转为timestamp</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP();<span class="comment">-- 当前时间的时间戳：1494815779</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP(<span class="string">&#x27;2017-05-15&#x27;</span>);<span class="comment">-- 指定日期的时间戳：1494777600</span></span><br><span class="line"><span class="keyword">SELECT</span> UNIX_TIMESTAMP(<span class="string">&#x27;2017-05-15 10:37:14&#x27;</span>);<span class="comment">-- 指定日期时间的时间戳：1494815834</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 将时间戳转为具体时间</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_UNIXTIME(<span class="number">1494815834</span>);<span class="comment">-- 2017-05-15 10:37:14</span></span><br><span class="line"><span class="keyword">SELECT</span> FROM_UNIXTIME(<span class="number">1494815834</span>, <span class="string">&#x27;%Y年%m月%d日 %h时%分:%s秒&#x27;</span>);<span class="comment">-- 获取时间戳对应的格式化日期时间</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">-- MySQL 时间戳（timestamp）转换、增、减函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIMESTAMP</span>(<span class="string">&#x27;2017-05-15&#x27;</span>);<span class="comment">-- 2017-05-15 00:00:00</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">TIMESTAMP</span>(<span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>, <span class="string">&#x27;01:01:01&#x27;</span>);<span class="comment">-- 2017-05-15 09:13:26</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>, <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span>);<span class="comment">-- 2017-05-16 08:12:25</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPADD(<span class="keyword">DAY</span>, <span class="number">1</span>, <span class="string">&#x27;2017-05-15 08:12:25&#x27;</span>);<span class="comment">-- 2017-05-16 08:12:25; MySQL timestampadd() 函数类似于 date_add()。</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">YEAR</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-05-15&#x27;</span>);<span class="comment">-- -1</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">MONTH</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-06-15&#x27;</span>);<span class="comment">-- -11</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">DAY</span>, <span class="string">&#x27;2017-06-01&#x27;</span>, <span class="string">&#x27;2016-06-15&#x27;</span>);<span class="comment">-- -351</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">HOUR</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -8432</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">MINUTE</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -505932</span></span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF(<span class="keyword">SECOND</span>, <span class="string">&#x27;2017-06-01 08:12:25&#x27;</span>, <span class="string">&#x27;2016-06-15 00:00:00&#x27;</span>);<span class="comment">-- -30355945</span></span><br></pre></td></tr></table></figure></details><h2 id="1-7-自动赋值时间戳"><a href="#1-7-自动赋值时间戳" class="headerlink" title="1.7 自动赋值时间戳"></a>1.7 自动赋值时间戳</h2><p>官方文档：<a href="https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html">https://dev.mysql.com/doc/refman/8.0/en/timestamp-initialization.html</a></p><p>MySQL有时间函数，也可以在插入和操作数据的时候自动帮我们更新时间。下面是一个示例语句，在TIMESTAMP和DATETIME类型中都可以这么使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (</span><br><span class="line">  ts <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  dt DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>ON UPDATE</code>语句的含义为当行被更新的时候，就自动更新为当前时间（即更新时间）</p><p>举个具体的例子：用户表中，我们的一条记录可以有两个时间字段，一个是更新时间，即用户信息被用户修改后的时间（这个时间可以用来限制用户多久才能修改一次个人信息等操作），另外一个是插入时间，即用户注册的时间。</p><p>此时可以让MySQL来自动帮我们维护插入时间和更新时间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> your_table (</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  data <span class="type">VARCHAR</span>(<span class="number">255</span>),</span><br><span class="line">  created_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  updated_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="2-字符串函数"><a href="#2-字符串函数" class="headerlink" title="2.字符串函数"></a>2.字符串函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>charset(str)</td><td>返回字符串的字符集</td></tr><tr><td>concat(str1,str2[,…])</td><td>拼接多个字符串</td></tr><tr><td>instr(str,substr)</td><td>返回substr在str中出现的位置，不存在则返回0</td></tr><tr><td>ucase(string)</td><td>字符串转大写</td></tr><tr><td>lcase(string)</td><td>字符串转小写</td></tr><tr><td>left(string,length)&#x2F;right(string,length)</td><td>从string的左边&#x2F;右边起取length个字符</td></tr><tr><td>length(string)</td><td>字符串长度</td></tr><tr><td>replace(str,search_str,replace_str)</td><td>将str中的replace_str部分替换为search_str</td></tr><tr><td>strcmp(str1,str2)</td><td>逐字符比较两个字符串的大小</td></tr><tr><td>substring(str,position [,length])</td><td>从str的position开始取length个字符</td></tr><tr><td>ltrim(strin)&#x2F;rtrim(str)&#x2F;trim(str)</td><td>去除字符串中的前空格或者后空格</td></tr></tbody></table><p>简单测试一下这些函数的使用吧</p><h2 id="2-1-查看字符串字符集"><a href="#2-1-查看字符串字符集" class="headerlink" title="2.1 查看字符串字符集"></a>2.1 查看字符串字符集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select charset(&quot;你好&quot;);</span><br><span class="line">+-------------------+</span><br><span class="line">| charset(&quot;你好&quot;)   |</span><br><span class="line">+-------------------+</span><br><span class="line">| utf8mb3           |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select charset(&quot;125412446&quot;);</span><br><span class="line">+----------------------+</span><br><span class="line">| charset(&quot;125412446&quot;) |</span><br><span class="line">+----------------------+</span><br><span class="line">| utf8mb3              |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select charset(name) from student;</span><br><span class="line">+---------------+</span><br><span class="line">| charset(name) |</span><br><span class="line">+---------------+</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">| utf8mb4       |</span><br><span class="line">+---------------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-2-字符串拼接"><a href="#2-2-字符串拼接" class="headerlink" title="2.2 字符串拼接"></a>2.2 字符串拼接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select concat(&#x27;你好&#x27;,&#x27;，&#x27;,&#x27;今天天气不错&#x27;);</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">| concat(&#x27;你好&#x27;,&#x27;，&#x27;,&#x27;今天天气不错&#x27;)          |</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">| 你好，今天天气不错                          |</span><br><span class="line">+---------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-3-子字符串查询"><a href="#2-3-子字符串查询" class="headerlink" title="2.3 子字符串查询"></a>2.3 子字符串查询</h2><p>使用instr查询，在第一个参数中查询第二个参数的字符串。找到了子串后，返回起始位置的偏移量（并非下标），没有找到返回0。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select instr(&#x27;abcdef&#x27;,&#x27;bc&#x27;);</span><br><span class="line">+----------------------+</span><br><span class="line">| instr(&#x27;abcdef&#x27;,&#x27;bc&#x27;) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    2 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select instr(&#x27;abcdef&#x27;,&#x27;asdfa&#x27;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| instr(&#x27;abcdef&#x27;,&#x27;asdfa&#x27;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                       0 |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-4-字符串比较"><a href="#2-4-字符串比较" class="headerlink" title="2.4 字符串比较"></a>2.4 字符串比较</h2><p>和C语言中用的是同一个函数名strcmp；</p><ul><li>第一个字符串更大返回<code>1</code>；</li><li>第二个字符串更大返回<code>-1</code>；</li><li>两个字符串相同返回<code>0</code>（忽略大小写）；</li></ul><p>注意它的比较是根据字符的ASCII码来逐字符比较的，比如小写字母的ASCII码就更大，所以AB和ad比较的结果是负一。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;AB&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;AB&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                 0 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;aB&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;aB&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                 0 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;ad&#x27;);</span><br><span class="line">+-------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;ad&#x27;) |</span><br><span class="line">+-------------------+</span><br><span class="line">|                -1 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;AB&#x27;,&#x27;ABC&#x27;);</span><br><span class="line">+--------------------+</span><br><span class="line">| strcmp(&#x27;AB&#x27;,&#x27;ABC&#x27;) |</span><br><span class="line">+--------------------+</span><br><span class="line">|                 -1 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;ABcd&#x27;,&#x27;ABC&#x27;);</span><br><span class="line">+----------------------+</span><br><span class="line">| strcmp(&#x27;ABcd&#x27;,&#x27;ABC&#x27;) |</span><br><span class="line">+----------------------+</span><br><span class="line">|                    1 |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>中文比较应该也是类似的逻辑，只不过中文编码这方面我不太懂，就不深入探究了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你好吗&#x27;);</span><br><span class="line">+------------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你好吗&#x27;)      |</span><br><span class="line">+------------------------------+</span><br><span class="line">|                           -1 |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你&#x27;);</span><br><span class="line">+------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你&#x27;)    |</span><br><span class="line">+------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;你好&#x27;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;你好&#x27;)     |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                         0 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select strcmp(&#x27;你好&#x27;,&#x27;在吗&#x27;);</span><br><span class="line">+---------------------------+</span><br><span class="line">| strcmp(&#x27;你好&#x27;,&#x27;在吗&#x27;)     |</span><br><span class="line">+---------------------------+</span><br><span class="line">|                        -1 |</span><br><span class="line">+---------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-5-大小写转换"><a href="#2-5-大小写转换" class="headerlink" title="2.5 大小写转换"></a>2.5 大小写转换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ucase(&#x27;adfasbasdf324r&#x27;);</span><br><span class="line">+-------------------------+</span><br><span class="line">| ucase(&#x27;adfasbasdf324r&#x27;) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| ADFASBASDF324R          |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select lcase(&#x27;ADSB3QRdsadsfweq2&#x27;);</span><br><span class="line">+----------------------------+</span><br><span class="line">| lcase(&#x27;ADSB3QRdsadsfweq2&#x27;) |</span><br><span class="line">+----------------------------+</span><br><span class="line">| adsb3qrdsadsfweq2          |</span><br><span class="line">+----------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-6-截取字符串"><a href="#2-6-截取字符串" class="headerlink" title="2.6 截取字符串"></a>2.6 截取字符串</h2><p>left和right用于从字符串的左边或右边开始截取给定长度的串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select left(&#x27;123456&#x27;,2);</span><br><span class="line">+------------------+</span><br><span class="line">| left(&#x27;123456&#x27;,2) |</span><br><span class="line">+------------------+</span><br><span class="line">| 12               |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select right(&#x27;123456&#x27;,2);</span><br><span class="line">+-------------------+</span><br><span class="line">| right(&#x27;123456&#x27;,2) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 56                |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>对于中文而言也是截取两个汉字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select right(&#x27;这是一个测试&#x27;,2);</span><br><span class="line">+-------------------------------+</span><br><span class="line">| right(&#x27;这是一个测试&#x27;,2)       |</span><br><span class="line">+-------------------------------+</span><br><span class="line">| 测试                          |</span><br><span class="line">+-------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select left(&#x27;这是一个测试&#x27;,2);</span><br><span class="line">+------------------------------+</span><br><span class="line">| left(&#x27;这是一个测试&#x27;,2)       |</span><br><span class="line">+------------------------------+</span><br><span class="line">| 这是                         |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>然后还有substring函数，可以从给定位置截取字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select substring(&#x27;123456&#x27;,2,2);</span><br><span class="line">+-------------------------+</span><br><span class="line">| substring(&#x27;123456&#x27;,2,2) |</span><br><span class="line">+-------------------------+</span><br><span class="line">| 23                      |</span><br><span class="line">+-------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-7-去除空格"><a href="#2-7-去除空格" class="headerlink" title="2.7 去除空格"></a>2.7 去除空格</h2><p>ltrim和rtrim用于去除字符串左侧或者右侧的空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ltrim(&#x27; 测试&#x27;);</span><br><span class="line">+------------------+</span><br><span class="line">| ltrim(&#x27; 测试&#x27;)   |</span><br><span class="line">+------------------+</span><br><span class="line">| 测试             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select rtrim(&#x27;右边空格测试              &#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| rtrim(&#x27;右边空格测试              &#x27;)       |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| 右边空格测试                              |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>trim是同时去除字符串左侧和右侧的空格，不会对字符串内部的空格做操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select trim(&#x27; 空 格 去除测试 &#x27;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| trim( &#x27;空 格 去除测试 &#x27;)       |</span><br><span class="line">+--------------------------------+</span><br><span class="line">| 空 格 去除测试                 |</span><br><span class="line">+--------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select trim(&#x27;空 格 去除测试&#x27;);</span><br><span class="line">+------------------------------+</span><br><span class="line">| trim(&#x27;空 格 去除测试&#x27;)       |</span><br><span class="line">+------------------------------+</span><br><span class="line">| 空 格 去除测试               |</span><br><span class="line">+------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="3-数学函数"><a href="#3-数学函数" class="headerlink" title="3.数学函数"></a>3.数学函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>abs(num)</td><td>绝对值</td></tr><tr><td>bin(decimal_num)</td><td>十进制转二进制</td></tr><tr><td>hex(decimal_num)</td><td>十进制转十六进制</td></tr><tr><td>conv(num,from_base,to_base)</td><td>进制转换</td></tr><tr><td>ceiling(num)</td><td>向上取整</td></tr><tr><td>floor(num)</td><td>向下取整</td></tr><tr><td>rand()</td><td>返回随机浮点数，范围<code>[0.0, 1.0)</code></td></tr><tr><td>mod(num,denominator)</td><td>取模，求余</td></tr><tr><td>format(num,dnum)</td><td>保留num的dnum位小数</td></tr></tbody></table><h2 id="3-1-绝对值"><a href="#3-1-绝对值" class="headerlink" title="3.1 绝对值"></a>3.1 绝对值</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select abs(-1241.12431);</span><br><span class="line">+------------------+</span><br><span class="line">| abs(-1241.12431) |</span><br><span class="line">+------------------+</span><br><span class="line">|       1241.12431 |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-2-进制转换"><a href="#3-2-进制转换" class="headerlink" title="3.2 进制转换"></a>3.2 进制转换</h2><p>十进制转二进制和十六进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select bin(100);</span><br><span class="line">+----------+</span><br><span class="line">| bin(100) |</span><br><span class="line">+----------+</span><br><span class="line">| 1100100  |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select hex(100);</span><br><span class="line">+----------+</span><br><span class="line">| hex(100) |</span><br><span class="line">+----------+</span><br><span class="line">| 64       |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>在任意进制中转换，源进制和目标进制都是通过数字传入，比如<code>2/8/10/16</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conv(目标数字,源进制,目标进制);</span><br></pre></td></tr></table></figure><p>测试如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">16</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">16</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">16</span>,<span class="number">10</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">16</span>,<span class="number">10</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">256</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]<span class="operator">&gt;</span> <span class="keyword">select</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">10</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> conv(<span class="number">100</span>,<span class="number">2</span>,<span class="number">10</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure><h2 id="3-3-向下和向上取整"><a href="#3-3-向下和向上取整" class="headerlink" title="3.3 向下和向上取整"></a>3.3 向下和向上取整</h2><p>向下取整和向上取整是基于小数的</p><ul><li>向下取整：不管小数有几位，都去除小数，整数部分不变；</li><li>向上取整：不管小数有几位，都去除小数，并把整数部分加一；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ceiling(99);</span><br><span class="line">+-------------+</span><br><span class="line">| ceiling(99) |</span><br><span class="line">+-------------+</span><br><span class="line">|          99 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select floor(99.1);</span><br><span class="line">+-------------+</span><br><span class="line">| floor(99.1) |</span><br><span class="line">+-------------+</span><br><span class="line">|          99 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ceiling(99.2);</span><br><span class="line">+---------------+</span><br><span class="line">| ceiling(99.2) |</span><br><span class="line">+---------------+</span><br><span class="line">|           100 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-4-模运算"><a href="#3-4-模运算" class="headerlink" title="3.4 模运算"></a>3.4 模运算</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mod</span>(a,b); <span class="comment">-- 等价于 a/b 的余数</span></span><br></pre></td></tr></table></figure><p>效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; SELECT MOD(17, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(17, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          2 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; SELECT MOD(15, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(15, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          0 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; SELECT MOD(13, 5);</span><br><span class="line">+------------+</span><br><span class="line">| MOD(13, 5) |</span><br><span class="line">+------------+</span><br><span class="line">|          3 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-5-小数格式化"><a href="#3-5-小数格式化" class="headerlink" title="3.5 小数格式化"></a>3.5 小数格式化</h2><p>使用format函数，第二个参数指定保留几位小数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select format(3.1415,2);</span><br><span class="line">+------------------+</span><br><span class="line">| format(3.1415,2) |</span><br><span class="line">+------------------+</span><br><span class="line">| 3.14             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="3-6-获取随机数"><a href="#3-6-获取随机数" class="headerlink" title="3.6 获取随机数"></a>3.6 获取随机数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select rand();</span><br><span class="line">+--------------------+</span><br><span class="line">| rand()             |</span><br><span class="line">+--------------------+</span><br><span class="line">| 0.5338426274562652 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select rand();</span><br><span class="line">+--------------------+</span><br><span class="line">| rand()             |</span><br><span class="line">+--------------------+</span><br><span class="line">| 0.7618099523352552 |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="4-其他函数"><a href="#4-其他函数" class="headerlink" title="4.其他函数"></a>4.其他函数</h1><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>user()</td><td>查询当前用户</td></tr><tr><td>database()</td><td>查询当前所在数据库</td></tr><tr><td>password(str)</td><td>对密码进行加密</td></tr><tr><td>md5(str)</td><td>计算字符串的md5</td></tr><tr><td>ifnull(val1,val2)</td><td>如果val1为null，返回val2，否则返回val1</td></tr></tbody></table><p>这里只对ifnull函数做个测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; select ifnull(null,&#x27;124&#x27;);</span><br><span class="line">+--------------------+</span><br><span class="line">| ifnull(null,&#x27;124&#x27;) |</span><br><span class="line">+--------------------+</span><br><span class="line">| 124                |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ifnull(&#x27;aba&#x27;,&#x27;124&#x27;);</span><br><span class="line">+---------------------+</span><br><span class="line">| ifnull(&#x27;aba&#x27;,&#x27;124&#x27;) |</span><br><span class="line">+---------------------+</span><br><span class="line">| aba                 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; select ifnull(&#x27;&#x27;,&#x27;124&#x27;);</span><br><span class="line">+------------------+</span><br><span class="line">| ifnull(&#x27;&#x27;,&#x27;124&#x27;) |</span><br><span class="line">+------------------+</span><br><span class="line">|                  |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>关于MySQL内置函数的章节就这些了，如果后续遇到本文没有记录的函数，会更新本文！</p>]]></content>
    
    
    <summary type="html">对于MySQL内置函数的相关介绍</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【MySQL】用户管理</title>
    <link href="https://blog.musnow.top/posts/1572064315/"/>
    <id>https://blog.musnow.top/posts/1572064315/</id>
    <published>2024-01-30T01:40:00.000Z</published>
    <updated>2024-01-30T03:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>用户管理是mysql权限控制的重要一环。</p><h1 id="1-MySQL的用户表"><a href="#1-MySQL的用户表" class="headerlink" title="1.MySQL的用户表"></a>1.MySQL的用户表</h1><p>在MySQL数据库中，所有的用户都存在系统数据库mysql的user表内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">| Host      | User        | authentication_string |</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">| localhost | mariadb.sys |                       |</span><br><span class="line">| localhost | root        | invalid               |</span><br><span class="line">| localhost | mysql       | invalid               |</span><br><span class="line">+-----------+-------------+-----------------------+</span><br><span class="line">3 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>因为我这是一个刚刚初始化的数据库，内部只有系统自带的几个用户。当我们使用<code>mysql -uroot</code>链接数据库时，其实就是使用了root用户。默认情况下root用户没有密码，所以<code>authentication_string</code>字段显示invalid；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> <span class="keyword">user</span>; <span class="comment">-- 查看表的结构</span></span><br></pre></td></tr></table></figure><p>对这张表里的字段做一个简单的解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">host：用户可以从什么主机上链接数据库，localhost代表只允许本地链接</span><br><span class="line">user：用户名</span><br><span class="line">password：旧版本使用的密码字段</span><br><span class="line">authentication_string：新版本使用的密码字段，用户密码用password函数加密后的字符串；</span><br><span class="line">很多很多以_priv结尾的字段：用户权限记录</span><br></pre></td></tr></table></figure><p>用户和权限管理的存在，让我们可以对MySQL中不同的表进行一定的权限风控，避免某个用户的误操作让整个数据库产生不可逆的损失。</p><h1 id="2-用户管理"><a href="#2-用户管理" class="headerlink" title="2.用户管理"></a>2.用户管理</h1><h2 id="2-1-创建用户"><a href="#2-1-创建用户" class="headerlink" title="2.1 创建用户"></a>2.1 创建用户</h2><p>在MySQL中创建用户的语法如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;登陆主机或IP&#x27;</span></span><br><span class="line">identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; create user &#x27;mu&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br></pre></td></tr></table></figure><p>这里我使用了<code>%</code>作为登录主机，其等价于IP层面理解的<code>0.0.0.0</code>，即该用户允许任何来源地的链接。</p><p>再次查询用户表，可以看到此时mu用户是有<code>authentication_string</code>字段的，其值是通过password函数加密后的123456；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| Host      | User        | authentication_string                     |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| localhost | mariadb.sys |                                           |</span><br><span class="line">| localhost | root        | invalid                                   |</span><br><span class="line">| localhost | mysql       | invalid                                   |</span><br><span class="line">| %         | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">4 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>我们也可以自行调用password函数，可以看到输出值和上表中的值一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; select password(&#x27;123456&#x27;);</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| password(&#x27;123456&#x27;)                        |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">| *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>此时想用这个新用户进行登录，在linux的命令行中输入如下命令进行登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u用户名 -p密码</span><br></pre></td></tr></table></figure><blockquote><p>如果你现在处于Linux的子用户，登录MySQL的root用户需要sudo权限，但登录新创建的MySQL用户是不需要sudo的。</p></blockquote><p>示例如下，登录MySQL后可以用<code>select user();</code>语句查看当前登录的用户是谁。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">❯ mysql -umu -p123456</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 35</span><br><span class="line">Server version: 10.6.16-MariaDB-0ubuntu0.22.04.1 Ubuntu 22.04</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.    </span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select user();</span><br><span class="line">+--------------+</span><br><span class="line">| user()       |</span><br><span class="line">+--------------+</span><br><span class="line">| mu@localhost |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><h2 id="2-2-删除用户"><a href="#2-2-删除用户" class="headerlink" title="2.2 删除用户"></a>2.2 删除用户</h2><p>只有高权限用户或者root用户才能删除其他用户。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果在传入用户名时不提供主机名，则主机名默认为<code>%</code>；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>;</span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; drop user &#x27;mu&#x27;@&#x27;192.168.1.30&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br></pre></td></tr></table></figure><h3 id="为什么在删除用户的时候需要指定主机名？"><a href="#为什么在删除用户的时候需要指定主机名？" class="headerlink" title="为什么在删除用户的时候需要指定主机名？"></a>为什么在删除用户的时候需要指定主机名？</h3><p>为什么在删除用户的时候需要指定主机名？因为同一个用户名，不同主机名是可以创建多个的，MySQL并没有限制一个用户名只能创建一条记录。</p><p>比如我们可以允许<strong>张三</strong>在IP1和IP2登录，这样就能创建两条用户记录，这两条用户记录的用户名都是张三，但可以有不同的登录来源host和不同的密码。这样我们可以控制单个用户在不同主机上的不同权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; create user &#x27;mu&#x27;@&#x27;192.168.1.30&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">| Host         | User        | authentication_string                     |        </span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">| localhost    | mariadb.sys |                                           |        </span><br><span class="line">| localhost    | root        | invalid                                   |        </span><br><span class="line">| localhost    | mysql       | invalid                                   |        </span><br><span class="line">| %            | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |        </span><br><span class="line">| 192.168.1.30 | mu          | *6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 |        </span><br><span class="line">+--------------+-------------+-------------------------------------------+        </span><br><span class="line">5 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><h2 id="2-3-设置用户密码"><a href="#2-3-设置用户密码" class="headerlink" title="2.3 设置用户密码"></a>2.3 设置用户密码</h2><p>设置当前用户的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password<span class="operator">=</span>password(<span class="string">&#x27;新密码&#x27;</span>);</span><br></pre></td></tr></table></figure><p>修改特定用户的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机名&#x27;</span><span class="operator">=</span>password(<span class="string">&#x27;新密码&#x27;</span>);</span><br></pre></td></tr></table></figure><p>示例如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; set password for &#x27;mu&#x27;@&#x27;%&#x27;=password(&#x27;654321&#x27;);</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select host,user,authentication_string from user;</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| Host      | User        | authentication_string                     |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">| localhost | mariadb.sys |                                           |</span><br><span class="line">| localhost | root        | invalid                                   |</span><br><span class="line">| localhost | mysql       | invalid                                   |</span><br><span class="line">| %         | mu          | *2A032F7C5BA932872F0F045E0CF6B53CF702F2C5 |</span><br><span class="line">+-----------+-------------+-------------------------------------------+</span><br><span class="line">4 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><h2 id="2-4-命令汇总小结"><a href="#2-4-命令汇总小结" class="headerlink" title="2.4 命令汇总小结"></a>2.4 命令汇总小结</h2><p>在我的实际使用中，最常用的用户管理就是在配置需要使用MySQL数据库的docker时的操作了。需要给一个新的docker设置新的数据库，并创建一个用户给这个docker来操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果是docker安装的MySQL</span></span><br><span class="line"><span class="comment">-- 需要先在Linux系统中进入MySQL容器的终端里面</span></span><br><span class="line">docker <span class="keyword">exec</span> <span class="operator">-</span>it 容器名 <span class="operator">/</span>bin<span class="operator">/</span>sh</span><br><span class="line"><span class="comment">-- 在终端命令行中执行如下命令</span></span><br><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p密码</span><br><span class="line"><span class="comment">-- 进入MySQL命令行后，创建数据库和用户</span></span><br><span class="line"><span class="keyword">create</span> database 数据库名字;</span><br><span class="line"><span class="comment">-- 数据库名字要和上面创建的这个数据库对应</span></span><br><span class="line"><span class="comment">-- 给定新表的所有权限到新用户上</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;用户的密码&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> 数据库名字.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="3-权限管理"><a href="#3-权限管理" class="headerlink" title="3.权限管理"></a>3.权限管理</h1><h2 id="3-1-权限列表"><a href="#3-1-权限列表" class="headerlink" title="3.1 权限列表"></a>3.1 权限列表</h2><p>MySQL数据库提供的权限非常细致，列表如下</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/bc621d3a1fada1faa98c2c0303df0890.png" alt="image-20240130103510001"></p><h2 id="3-2-给用户授权"><a href="#3-2-给用户授权" class="headerlink" title="3.2 给用户授权"></a>3.2 给用户授权</h2><p>授权的语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> 权限列表 <span class="keyword">on</span> 数据库.对象名 </span><br><span class="line"><span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span> [identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>]</span><br></pre></td></tr></table></figure><p>如果需要授予多个权限，用逗号分隔。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">delete</span> <span class="keyword">on</span> 数据库.对象名 </span><br><span class="line"><span class="keyword">to</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span> [identified <span class="keyword">by</span> <span class="string">&#x27;密码&#x27;</span>]</span><br></pre></td></tr></table></figure><p>如果想授予所有权限，可以使用<code>all</code>，或者<code>all privileges</code>，二者都代表所有权限，没有区别。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> [privileges] <span class="keyword">on</span> ... </span><br></pre></td></tr></table></figure><p>几点说明</p><ul><li>命令中的<code>[identified by &#39;密码&#39;]</code>是可选项，如果用户存在，则修改其密码。如果用户不存在，则以该密码创建用户。</li><li><code>数据库.对象名</code>可使用<code>*.*</code> ，代表当前MySQL中的所有数据对象；</li><li><code>数据库.*</code>代表某个数据库中的所有对象；</li></ul><h3 id="授权示例"><a href="#授权示例" class="headerlink" title="授权示例"></a>授权示例</h3><p>刚创建的用户是没有任何权限的，如下所示，我刚刚创建的mu用户并没有看到原本已有的<code>stu_test</code>数据库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select user();</span><br><span class="line">+--------------+</span><br><span class="line">| user()       |</span><br><span class="line">+--------------+</span><br><span class="line">| mu@localhost |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><p>使用如下命令给用户授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> stu_test.student <span class="keyword">to</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>授权之后，mu用户就能看到这个表了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| stu_test           |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><p>mu用户可以进行查询操作，但是不能删改student表，操作会被数据库拒绝。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; use stu_test;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [stu_test]&gt; select * from student;</span><br><span class="line">+------+--------+</span><br><span class="line">| id   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | 张三   |</span><br><span class="line">|    2 | 李四   |</span><br><span class="line">|    3 | 王五   |</span><br><span class="line">|    4 | 赵六   |</span><br><span class="line">|    5 | 刘七   |</span><br><span class="line">+------+--------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; insert into student values (6,&#x27;王璐&#x27;);</span><br><span class="line">ERROR 1142 (42000): INSERT command denied to user &#x27;mu&#x27;@&#x27;localhost&#x27; for table `stu_test`.`student`</span><br></pre></td></tr></table></figure><p>再次给予更新和删除的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">update</span>,<span class="keyword">delete</span>,<span class="keyword">insert</span> <span class="keyword">on</span> stu_test.student <span class="keyword">to</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时mu用户就能进行插入和删除等操作了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; insert into student values (6,&#x27;王璐&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [stu_test]&gt; delete from student where id = 5;</span><br><span class="line">Query OK, 1 row affected (0.007 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h3><p>如果发现赋予权限后用户还是不能执行某些操作，可以用如下命令刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="3-3-回收权限"><a href="#3-3-回收权限" class="headerlink" title="3.3 回收权限"></a>3.3 回收权限</h2><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限列表 <span class="keyword">on</span> 数据库.对象名 <span class="keyword">from</span> <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机&#x27;</span>;</span><br></pre></td></tr></table></figure><p>比如回收mu用户对于student表的插入权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">insert</span> <span class="keyword">on</span> stu_test.student <span class="keyword">from</span> <span class="string">&#x27;mu&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时mu用户又不能进行插入操作了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [stu_test]&gt; insert into student values (7,&#x27;你好&#x27;);</span><br><span class="line">ERROR 1142 (42000): INSERT command denied to user &#x27;mu&#x27;@&#x27;localhost&#x27; for table `stu_test`.`student`</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>MySQL中用户管理的基本操作就是这些了。在实际项目中，用户管理是数据库安全性的重要一环，得多加注意。</p>]]></content>
    
    
    <summary type="html">mysql和mariadb中用户管理的相关内容</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【解决】WSL2中安装Cuda遇到/usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link</title>
    <link href="https://blog.musnow.top/posts/2859840121/"/>
    <id>https://blog.musnow.top/posts/2859840121/</id>
    <published>2024-01-29T10:00:00.000Z</published>
    <updated>2024-02-01T07:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>慕雪遇到的情况是wsl2安装的ubuntu22.04在apt安装软件的时候就会出现这个报错，无论安装什么软件都会有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ldconfig.real: /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link</span><br></pre></td></tr></table></figure><h1 id="博客参考"><a href="#博客参考" class="headerlink" title="博客参考"></a>博客参考</h1><p>网上原有的解决方法是：<br>将<code>/usr/lib/wsl/lib</code>中的文件软连接到<code>/usr/lib/wsl/lib2</code>中。</p><p>该方法会导致后续出现</p><ul><li>问题1：NVIDIA-SMI couldn’t find libnvidia-ml.so library in your system.</li><li>问题2：error code is libcuda.so: cannot open shared object file: No such file or directory</li></ul><p>我的解决方法是：删除或备份<code>/usr/lib/wsl/lib</code>中的<code>libcuda.so</code>与<code>libcuda.so.1</code>，然后建立对<code>libcuda.so.1.1</code>的软连接。</p><p>注意，cp备份原本的时候不能直接备份到<code>/usr/lib/wsl/lib/</code>目录中，因为下一次启动时这个目录会被系统自动处理，内部的<code>.bak</code>文件会被删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份原本的</span></span><br><span class="line">sudo <span class="built_in">cp</span> /usr/lib/wsl/lib/libcuda.so  ~/libcuda.so.bak</span><br><span class="line">sudo <span class="built_in">cp</span> /usr/lib/wsl/lib/libcuda.so.1 ~/libcuda.so.1.bak</span><br><span class="line"><span class="comment"># 删除原本的</span></span><br><span class="line">sudo <span class="built_in">rm</span> -f /usr/lib/wsl/lib/libcuda.so </span><br><span class="line">sudo <span class="built_in">rm</span> -f /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line"><span class="comment"># 进行软连接</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib/wsl/lib/libcuda.so.1.1 /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib/wsl/lib/libcuda.so.1 /usr/lib/wsl/lib/libcuda.so</span><br></pre></td></tr></table></figure><p>修改后的效果如下，<code>libcuda.so</code>和<code>libcuda.so.1</code>实际上都指向<code>libcuda.so.1.1</code>；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">❯ ll</span><br><span class="line">total 216M</span><br><span class="line">-r-xr-xr-x 1 root root  11M Jan 13 06:30 libcudadebugger.so.1</span><br><span class="line">lrwxrwxrwx 1 root root   29 Feb  1 15:52 libcuda.so -&gt; /usr/lib/wsl/lib/libcuda.so.1</span><br><span class="line">lrwxrwxrwx 1 root root   31 Feb  1 15:52 libcuda.so.1 -&gt; /usr/lib/wsl/lib/libcuda.so.1.1</span><br><span class="line">-r-xr-xr-x 1 root root 155K Jan 13 06:30 libcuda.so.1.1</span><br></pre></td></tr></table></figure><h1 id="原文版权说明"><a href="#原文版权说明" class="headerlink" title="原文版权说明"></a>原文版权说明</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</span><br><span class="line">本文链接：https://blog.csdn.net/pl23k/article/details/131336220</span><br></pre></td></tr></table></figure><p>同时可以参考：<a href="https://kira-96.github.io/posts/wsl-libcuda.so.1-is-not-a-symbolic-link-%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">WSL libcuda.so.1 is not a symbolic link 的解决方法 | ✨kiraの博客</a></p>]]></content>
    
    
    <summary type="html">WSL2中安装Cuda遇到/usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link错误</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>【SQL】过程化SQL</title>
    <link href="https://blog.musnow.top/posts/3614589784/"/>
    <id>https://blog.musnow.top/posts/3614589784/</id>
    <published>2024-01-29T08:45:00.000Z</published>
    <updated>2024-01-29T08:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>课程基于 <strong>高等教育出版社《数据库系统概论（第6版）》王珊、杜小勇、陈红</strong></p><h2 id="过程化SQL"><a href="#过程化SQL" class="headerlink" title="过程化SQL"></a>过程化SQL</h2><blockquote><p>相关内容在书本的 P250</p></blockquote><p>过程化SQL是对基本SQL的扩展，在其基础上添加了一些控制过程的语句。</p><p>过程化SQL的<strong>基本结构是块</strong>，每个块可以包含定义部分和执行部分，块与块之间可以相互嵌套；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 定义部分</span></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">变量、常量、游标、异常等</span><br><span class="line"><span class="comment">-- 执行部分</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SQL语句、过程化SQL控制语句</span></span><br><span class="line">EXCEPTION <span class="comment">-- 遇到不能继续执行情况称为异常</span></span><br><span class="line"><span class="comment">-- 异常处理部分</span></span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><h3 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 变量定义</span></span><br><span class="line">变量名 数据类型 [[<span class="keyword">NOT</span> <span class="keyword">NULL</span>]:<span class="operator">=</span>初值表达式]</span><br><span class="line">变量名 数据类型 [[<span class="keyword">NOT</span> <span class="keyword">NULL</span>] 初值表达式]</span><br><span class="line"><span class="comment">-- 变量赋值</span></span><br><span class="line">变量名:<span class="operator">=</span>表达式</span><br><span class="line"><span class="comment">-- 常量定义</span></span><br><span class="line">常量名 数据类型 CONSTANT:<span class="operator">=</span>常量表达式 <span class="comment">-- 常量必须要在定义的时候赋值，且后续不可以修改</span></span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p>IF语句可以嵌套</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">IF 条件 <span class="keyword">THEN</span></span><br><span class="line"><span class="comment">-- 条件为真时执行的操作</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br><span class="line"></span><br><span class="line">IF 条件 <span class="keyword">THEN</span></span><br><span class="line"><span class="comment">-- 条件为真时执行</span></span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="comment">-- 条件为假时执行</span></span><br><span class="line"><span class="keyword">END</span> IF;</span><br></pre></td></tr></table></figure><h3 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h3><h4 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个循环体没有类似<code>while(条件)</code>​一样的循环终止，而是一个死循环，一般的关系型数据库都会提供EXIT\BREAK\LEAVE等语句来退出这个循环</p><h4 id="WHILE循环"><a href="#WHILE循环" class="headerlink" title="WHILE循环"></a>WHILE循环</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHILE 条件 LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个就是我们编程语言中常用的WHILE循环了，没啥好说的。而且同样支持提前退出的语句。</p><h4 id="FOR-LOOP"><a href="#FOR-LOOP" class="headerlink" title="FOR-LOOP"></a>FOR-LOOP</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> count <span class="keyword">IN</span> [REVERSE] bound1 .. bound2 LOOP</span><br><span class="line"><span class="comment">-- 循环体</span></span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><p>这个循环体的基本步骤：将count变量设置为循环下界bound1，检查他是否小于上界bound2，每次循环count+1；</p><p>当指定REVERSE的时候，将count设置为bound2，判断它是否大于下界bound1（反向迭代），每次循环count-1；</p><hr><p>下面是一个示例，遍历PC表中的price字段，并将其speed大于pspeed部分求和</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FOR</span> getprice <span class="keyword">IN</span> (<span class="keyword">select</span> price <span class="keyword">from</span> PC <span class="keyword">where</span> speed<span class="operator">&gt;</span>pspeed) LOOP</span><br><span class="line">   mCount:<span class="operator">=</span> mCount <span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">   total:<span class="operator">=</span> total<span class="operator">+</span> getprice; </span><br><span class="line"><span class="keyword">END</span> LOOP;</span><br></pre></td></tr></table></figure><h2 id="游标的概念和使用过程"><a href="#游标的概念和使用过程" class="headerlink" title="游标的概念和使用过程"></a>游标的概念和使用过程</h2><blockquote><p>游标的概念 、使用过程   p253</p></blockquote><p>在过程化SQL中，如果SELECT语句只返回一条记录，可以将该结果存放到变量中，当查询返回多条记录的时候，就要使用用表对结果集进行处理。</p><p>一个游标和一个SQL语句相关联。</p><h3 id="使用游标的步骤"><a href="#使用游标的步骤" class="headerlink" title="使用游标的步骤"></a>使用游标的步骤</h3><h4 id="1-声明-x2F-定义游标"><a href="#1-声明-x2F-定义游标" class="headerlink" title="1.声明&#x2F;定义游标"></a>1.声明&#x2F;定义游标</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> 游标名 [(参数<span class="number">1</span> 数据类型,参数<span class="number">2</span> 数据类型,...)]</span><br><span class="line"><span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </span><br><span class="line"><span class="keyword">SELECT</span> 语句;</span><br></pre></td></tr></table></figure><p>定义游标仅仅是一条说明性语句，这里的SELECT语句并没有被立刻执行</p><h4 id="2-打开游标"><a href="#2-打开游标" class="headerlink" title="2.打开游标"></a>2.打开游标</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">OPEN</span> 游标名 [(参数<span class="number">1</span> 数据类型,参数<span class="number">2</span> 数据类型,...)];</span><br></pre></td></tr></table></figure><p>打开游标的时候会执行对应的SELECT语句，并把查询结果取到缓冲区中。此时游标处于活动状态，指针指向查询结果集中的第一条记录。</p><h4 id="3-使用游标"><a href="#3-使用游标" class="headerlink" title="3.使用游标"></a>3.使用游标</h4><p>推进游标并读取当前记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FETCH</span> 游标名 <span class="keyword">INTO</span> 变量<span class="number">1</span>[,变量<span class="number">2</span>,....];</span><br></pre></td></tr></table></figure><p>其中变量必须和SELECT语句中的目标列表达式具有一一对应关系</p><p>用FETCH语句将游标指针向前推进一条记录，同时将缓冲区中的记录取出送至变量供过程化SQL进行进一步处理。通过内环指向FETCH语句逐条取走结果集中的行进行处理。</p><h4 id="4-关闭游标"><a href="#4-关闭游标" class="headerlink" title="4.关闭游标"></a>4.关闭游标</h4><p>释放结果集占用的缓冲区和其他资源</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CLOSE</span> 游标名;</span><br></pre></td></tr></table></figure><p>被关闭的游标可以被再次打开，此时会重新再次执行一次SELECT语句，两次的结果并不一定相同。</p><h2 id="存储过程（自定义函数）"><a href="#存储过程（自定义函数）" class="headerlink" title="存储过程（自定义函数）"></a>存储过程（自定义函数）</h2><h3 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">PROCEDURE</span> 过程名([</span><br><span class="line">[<span class="keyword">IN</span><span class="operator">|</span><span class="keyword">OUT</span><span class="operator">|</span><span class="keyword">INOUT</span>] 参数<span class="number">1</span> 数据类型,</span><br><span class="line">[<span class="keyword">IN</span><span class="operator">|</span><span class="keyword">OUT</span><span class="operator">|</span><span class="keyword">INOUT</span>] 参数<span class="number">2</span> 数据类型,</span><br><span class="line">...</span><br><span class="line">])</span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="operator">&lt;</span>过程块<span class="keyword">SQL</span><span class="operator">&gt;</span>; <span class="comment">-- 这里的过程块SQL就是上面提到的过程化SQL的一个块</span></span><br></pre></td></tr></table></figure><p>存储过程提供了IN,OUT,INOUT三种参数模式，分别是入参、输出参数、输入输出参数。不声明参数类型的时候默认是IN类型。</p><ul><li>输入参数需要手动传入</li><li>输出参数不需要手动传入，而是以返回值返回</li><li>输入输出参数调用的时候需要传入初值，还会返回一个新的值</li></ul><p>如果是输出参数，则需要一个变量来存放输出后的值。</p><h4 id="示例-实验2中的题目"><a href="#示例-实验2中的题目" class="headerlink" title="示例-实验2中的题目"></a>示例-实验2中的题目</h4><p>在PC表中，将某一速度（整型）作为输入参数，求大于该速度的PC机的平均价格。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- real是浮点型</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR REPLACE</span> <span class="keyword">FUNCTION</span> Meanprice (<span class="keyword">in</span> pspeed <span class="type">int</span>, <span class="keyword">out</span> mean <span class="type">real</span>) </span><br><span class="line"><span class="keyword">AS</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">DECLARE</span> getprice <span class="type">INT</span>; mCount <span class="type">INT</span>; total <span class="type">INT</span>;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">mean:=<span class="number">0</span>; mCount:=<span class="number">0</span>;total:=<span class="number">0</span>; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">FOR</span> getprice <span class="keyword">IN</span> <span class="keyword">select</span> price <span class="keyword">from</span> PC </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">where</span> speed&gt;pspeed</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">LOOP</span></span></span><br><span class="line"><span class="language-pgsql">   mCount:= mCount +<span class="number">1</span>;</span></span><br><span class="line"><span class="language-pgsql">   total:= total+ getprice; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span> <span class="keyword">LOOP</span>;</span></span><br><span class="line"><span class="language-pgsql">mean:= total/ mCount; </span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>;</span></span><br><span class="line"><span class="language-pgsql">$$</span> <span class="keyword">LANGUAGE</span> plpgsql;</span><br></pre></td></tr></table></figure><h3 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> [<span class="keyword">PROCEDURE</span>] 过程名([参数<span class="number">1</span>,参数<span class="number">2</span>,....]);</span><br><span class="line">PERFROM [<span class="keyword">PROCEDURE</span>] 过程名([参数<span class="number">1</span>,参数<span class="number">2</span>,....]); <span class="comment">-- 等价</span></span><br></pre></td></tr></table></figure><h3 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h3><p>存储过程可以重命名</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> 过程名 <span class="keyword">RENAME</span> <span class="keyword">TO</span> 新名字;</span><br></pre></td></tr></table></figure><p>可以重新编译一个存储过程</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">PROCEDURE</span> 过程名 COMPLIE;</span><br></pre></td></tr></table></figure><p>删除存储过程</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">PROCEDURE</span> 过程名;</span><br></pre></td></tr></table></figure><h3 id="存储过程的好处"><a href="#存储过程的好处" class="headerlink" title="存储过程的好处"></a>存储过程的好处</h3><p>存储过程在定义的时候就进行了SQL的语法分析，而普通执行SQL每次都会重新进行语法分析</p><p>存储过程降低了客户机和服务器之间的通信量，因为存储过程中可能包含多条SQL，客户机不再需要将这多条SQL重复发送。</p><p>方便维护：当某个方法需要改变的时候，只需要改变对应的存储过程，并不需要改变客户端程序。</p>]]></content>
    
    
    <summary type="html">这是大三学的数据库系统原理中的额外内容</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="数据库SQL" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93SQL/"/>
    
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【win】edge更换chrome浏览器</title>
    <link href="https://blog.musnow.top/posts/1864371357/"/>
    <id>https://blog.musnow.top/posts/1864371357/</id>
    <published>2024-01-28T03:30:00.000Z</published>
    <updated>2024-01-28T03:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-edge的问题"><a href="#1-edge的问题" class="headerlink" title="1.edge的问题"></a>1.edge的问题</h1><p>由于edge新版本在我的电脑上出现了莫名其妙且没找到解决办法的渲染问题，决定更换浏览器为chrome；</p><p>我已经检查过了，edge在所有插件都关闭的情况下依旧会渲染错误，且和edge的<code>新外观</code>没有关系。目前暂时没有找到出现这个渲染错误的原因，回退旧版本也没成功，干脆换chrome完事。</p><p>这个问题在我自己的电脑edge自动更新后出现，且在我实习单位的电脑上也有渲染错位问题，说明不是个例。只能骂骂微软了，什么时候改好这个bug我什么时候换回去。</p><blockquote><p>我的电脑的edge版本：版本 121.0.2277.83 (正式版本) (64 位)</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/e9d3ac5e1f6cfd268d9072989586f536.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/1ac7a87a688b39359bef12edc58977fc.png" alt="image.png"></p><p>不只是b站的渲染有问题，还有很多网页会出现类似的横着的东西变成竖着的，在不该有的位置莫名其妙出现一个滚动条等等</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/4105dd031e08a43ee74c9523aafbb9e9.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/78cd94fe96c19fdf04bb313dad8705b5.png" alt="image.png"></p><h1 id="2-edge无损转chrome"><a href="#2-edge无损转chrome" class="headerlink" title="2.edge无损转chrome"></a>2.edge无损转chrome</h1><p>对于浏览器来说其实只有两个重要数据，一个是收藏夹，一个是保存的密码。</p><h2 id="收藏夹"><a href="#收藏夹" class="headerlink" title="收藏夹"></a>收藏夹</h2><p>edge收藏夹导出：右上角三个点-收藏夹-弹出框的右上角三个点-导出收藏夹</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/f685ebdd3fe425ca3458b32d8858a6c9.png" alt="image.png"></p><p>这个选项会将收藏夹导出为html文件，在chome的书签中，选则导入书签和设置</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/24ece2c8a3131922d0f2d5b2415d2d80.png" alt="image.png"></p><p>选择以前导出的书签（HTML文件），然后把刚刚导出的edge书签html文件选择上就能正常导入了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/a995083136a6d3df8488dd39aa6e78d2.png" alt="image.png"></p><h2 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h2><p>edge密码导出：右上角三个点-设置-个人资料-密码-导出密码；</p><p>新版本这里叫电子钱包，旧版本应该只是个密码页面。在密码页面右上角三个点选择导出密码即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/9015fad0ad60ebdc2da0f2f8c82eb2ce.png" alt="image.png"></p><p>注意，导出密码之前应该确认你的电脑上没有病毒或恶意软件，因为导出后是csv明文文件，任何软件都能直接读取！</p><p>导出csv后，在chrome浏览器中进入密码管理工具，在<strong>密码管理工具的设置</strong>中有导入密码选项，选择csv文件即可导入密码。导入密码后建议立马将csv文件删除。</p><h1 id="3-关闭edge默认浏览器防护"><a href="#3-关闭edge默认浏览器防护" class="headerlink" title="3.关闭edge默认浏览器防护"></a>3.关闭edge默认浏览器防护</h1><p>记得关闭edge的默认浏览器设置：在edge的设置-默认浏览器中，关闭<code>保护默认浏览器设置</code>首选项。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/b54c663800d8688fadbed0cb61d1b825.png" alt="image.png"></p><p>在windows11的系统设置-应用-默认应用中搜索chrome，可以在这里设置chrome为默认浏览器。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/3bceefb979209938e0b40b96aafec55f.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/85e37feba749ebde96742b852f30edd6.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d77bca81b7237dfe4a763a0bbc11de00.png" alt="image.png"></p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>edge目前对比chrome来说最大的好处还是可以直连的同步功能。但现在windows端连页面渲染都有问题，那我肯定没办法，只能跑路chrome了。</p><h1 id="Hold-on"><a href="#Hold-on" class="headerlink" title="Hold on"></a>Hold on</h1><p>为什么chrome的牛客网也有这个渲染错误的问题？？？无语了……强迫症看的很难受啊！！！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d3321003553cc37d4e9c4727f0fb6453.png" alt="image.png"></p>]]></content>
    
    
    <summary type="html">edge更换chrome浏览器</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="编程工具" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【C++】Google Gtest测试框架的使用</title>
    <link href="https://blog.musnow.top/posts/3098116292/"/>
    <id>https://blog.musnow.top/posts/3098116292/</id>
    <published>2024-01-26T08:40:00.000Z</published>
    <updated>2024-01-26T08:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>gtest模块的安装参考站内教程 <a href="https://blog.musnow.top/posts/852447913">ubuntu安装google gtest</a></p><p>本文使用的gtest版本为1.14.0；</p><h1 id="1-gtest是用来干嘛的？"><a href="#1-gtest是用来干嘛的？" class="headerlink" title="1.gtest是用来干嘛的？"></a>1.gtest是用来干嘛的？</h1><p>google gtest是一个c++的单元测试模块，它提供了一系列规范化的宏，来帮助我们进行函数的单元测试。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/2c7e703ed9d4e1fac803d9ea2bc69eda.png" alt="image.png"></p><p>单元测试你可以理解为测试我们编写好的每个函数模块，确保这些函数的功能不会影响其他函数，并保证函数能依照预期的功能进行工作。</p><blockquote><p>要知道，绝大部分的软件bug都是在设计、初次代码编写的过程中产生的，比如你写了一个add函数，但是错误的将运算符写成了<code>-</code>，add就变成sub函数了，如果这个add函数在其他功能模块完成之后才发现被写错，就闹大笑话了。</p></blockquote><p>当然，上面这个add的例子并不合适，因为它太简单了。但实际项目中，就是由多个很简单的代码聚合而成的一个大软件模块。每一个看上去简单、不可能写错的地方，都有可能隐藏的出错的危险。</p><p>所以，这就需要我们在完成每个功能函数的编写后，通过单元测试来判断函数是否有问题。</p><h1 id="2-gtest的代码基本框架"><a href="#2-gtest的代码基本框架" class="headerlink" title="2.gtest的代码基本框架"></a>2.gtest的代码基本框架</h1><p>一般情况下，多模块的软件项目都会用cmake来实现批量化的编译和单元测试的运行。但本文只是对gtest模块使用的最基本教程，再加上我并没有学习cmake的使用，所以暂时使用g++直接对单模块进行编译并介绍gtest的测试宏。</p><blockquote><p><a href="https://google.github.io/googletest/reference/testing.html">Testing Reference | GoogleTest</a></p></blockquote><p>比较常用的是TEST和TEST_F这两个测试宏，更多测试宏请参考官方文档中的介绍。</p><h2 id="2-1-TEST-单元测试模块"><a href="#2-1-TEST-单元测试模块" class="headerlink" title="2.1 TEST 单元测试模块"></a>2.1 TEST 单元测试模块</h2><p>在gtest中，一个单元测试模块长下面这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(TestSuiteName, TestName) &#123;</span><br><span class="line">  ... statements ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以理解为，左侧是被测模块的名字，右侧是在这个被测模块中的某个测试的名字，statements是任意被测模块的代码；gtest框架建议使用大驼峰的命名方式，TEST的命名中不要带有<code>_</code>下划线。</p><blockquote><p>比如我有一个模块A的单元测试，那么左侧可以填写为<code>模块ATest</code>，右侧填写为类中某个函数的测试。这两个名字可以随便起，但是在同一个TestSuiteName中不能有两个相同的TestName；</p></blockquote><p>一个单元测试模块的成功与失败取决于内部定义的gtest断言宏，参考后文的介绍。</p><h2 id="2-2-TEST-F-类测试模块"><a href="#2-2-TEST-F-类测试模块" class="headerlink" title="2.2 TEST_F 类测试模块"></a>2.2 TEST_F 类测试模块</h2><p>上述的TEST方式是用于测试普通函数的，还有一个TEST_F可以用于对类进行测试</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST_F</span>(TestFixtureName, TestName) &#123;</span><br><span class="line">  ... statements ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时左侧的TestFixtureName不再是随便起的了，你必须定义一个继承于<code>testing::Test</code>的测试类，该类可以定义成员变量或对被测目标进行初始化、销毁操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line"><span class="keyword">protected</span>:  </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetUp</span><span class="params">()</span> <span class="comment">// 初始化，在每个TEST_F中都会被调用</span></span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span> <span class="comment">// 销毁，在每个TEST_F结束时都会调用</span></span></span><br><span class="line"><span class="function">    </span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 可以定义一些成员变量，在TEST_F中能访问</span></span><br><span class="line">    <span class="type">int</span> _a;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最终的测试代码应该是下面这样的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyA) &#123; ... &#125;</span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyB) &#123; ... &#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-简单示例"><a href="#2-3-简单示例" class="headerlink" title="2.3 简单示例"></a>2.3 简单示例</h2><p>下面是一个简单的gtest单元测试编写的示例，包含测试单元体和main函数。一个文件里面可以写N个TEST或TEST_F，它们会按顺序执行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个函数测试</span></span><br><span class="line"><span class="comment">// 左侧是测试模块的名字，右侧是该模块测试的目的</span></span><br><span class="line"><span class="built_in">TEST</span>(ADDTEST, ADDTEST_TRUE)</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 主函数</span></span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用如下g++命令编译该代码，注意gtest是一个动态库，需要使用<code>-lgtest</code>进行链接。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ test.cpp -o test -lgtest</span><br></pre></td></tr></table></figure><h1 id="3-gtest提供的断言宏"><a href="#3-gtest提供的断言宏" class="headerlink" title="3.gtest提供的断言宏"></a>3.gtest提供的断言宏</h1><p>官方文档：<a href="https://google.github.io/googletest/reference/assertions.html">Assertions Reference | GoogleTest</a></p><p>gtest中提供的宏分为ASSERT和EXPECT两种，其中ASSERT宏会在检查到错误的时候直接终止单元测试用例的运行（注意是单个单元测试），而EXPECT不会。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(EXP,EXP1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">ASSERT_EQ</span>(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// 如果这个出错了，后续不会执行</span></span><br><span class="line"><span class="comment">// 这里不会被执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXP,EXP2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">EXPECT_EQ</span>(<span class="number">1</span>,<span class="number">1</span>); <span class="comment">// 如果这个出错了，还是会继续往后执行这个模块的其他代码。</span></span><br><span class="line"><span class="comment">// 这里的代码能被执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试运行结束后，gtest会给出测试失败的模块汇总。</p><h2 id="3-1-相等-x2F-大小判断"><a href="#3-1-相等-x2F-大小判断" class="headerlink" title="3.1 相等&#x2F;大小判断"></a>3.1 相等&#x2F;大小判断</h2><table><thead><tr><th>ASSERT宏</th><th>EXPECT宏</th><th>功能</th><th>参数个数</th></tr></thead><tbody><tr><td>ASSERT_TRUE</td><td>EXPECT_TRUE</td><td>判真</td><td>1</td></tr><tr><td>ASSERT_FALSE</td><td>EXPECT_FALSE</td><td>判假</td><td>1</td></tr><tr><td>ASSERT_EQ</td><td>EXPECT_EQ</td><td>相等</td><td>2</td></tr><tr><td>ASSERT_NE</td><td>EXPECT_NE</td><td>不相等</td><td>2</td></tr><tr><td>ASSERT_GT</td><td>EXPECT_GT</td><td>第一个参数是否大于第二个参数</td><td>2</td></tr><tr><td>ASSERT_LT</td><td>EXPECT_LT</td><td>小于（原理同上）</td><td>2</td></tr><tr><td>ASSERT_GE</td><td>EXPECT_GE</td><td>大于等于</td><td>2</td></tr><tr><td>ASSERT_LE</td><td>EXPECT_LE</td><td>小于等于</td><td>2</td></tr><tr><td>ASSERT_FLOAT_EQ</td><td>EXPECT_FLOAT_EQ</td><td>单精度浮点数相等</td><td>2</td></tr><tr><td>ASSERT_DOUBLE_EQ</td><td>EXPECT_DOUBLE_EQ</td><td>双精度浮点数相等</td><td>2</td></tr><tr><td>ASSERT_NEAR</td><td>EXPECT_NEAR</td><td>浮点数是否接近（第三个参数为允许的误差值）</td><td>3</td></tr><tr><td>ASSERT_STREQ</td><td>EXPECT_STREQ</td><td>C字符串相等</td><td>2</td></tr><tr><td>ASSERT_STRNE</td><td>EXPECT_STRNE</td><td>C字符串不相等</td><td>2</td></tr><tr><td>ASSERT_STRCASEEQ</td><td>EXPECT_STRCASEEQ</td><td>C字符串相等（忽略大小写）</td><td>2</td></tr><tr><td>ASSERT_STRCASENE</td><td>EXPECT_STRCASENE</td><td>C字符串不相等（忽略大小写）</td><td>2</td></tr><tr><td>ASSERT_PRED1</td><td>EXPECT_PRED1</td><td>自定义谓词测试（有1到5级，对应不同参数个数的自定义函数）</td><td>2</td></tr><tr><td>ASSERT_THAT</td><td>EXPECT_THAT</td><td>判断函数返回值是否符合给定的matcher（gtest提供的）</td><td>2</td></tr></tbody></table><h2 id="3-2-异常相关"><a href="#3-2-异常相关" class="headerlink" title="3.2 异常相关"></a>3.2 异常相关</h2><p>除了上述这种判断大小和相等的宏，还有和异常以及程序崩溃相关的宏</p><table><thead><tr><th>ASSERT宏</th><th>EXPECT宏</th><th>作用</th><th>参数个数</th></tr></thead><tbody><tr><td>ASSERT_THROW</td><td>EXPECT_THROW</td><td>期待抛出指定异常，第一个参数是目标函数，第二个参数是异常类型</td><td>2</td></tr><tr><td>ASSERT_ANY_THROW</td><td>EXPECT_ANY_THROW</td><td>期待抛出任何异常</td><td>1</td></tr><tr><td>ASSERT_NO_THROW</td><td>EXPECT_NO_THROW</td><td>不希望抛出任何异常</td><td>1</td></tr><tr><td>ASSERT_EXIT</td><td>EXPECT_EXIT</td><td>期望程序以指定错误码exit，且标准错误输出符合第三个参数的regex表达式</td><td>3</td></tr><tr><td>ASSERT_DEATH</td><td>EXPECT_DEATH</td><td>期望程序错误退出（退出码非0），且标准错误输出符合第二个参数的regex表达式</td><td>2</td></tr><tr><td>ASSERT_DEBUG_DEATH</td><td>EXPECT_DEBUG_DEATH</td><td>同上，但是在调试模式下测试；非调试模式下只会执行函数，不做判断。</td><td>2</td></tr><tr><td>ASSERT_DEATH_IF_SUPPORTED</td><td>EXPECT_DEATH_IF_SUPPORTED</td><td>同DEATH，但是只有在支持的时候才会被调用，如果不支持则什么都不做。</td><td>2</td></tr></tbody></table><h2 id="3-3-直接表明成功和失败"><a href="#3-3-直接表明成功和失败" class="headerlink" title="3.3 直接表明成功和失败"></a>3.3 直接表明成功和失败</h2><p>还有两个宏是直接表明该单元测试是否成功，以及是否失败的。主动调用这两个宏会提前终止该单元测试用例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SUCCEED(); <span class="comment">// 成功</span></span><br><span class="line">FAIL();    <span class="comment">// 失败</span></span><br></pre></td></tr></table></figure><h2 id="3-4-添加失败信息"><a href="#3-4-添加失败信息" class="headerlink" title="3.4 添加失败信息"></a>3.4 添加失败信息</h2><p>有的时候gtest默认提供的ASSERT宏不够我们的使用，你可以用自定义的判断，并在不符合预期的时候将这个错误信息添加进去，Gtest在最后汇总的时候也会显示出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generates a nonfatal failure, which allows the current function to continue running.</span></span><br><span class="line">ADD_FAILURE();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generates a nonfatal failure at the file and line number specified.</span></span><br><span class="line">ADD_FAILURE_AT(file_path,line_number);</span><br></pre></td></tr></table></figure><p>这两个宏的效果和EXPECT类似，都允许继续往后执行该单元测试用例。</p><h1 id="4-使用示例"><a href="#4-使用示例" class="headerlink" title="4.使用示例"></a>4.使用示例</h1><p>大部分的使用都是一样的，下面只对几个有代表性的做使用示例；为了方便，只对ASSERT做示例，因为它的效果和EXPECT完全一致，上文已经提到了二者的区别了。</p><h2 id="4-1-ASSERT-EXIT"><a href="#4-1-ASSERT-EXIT" class="headerlink" title="4.1 ASSERT_EXIT"></a>4.1 ASSERT_EXIT</h2><p>ASSERT_EXIT有三个参数，分别为待测函数、退出码或退出信号、错误信息regex；待测函数必须以指定的错误码或错误信号退出程序，并在stderr中打印能被这个regex匹配的错误信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ASSERT_EXIT(statement,predicate,matcher);</span><br></pre></td></tr></table></figure><p>第二个参数的可选项，分别代表错误退出码和收到的错误信号</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Returns true if the program exited normally with the given exit status code.</span></span><br><span class="line">::testing::<span class="built_in">ExitedWithCode</span>(exit_code);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns true if the program was killed by the given signal.</span></span><br><span class="line"><span class="comment">// Not available on Windows.</span></span><br><span class="line">::testing::<span class="built_in">KilledBySignal</span>(signal_number);</span><br></pre></td></tr></table></figure><p>第三个参数在官网上的描述是这样的</p><blockquote><p>The parameter matcher is either a matcher for a <code>const std::string&amp;</code>, or a regular expression (see <a href="https://google.github.io/googletest/advanced.html#regular-expression-syntax">Regular Expression Syntax</a>)—a bare string s (with no matcher) is treated as <code>ContainsRegex(s)</code>, not <code>Eq(s)</code>.</p></blockquote><p>如果传入一个普通字符串，则会判断stderr输出的内容是否<strong>包含</strong>该字符串。</p><p>下面是一个简单的示例，我们的函数调用了<code>exit(1)</code>，使用ASSERT_EXIT来判断它是否以预期的错误码1退出程序。第三个参数<code>.*</code>是正则表达式，代表任意错误信息的匹配。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// int ret = 10/0;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以错误码1退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">ExitedWithCode</span>(<span class="number">1</span>),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后的执行效果如下，我们的单元测试成功了，因为函数的确是以错误码1退出的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>那么如果换一个退出方式呢？比如因为除0错误退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:11:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   11 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:17: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected exit code:</span><br><span class="line">            Terminated by signal 8</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>这个时候单元测试就失败了，并会打印出失败行的位置和失败的原因。这里提到失败是因为受到了信号8，但我们预期是错误码1。</p><p>将预期修改为信号8，就能通过测试</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="comment">// exit(1);</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号8退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意这里的警告是g++编译器检测到除0错误后提供的，并非是运行时的错误。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:11:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   11 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>将第三个参数改为一个普通字符串，gtest会进行stderr输出是否包含该字符串的检查；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，单元测试失败的原因是“错误退出但是没有提供期望的error输出”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">test.cpp: In function &#x27;void test_exit()&#x27;:</span><br><span class="line">test.cpp:10:17: warning: division by zero [-Wdiv-by-zero]</span><br><span class="line">   10 |     int ret = 10/0;</span><br><span class="line">      |               ~~^~</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:16: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected error.</span><br><span class="line">  Expected: contains regular expression &quot;happy&quot;</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>如果在错误输出中包含happy字符串，则正常通过测试。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>; <span class="comment">// 包含happy字符串</span></span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 期望以收到信号退出</span></span><br><span class="line">    <span class="built_in">ASSERT_EXIT</span>(<span class="built_in">test_exit</span>(),testing::<span class="built_in">KilledBySignal</span>(<span class="number">8</span>),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (1 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (1 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (1 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意：函数内的assert错误对应的是信号6，如果需要用ASSERT_EXIT来捕捉assert错误，则需要使用<code>testing::KilledBySignal(6)</code>；</p><h2 id="4-2-ASSERT-DEATH"><a href="#4-2-ASSERT-DEATH" class="headerlink" title="4.2 ASSERT_DEATH"></a>4.2 ASSERT_DEATH</h2><p>ASSERT_DEATH和ASSERT_EXIT宏的作用基本一致，只不过ASSERT_DEATH不需要我们传入期望退出的错误码或信号。此时<strong>任意非0错误码退出和任意信号退出</strong>都会被视为ASSERT_DEATH的测试成功情况。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPECT_DEATH(statement,matcher);</span><br><span class="line">ASSERT_DEATH(statement,matcher);</span><br></pre></td></tr></table></figure><p>这里的第二个参数和ASSERT_EXIT的第三个参数一致，可以是一个字符串，也可以是一个regex表达式。</p><p>示例代码和测试结果如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;.*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>ASSERT_DEATH只有在被测函数<strong>没有错误退出</strong>，或者以<code>exit(0)</code>退出的时候会出错。因为0号在操作系统中是进程退出的正常情况，非0才是错误信号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:15: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: died but not with expected exit code:</span><br><span class="line">            Exited with exit status 0</span><br><span class="line">Actual msg:</span><br><span class="line">[  DEATH   ] test exit</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>注意，<strong>抛出异常</strong>并没有归结到DEATH和EXIT的判定范围内。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="comment">// int ret = 10/0;</span></span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test.cpp:16: Failure</span><br><span class="line">Death test: test_exit()</span><br><span class="line">    Result: threw an exception.</span><br><span class="line"> Error msg:</span><br><span class="line">[  DEATH   ] test exit happy</span><br><span class="line">[  DEATH   ] </span><br><span class="line">[  DEATH   ] test.cpp:16:: Caught std::exception-derived exception escaping the death test statement. Exception message: 123</span><br><span class="line">[  DEATH   ] </span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_EXIT</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h2 id="4-3-ASSERT-DEBUG-DEATH"><a href="#4-3-ASSERT-DEBUG-DEATH" class="headerlink" title="4.3 ASSERT_DEBUG_DEATH"></a>4.3 ASSERT_DEBUG_DEATH</h2><p>对于ASSERT_DEBUG_DEATH，官方文档是这么描述的：</p><blockquote><p>In debug mode, behaves the same as EXPECT_DEATH. When not in debug mode (i.e. NDEBUG is defined), just executes statement.</p></blockquote><p>这里补充一下NDEBUG宏的作用，在标准库里面，它会控制assert是否起效果。如果一个程序define了NDEBUG宏（注意必须在引用<code>&lt;assert.h&gt;</code>头文件之前定义），那么assert将什么都不做。</p><p>可以看assert.h的源代码，当定义了NDEBUG宏后，assert会调用<code>__ASSERT_VOID_CAST (0)</code>；在C++中这个cast是一个<code>static_cast&lt;void&gt;</code>，在C语言中是一个<code>)void)</code>的强转，反正都是啥都不干。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined __cplusplus &amp;&amp; __GNUC_PREREQ (2,95)</span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> __ASSERT_VOID_CAST static_cast<span class="string">&lt;void&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> __ASSERT_VOID_CAST (void)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* void assert (int expression);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   If NDEBUG is defined, do nothing.</span></span><br><span class="line"><span class="comment">   If not, and EXPRESSION is zero, print an error message and abort.  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span>NDEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> assert(expr)(__ASSERT_VOID_CAST (0))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* void assert_perror (int errnum);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   If NDEBUG is defined, do nothing.  If not, and ERRNUM is not zero, print an</span></span><br><span class="line"><span class="comment">   error message with the error text for ERRNUM and abort.</span></span><br><span class="line"><span class="comment">   (This is a GNU extension.) */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">ifdef</span>__USE_GNU</span></span><br><span class="line"><span class="meta">#  <span class="keyword">define</span> assert_perror(errnum)(__ASSERT_VOID_CAST (0))</span></span><br><span class="line"><span class="meta"># <span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">else</span> <span class="comment">/* Not NDEBUG.  */</span></span></span><br></pre></td></tr></table></figure><p>下面是一个简单的测试示例，当我们没有定义NDEBUG的时候，ASSERT_DEBUG_DEATH和ASSERT_DEATH做的是相同的操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEBUG_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>如果在文件开头定义了NDEBUG，那么ASSERT_DEBUG_DEATH则只会调用函数，并不会做错误信息的判断，如下所示，我们将函数中的exit删除，gtest也没有报告错误。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NDEBUG 1 <span class="comment">// 一定要在开头定义</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cerr &lt;&lt; <span class="string">&quot;test exit happy\n&quot;</span>;</span><br><span class="line">    <span class="comment">// exit(1); // 没有错误退出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EXIT)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_DEBUG_DEATH</span>(<span class="built_in">test_exit</span>(),<span class="string">&quot;happy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们的函数并没有退出，但是由于定义了NDEBUG，ASSERT_DEBUG_DEATH宏没有报告错误。（去掉该宏，则会和ASSERT_DEATH一样提示出错）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EXIT</span><br><span class="line">test exit happy</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EXIT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-4-ASSERT-THROW"><a href="#4-4-ASSERT-THROW" class="headerlink" title="4.4 ASSERT_THROW"></a>4.4 ASSERT_THROW</h2><p>调用对象应该抛出异常，并判断异常类型是否为期待类型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_throw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> std::<span class="built_in">runtime_error</span>(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_THROW)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_THROW</span>(<span class="built_in">test_throw</span>(),std::runtime_error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THROW</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_THROW (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>当抛出的异常类型不一致的时候会出错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THROW</span><br><span class="line">test.cpp:12: Failure</span><br><span class="line">Expected: test_throw() throws an exception of type std::runtime_error.</span><br><span class="line">  Actual: it throws std::length_error with description &quot;123&quot;.</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_THROW (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_THROW</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>异常相关的还有两个</p><ul><li>ASSERT_ANY_THROW不需要传入第二个参数，只关注目标函数应该抛出异常；</li><li>ASSERT_NO_THROW也只有一个参数，目标函数不应该抛出异常；</li></ul><p>因为它们很简单，这里就不做演示了。</p><h2 id="4-5-ASSERT-EQ-x2F-NE"><a href="#4-5-ASSERT-EQ-x2F-NE" class="headerlink" title="4.5 ASSERT_EQ&#x2F;NE"></a>4.5 ASSERT_EQ&#x2F;NE</h2><p>相等和不相等的比较。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_EQ)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">ASSERT_EQ</span>(ret,<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">ASSERT_NE</span>(ret,<span class="number">29</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EQ</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EQ (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>ASSERT_FLOAT_EQ和ASSERT_DOUBLE_EQ是在比较的基础上允许一定的<strong>浮点数精度误差值</strong>。如果你需要比较两个浮点数，请使用对应的浮点数类型比较宏，而不要直接使用ASSERT_EQ；</p><h2 id="4-6-ASSERT-GE-x2F-LE"><a href="#4-6-ASSERT-GE-x2F-LE" class="headerlink" title="4.6 ASSERT_GE&#x2F;LE"></a>4.6 ASSERT_GE&#x2F;LE</h2><p>注意，大小写比较都是左和右直接按顺序比较的，比如GE是判断<strong>左边是否大于右边</strong>（不要搞反顺序了）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_GE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">ASSERT_GE</span>(ret,<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">ASSERT_LE</span>(ret,<span class="number">29</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_EQ</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_EQ (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-7-ASSERT-NEAR"><a href="#4-7-ASSERT-NEAR" class="headerlink" title="4.7 ASSERT_NEAR"></a>4.7 ASSERT_NEAR</h2><p>该宏提供了第三个参数，在浮点数比较时允许一定的误差值。官网文档说明是保证val1和val2不超过abs_error的误差边界。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPECT_NEAR(val1,val2,abs_error)</span><br><span class="line">ASSERT_NEAR(val1,val2,abs_error)</span><br><span class="line"><span class="comment">// Verifies that the difference between val1 and val2 does not exceed the absolute error bound abs_error.</span></span><br></pre></td></tr></table></figure><p>下面是一个示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_NEAR)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_NEAR</span>(<span class="number">3.14</span>,<span class="number">3.15</span>,<span class="number">0.01</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为两个数字的差距的确在<code>0.01</code>的误差区间，所以可以通过测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_NEAR</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_NEAR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>如果将第三个参数的误差改为<code>0.001</code>，则无法通过测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_NEAR</span><br><span class="line">test.cpp:8: Failure</span><br><span class="line">The difference between 3.14 and 3.15 is 0.0099999999999997868, which exceeds 0.001, where</span><br><span class="line">3.14 evaluates to 3.1400000000000001,</span><br><span class="line">3.15 evaluates to 3.1499999999999999, and</span><br><span class="line">0.001 evaluates to 0.001.</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_NEAR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_NEAR</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h2 id="4-8-ASSERT-STREQ-x2F-STRCASEEQ"><a href="#4-8-ASSERT-STREQ-x2F-STRCASEEQ" class="headerlink" title="4.8 ASSERT_STREQ&#x2F;STRCASEEQ"></a>4.8 ASSERT_STREQ&#x2F;STRCASEEQ</h2><p>字符串相等比较，一个不忽略大小写，一个忽略大小写;</p><p>注意，这两个宏的入参都是<code>const char*</code>，不能直接传入<code>std::string</code>进行比较。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_STR)</span><br><span class="line">&#123;</span><br><span class="line">    std::string str1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    std::string str2 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    std::string str3 = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="built_in">ASSERT_STREQ</span>(str1.<span class="built_in">c_str</span>(),str2.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="built_in">ASSERT_STRCASEEQ</span>(str1.<span class="built_in">c_str</span>(),str3.<span class="built_in">c_str</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_STR</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_STR (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-9-ASSERT-TRUE-x2F-FALSE"><a href="#4-9-ASSERT-TRUE-x2F-FALSE" class="headerlink" title="4.9 ASSERT_TRUE&#x2F;FALSE"></a>4.9 ASSERT_TRUE&#x2F;FALSE</h2><p>bool值真假的判断。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">ASSERT_TRUE</span>(a != b);</span><br><span class="line">    <span class="built_in">ASSERT_FALSE</span>(a == b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_TRUE</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意，这两个宏只接受bool值或者int类型，诸如nullptr这类值都是不能被直接接受的（除非你强转）。</p><ul><li>如果你需要判断一个函数的结果是否为空指针nullptr，请使用ASSERT_EQ来判断；</li><li>如果你的函数返回值用了int且用0来标识错误的情况，也建议用ASSERT_EQ来更可读的判断，而不要用ASSERT_TRUE&#x2F;FALSE；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">In file included from /usr/local/include/gtest/gtest-printers.h:122,</span><br><span class="line">                 from /usr/local/include/gtest/gtest-matchers.h:49,</span><br><span class="line">                 from /usr/local/include/gtest/internal/gtest-death-test-internal.h:47,</span><br><span class="line">                 from /usr/local/include/gtest/gtest-death-test.h:43,</span><br><span class="line">                 from /usr/local/include/gtest/gtest.h:65,</span><br><span class="line">                 from test.cpp:1:</span><br><span class="line">test.cpp: In member function &#x27;virtual void EXPTEST_EXPTEST_TRUE_Test::TestBody()&#x27;:</span><br><span class="line">test.cpp:8:5: error: converting to &#x27;bool&#x27; from &#x27;std::nullptr_t&#x27; requires direct-initialization [-fpermissive]</span><br><span class="line">    8 |     ASSERT_FALSE(nullptr);</span><br><span class="line">      |     ^~~~~~~~~~~~</span><br></pre></td></tr></table></figure><p>这里也能看出C++中nullptr和C语言中NULL的不同，使用ASSERT_FALSE来判断NULL是能通过编译的，因为它本质只是一个define的数字0，和bool值的本质是一样的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ASSERT_FALSE(NULL);</span><br></pre></td></tr></table></figure><h2 id="4-10-ADD-FAILURE"><a href="#4-10-ADD-FAILURE" class="headerlink" title="4.10 ADD_FAILURE"></a>4.10 ADD_FAILURE</h2><p>添加失败信息的效果示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">    b = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a!=b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">ADD_FAILURE</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 假设我知道被测函数的目标文件和行号</span></span><br><span class="line">    <span class="built_in">ADD_FAILURE_AT</span>(<span class="string">&quot;add.hpp&quot;</span>,<span class="number">20</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你知道出错的被测函数的文件和所在行数，使用ADD_FAILURE_AT能更好的帮助定位问题。因为ADD_FAILURE只会显示出错单元测试的文件和位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_TRUE</span><br><span class="line">test.cpp:13: Failure</span><br><span class="line">Failed</span><br><span class="line"></span><br><span class="line">add.hpp:20: Failure</span><br><span class="line">Failed</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_TRUE</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><p>这里也能看到，ADD_FAILURE后，单元测试会像EXPECT宏一样继续往后运行。</p><h2 id="4-11-ASSERT-THAT"><a href="#4-11-ASSERT-THAT" class="headerlink" title="4.11 ASSERT_THAT"></a>4.11 ASSERT_THAT</h2><p>和ASSERT_THAT相关的matcher选项在gtest中提供了，注意需要引用gmock头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ::testing::AllOf;</span><br><span class="line"><span class="keyword">using</span> ::testing::Gt;</span><br><span class="line"><span class="keyword">using</span> ::testing::Lt;</span><br><span class="line"><span class="keyword">using</span> ::testing::MatchesRegex;</span><br><span class="line"><span class="keyword">using</span> ::testing::StartsWith;</span><br></pre></td></tr></table></figure><p>更多matcher可以查看官方文档：<a href="https://google.github.io/googletest/reference/matchers.html">Matchers</a></p><blockquote><p>这里还有个小细节，你会发现gtest官网文档中的所有<code>testing</code>命名空间前面都带了一个<code>::</code>，这样不管你在什么自定义的命名空间里面编写gtest的代码，都可以通过<code>::</code>先回到全局命名空间，再访问<code>testing</code>命名空间。即不会和用户自定义空间中的冲突。</p><p>另外，如果你需要使用gtest框架，应该避免自己的命名空间和gtest的命名空间重名。</p></blockquote><p>示例代码如下，我们的字符串的确是以he开头的，能通过检查。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_THAT)</span><br><span class="line">&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    <span class="built_in">ASSERT_THAT</span>(str.<span class="built_in">c_str</span>(),testing::<span class="built_in">StartsWith</span>(<span class="string">&quot;he&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_THAT</span><br><span class="line">[       OK ] EXPTEST.EXPTEST_THAT (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><h2 id="4-12-ASSERT-PRED"><a href="#4-12-ASSERT-PRED" class="headerlink" title="4.12 ASSERT_PRED"></a>4.12 ASSERT_PRED</h2><p>谓词测试宏一共有5个，分别接受一个自定义函数和该函数对应的参数，并判断返回值是否为bool值的true。数字就代表函数的参数个数，最多支持5个参数的自定义函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ASSERT_PRED1</span>(pred,val1)</span><br><span class="line"><span class="built_in">ASSERT_PRED2</span>(pred,val1,val2)</span><br><span class="line"><span class="built_in">ASSERT_PRED3</span>(pred,val1,val2,val3)</span><br><span class="line"><span class="built_in">ASSERT_PRED4</span>(pred,val1,val2,val3,val4)</span><br><span class="line"><span class="built_in">ASSERT_PRED5</span>(pred,val1,val2,val3,val4,val5)</span><br></pre></td></tr></table></figure><p>我们定义一个测试函数，再把两个参数传入该函数，就能得到一个结果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_eq</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a == b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(EXPTEST, EXPTEST_PRED)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">ASSERT_PRED2</span>(is_eq, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 等价于 ASSERT_TRUE(is_eq(1,2));</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from EXPTEST</span><br><span class="line">[ RUN      ] EXPTEST.EXPTEST_PRED</span><br><span class="line">test.cpp:14: Failure</span><br><span class="line">is_eq(1, 2) evaluates to false, where</span><br><span class="line">1 evaluates to 1</span><br><span class="line">2 evaluates to 2</span><br><span class="line"></span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_PRED (0 ms)</span><br><span class="line">[----------] 1 test from EXPTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 0 tests.</span><br><span class="line">[  FAILED  ] 1 test, listed below:</span><br><span class="line">[  FAILED  ] EXPTEST.EXPTEST_PRED</span><br><span class="line"></span><br><span class="line"> 1 FAILED TEST</span><br></pre></td></tr></table></figure><h1 id="5-TEST-F"><a href="#5-TEST-F" class="headerlink" title="5.TEST_F"></a>5.TEST_F</h1><p>介绍完毕断言宏了，TEST的作用想必大家也明白了，下面对TEST_F给出一个简单的示例。</p><p>在上文介绍TEST_F中提到过编写的基本框架应该如下所示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyA) &#123; ... &#125;</span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, HasPropertyB) &#123; ... &#125;</span><br></pre></td></tr></table></figure><p>假设我们需要对MyClass类进行测试，那么MyClassTest类就是对MyClass进行初始化和销毁操作的，每一个TEST_F都是对MyClass中的某个成员变量进行测试。</p><p>下面是一个简单的对类的单元测试的示例，目的是确认AddX和AddY的情况符合我们的预期，能正常给成员变量添加值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gmock/gmock.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyClass</span>(<span class="type">int</span> x = <span class="number">0</span>, <span class="type">int</span> y = <span class="number">0</span>) : _x(x), _y(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">AddX</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _x += val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">AddY</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        _y += val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetX</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> _x; &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetY</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> _y; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> _x;</span><br><span class="line">    <span class="type">int</span> _y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyClassTest</span> : <span class="keyword">public</span> testing::Test</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">SetUp</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;set up for MyClass\n&quot;</span>;</span><br><span class="line">        _mc = std::<span class="built_in">make_shared</span>&lt;MyClass&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">TearDown</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;tear down for MyClass\n&quot;</span>;</span><br><span class="line">        _mc.<span class="built_in">reset</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::shared_ptr&lt;MyClass&gt; _mc;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, MyClassTestAddX)</span><br><span class="line">&#123;</span><br><span class="line">    _mc-&gt;<span class="built_in">AddX</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(_mc-&gt;<span class="built_in">GetX</span>(), <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST_F</span>(MyClassTest, MyClassTestAddY)</span><br><span class="line">&#123;</span><br><span class="line">    _mc-&gt;<span class="built_in">AddY</span>(<span class="number">20</span>);</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(_mc-&gt;<span class="built_in">GetY</span>(), <span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在代码中，TEST_F体内可以访问MyClassTest的成员变量<code>_mc</code>，并调用它的成员函数。这样就避免了我们在每个单元测试中对一些公用的类进行多次初始化程序编写的操作。</p><p>编译运行这个代码，能看到SetUp和TearDown在每次TEST_F之前和之后都会被执行，并非只执行一次！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">❯ g++ test.cpp -o test -lgtest &amp;&amp; ./test</span><br><span class="line">[==========] Running 2 tests from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 2 tests from MyClassTest</span><br><span class="line">[ RUN      ] MyClassTest.MyClassTestAddX</span><br><span class="line">set up for MyClass</span><br><span class="line">tear down for MyClass</span><br><span class="line">[       OK ] MyClassTest.MyClassTestAddX (0 ms)</span><br><span class="line">[ RUN      ] MyClassTest.MyClassTestAddY</span><br><span class="line">set up for MyClass</span><br><span class="line">tear down for MyClass</span><br><span class="line">[       OK ] MyClassTest.MyClassTestAddY (0 ms)</span><br><span class="line">[----------] 2 tests from MyClassTest (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 2 tests from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 2 tests.</span><br></pre></td></tr></table></figure><p>如果你需要测试一个类的私有成员，可以使用g++的编译命令<code>-fno-access-control</code>直接取消访问限定符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ test.cpp -o test -fno-access-control -lgtest</span><br></pre></td></tr></table></figure><p>此时在类外对私有成员和私有函数的直接访问不会出现编译报错。但需要注意的是，你只可以在<strong>单元测试</strong>中使用该编译命令，在生产环境中不应该这么做！</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>对于Gtest的宏的介绍到这里就结束了。</p><p>google gtest框架中还包含了一个gmock模块，这个模块的主要作用是继承一个父类，重写虚函数，并可以在测试夹具中用EXPECT_CALL自定义重写后函数的返回值和调用次数。在我遇到的实际项目中，这个gmock模块用到的次数很少，因为它的适用范围实在是太窄了。</p>]]></content>
    
    
    <summary type="html">C++ Google Gtest测试框架的使用教程</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="C++" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/C/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="Cpp" scheme="https://blog.musnow.top/tags/Cpp/"/>
    
    <category term="单元测试" scheme="https://blog.musnow.top/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】ubuntu安装google gtest框架</title>
    <link href="https://blog.musnow.top/posts/852447913/"/>
    <id>https://blog.musnow.top/posts/852447913/</id>
    <published>2024-01-26T03:40:00.000Z</published>
    <updated>2024-01-26T03:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu 22.04.03 LTS 安装 google gtest 框架</p><h1 id="1-依赖项"><a href="#1-依赖项" class="headerlink" title="1.依赖项"></a>1.依赖项</h1><p>首先在ubuntu中安装如下包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y unzip g++ gcc cmake make automake</span><br></pre></td></tr></table></figure><h1 id="2-下载软件包"><a href="#2-下载软件包" class="headerlink" title="2.下载软件包"></a>2.下载软件包</h1><p>进入google gtest的github页面，下载源码包 <a href="https://github.com/google/googletest/releases">Releases · google&#x2F;googletest</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/google/googletest/archive/refs/tags/v1.14.0.zip</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/ea030dafe5308bcb2f801ed363efcf86.png" alt="image.png"></p><p>将其上传到ubuntu中，并解压。你也可以下载tar.gz的压缩包，并使用<code>tar -zxvf</code>命令解压。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip googletest-1.14.0.zip</span><br></pre></td></tr></table></figure><h1 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h1><p>解压后进入文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd googletest-1.14.0</span><br></pre></td></tr></table></figure><p>依次执行如下命令，安装google gtest；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake .</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>这样就安装成功了。</p><h1 id="4-测试是否正常安装"><a href="#4-测试是否正常安装" class="headerlink" title="4.测试是否正常安装"></a>4.测试是否正常安装</h1><p>用如下测试代码看看是否能正常调用gtest模块。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">TEST</span>(ADDTEST,ADDTEST_TRUE)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">EXPECT_EQ</span>(num,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> </span>&#123;  </span><br><span class="line"> std::cout &lt;&lt; <span class="string">&quot;Running main() from gtest_main.cc\n&quot;</span>;  </span><br><span class="line"> testing::<span class="built_in">InitGoogleTest</span>(&amp;argc, argv);  </span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">RUN_ALL_TESTS</span>();  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>编译并运行，没有问题！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ g++ test.cpp -o test -lgtest</span><br><span class="line">$ ./test</span><br><span class="line">Running main() from gtest_main.cc</span><br><span class="line">[==========] Running 1 test from 1 test suite.</span><br><span class="line">[----------] Global test environment set-up.</span><br><span class="line">[----------] 1 test from ADDTEST</span><br><span class="line">[ RUN      ] ADDTEST.ADDTEST_TRUE</span><br><span class="line">[       OK ] ADDTEST.ADDTEST_TRUE (0 ms)</span><br><span class="line">[----------] 1 test from ADDTEST (0 ms total)</span><br><span class="line"></span><br><span class="line">[----------] Global test environment tear-down</span><br><span class="line">[==========] 1 test from 1 test suite ran. (0 ms total)</span><br><span class="line">[  PASSED  ] 1 test.</span><br></pre></td></tr></table></figure><p>注意，gtest是一个动态库，编译的时候需要加上<code>-lgtest</code>进行链接。</p>]]></content>
    
    
    <summary type="html">ubuntu22.04.03安装google gtest框架</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="单元测试" scheme="https://blog.musnow.top/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】wsl2安装ubuntu并移动安装位置</title>
    <link href="https://blog.musnow.top/posts/3613882502/"/>
    <id>https://blog.musnow.top/posts/3613882502/</id>
    <published>2024-01-26T02:40:00.000Z</published>
    <updated>2024-01-26T02:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-启用wsl"><a href="#1-启用wsl" class="headerlink" title="1.启用wsl"></a>1.启用wsl</h1><p>首先是启用你的wsl，参考本站<a href="https://blog.musnow.top/posts/4065446782">wsl安装centos8</a>中的教程;</p><p>启用wsl后，更新一下，并设置版本为2；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --update</span><br><span class="line">wsl --set-default-version 2 <span class="comment"># 设置wsl版本为2，不然可能安装失败</span></span><br></pre></td></tr></table></figure><h1 id="2-安装ubuntu"><a href="#2-安装ubuntu" class="headerlink" title="2.安装ubuntu"></a>2.安装ubuntu</h1><p>在微软商店搜索ubuntu，根据你的需要安装指定的版本，我选择的是表明了版本号的Ubuntu 22.04.3 LTS版本。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/dba1d9e28d29cfa71b23641976622979.png" alt="image.png"></p><p>下载完毕后，在微软商店里面点击打开，会弹出一个新的终端，进行安装流程。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/d6b4082ddbc2fe980ef2a38288e1c400.png" alt="image.png"></p><p>随后会提示你输入一个用户名，以及该用户名的密码。为了方便辨识不同的虚拟机，我直接将用户名设置为wsl了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Installing, this may take a few minutes...</span><br><span class="line">Please create a default UNIX user account. The username does not need to match your Windows username.</span><br><span class="line">For more information visit: https://aka.ms/wslusers</span><br><span class="line">Enter new UNIX username: wsl</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">Installation successful!</span><br><span class="line">To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;.</span><br><span class="line">See &quot;man sudo_root&quot; for details.</span><br><span class="line"></span><br><span class="line">Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 4.4.0-22621-Microsoft x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">This message is shown once a day. To disable it please create the</span><br><span class="line">/home/wsl/.hushlogin file.</span><br><span class="line">wsl@7945R9P:~$</span><br></pre></td></tr></table></figure><p>在windows的终端里面使用wsl命令可以看到当前安装的ubuntu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-22.04    Running         1</span><br></pre></td></tr></table></figure><h1 id="3-移动安装位置"><a href="#3-移动安装位置" class="headerlink" title="3.移动安装位置"></a>3.移动安装位置</h1><blockquote><p>参考: <a href="https://www.cnblogs.com/tl542475736/p/14855863.html">Site Unreachable</a></p></blockquote><p>此时先不要急着做下一步，因为默认情况下这个wsl主机是安装在C盘的，对于Linux系统而言，后续用久了容易涨到30GB甚至更大的存储空间消耗。除非你的C盘有非常非常非常多的剩余空间，不然还是建议移动到其他盘去重新安装。</p><p>首先用shutdown命令关闭虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><p>随后用export导出命令将该虚拟机打包导出到一个存储路径中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --export 虚拟机名字 导出文件路径</span><br></pre></td></tr></table></figure><p>稍等片刻即可成功导出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl --export Ubuntu-22.04 d:\wsl-ubuntu22.04.tar</span><br><span class="line">正在导出，这可能需要几分钟时间。</span><br><span class="line">操作成功完成。</span><br></pre></td></tr></table></figure><p>删除当前的虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister Ubuntu-22.04</span><br></pre></td></tr></table></figure><p>把刚刚导出的tar文件，导入wsl中。此时可以选择我们需要的安装路径，并且指定wsl版本为2（在这之前需要执行<code>wsl --update</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --import 虚拟机名字 安装路径 tar包路径 --version 2</span><br></pre></td></tr></table></figure><p>注意，如果你的安装路径里有空格（比如<code>Progarm Files</code>文件夹），则需要用英文引号将路径给括起来。</p><p>如下所示，导入成功，并且版本为wsl2；导入后，tar文件可以删除，不会影响虚拟机使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl --unregister Ubuntu-22.04</span><br><span class="line">正在注销。</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\S2522&gt; wsl --import Ubuntu-22.04 &quot;D:\Program Files\WSL&quot; &quot;D:\Program Files\WSL\wsl-ubuntu22.04.tar&quot; --version 2</span><br><span class="line">正在导入，这可能需要几分钟时间。</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\S2522&gt; wsl -l -v</span><br><span class="line">  NAME            STATE           VERSION</span><br><span class="line">* Ubuntu-22.04    Stopped         2</span><br></pre></td></tr></table></figure><p>查看一下这个安装路径，能在里面找到一个vhdx虚拟磁盘文件，这就代表我们移动安装目录成功了。不用担心自己的C盘被挤爆了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/4e2d6c0cc2b32263441ff8a87363f8c3.png" alt="image.png"></p><p>使用<code>wsl</code>命令即可进入该虚拟机。因为不是从微软商店直接安装的，所以默认进入的是root用户。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; wsl</span><br><span class="line">^EWelcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.133.1-microsoft-standard-WSL2 x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This message is shown once a day. To disable it please create the</span><br><span class="line">/root/.hushlogin file.</span><br><span class="line">root@7945R9P:/mnt/c/Users/S2522#</span><br></pre></td></tr></table></figure><p>回到windows的命令行，使用如下命令配置默认用户为刚刚我们初始化时设置的用户（当时我设置的用户名是wsl）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu2204 config --default-user 用户名</span><br></pre></td></tr></table></figure><p>这样配置了之后，<code>wsl</code>命令默认进入的用户就是你刚刚从微软商店下载时初始化的子用户了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\S2522&gt; ubuntu2204 config --default-user wsl</span><br><span class="line">PS C:\Users\S2522&gt; wsl</span><br><span class="line">To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;.</span><br><span class="line">See &quot;man sudo_root&quot; for details.</span><br><span class="line"></span><br><span class="line">wsl@7945R9P:/mnt/c/Users/S2522$</span><br></pre></td></tr></table></figure><h1 id="4-安装软件包"><a href="#4-安装软件包" class="headerlink" title="4.安装软件包"></a>4.安装软件包</h1><p>使用如下命令更新软件源，更新完毕后就可以自行下载你需要的软件包了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y update &amp;&amp; sudo apt -y upgrade</span><br></pre></td></tr></table></figure><p>这里列出我自己需要使用的软件包的安装命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install vim git net-tools cmake make automake doxygen unzip wget curl g++ gcc</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>后续就是Ubuntu的正常使用和Linux环境安装过程了，祝你使用愉快！</p>]]></content>
    
    
    <summary type="html">wsl2安装ubuntu并移动安装位置</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Linux" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
    <category term="ubuntu" scheme="https://blog.musnow.top/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>【vscode】vscode paste image插件设置</title>
    <link href="https://blog.musnow.top/posts/4210795894/"/>
    <id>https://blog.musnow.top/posts/4210795894/</id>
    <published>2024-01-24T08:10:00.000Z</published>
    <updated>2024-01-24T08:10:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>vscode编辑md文件的时候，如果想插入图片，自带的粘贴只会粘贴到当前目录下，也没有文件重命名，很不友好。</p><p>在扩展商店里面有mushan的Paste Image插件，相比自带的，更加友好一点。但是它的配置把我弄糊涂了，简单测试了一下才明白处理的逻辑。</p><p>注意，本文编写的是对mushan的Paste Image插件的教程。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/aa55e470f0a668f03a44b936a4fe2948.png" alt="image.png"></p><p>首先是安装这个插件，这个不多说，然后进入插件设置。我这里说明一下每一个设置项的作用，只列出了需要修改的配置项。</p><p>注意：该插件的粘贴图片快捷键是<code>CTRL+ALT+V</code>。</p><table><thead><tr><th>设置项</th><th>作用</th><th>示例配置</th><th>说明</th></tr></thead><tbody><tr><td>Base Path</td><td>基础目录</td><td>${currentFileDir}</td><td>该项相当于粘贴文件的时候，应该把什么目录视作工作目录，最终图片路径会以这个path来计算相对路径；<code>currentFileDir</code>就是当前工作区文件的路径，所以不需要修改这个配置。</td></tr><tr><td>Default Name</td><td>图片文件名</td><td>Y-MM-DD-HH-mm-ss</td><td>粘贴后的图片文件名，可以根据当前时间格式化命名。注意这里不要添加其他非格式化项，不然容易命令出错。</td></tr><tr><td>Name Prefix</td><td>图片文件名前缀</td><td>留空</td><td>该项是图片文件名的前缀，比如设置为<code>image-</code>，则粘贴的图片文件名前面会带上<code>image-</code>；</td></tr><tr><td>Name Suffix</td><td>图片文件名后缀</td><td>留空</td><td>该项是图片文件名的后缀，设置效果同上。（文件名后缀是在文件扩展名之前的）</td></tr><tr><td>Path</td><td>图片文件保存位置</td><td>${currentFileDir}</td><td>图片文件会保存的目录，根据你的需要修改；</td></tr><tr><td>Prefix</td><td>最终文件路径的前缀</td><td>留空</td><td>最终文件路径的前缀，建议设置为<code>./</code>；</td></tr><tr><td>Suffix</td><td>最终文件路径后缀</td><td>留空</td><td>最终文件路径的后缀，不建议添加值，否则会因为扩展名被覆盖而影响解析；</td></tr></tbody></table><p>根据我的需要，我需要将图片粘贴到当前md文件所在目录下的img路径中，那么我就需要修改Path和Prefix两个配置项</p><table><thead><tr><th>项目</th><th>设置</th></tr></thead><tbody><tr><td>Path</td><td>${currentFileDir}&#x2F;img&#x2F;</td></tr><tr><td>Prefix</td><td>.&#x2F;</td></tr></tbody></table><p>如果你不设置Prefix，最终粘贴的图片路径如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](img/image-20240124161634.png)</span><br></pre></td></tr></table></figure><p>对于绝大部分markdown软件，这个路径都能被正常识别为相对路径并访问到图片。但是对于我正在使用的vuepress框架而言，必须将图片路径添加上<code>./</code>他才能识别出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](./img/image-20240124160742.png)</span><br></pre></td></tr></table></figure><p>设置了Prefix之后就没有问题了！</p><p>这个插件还是很好用的，如果你发现某些设置不生效，可以重启vscode或者重新写入配置项试试（我就遇到过，玄学问题）。</p>]]></content>
    
    
    <summary type="html">vscode paste image插件设置</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="编程工具" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="vscode" scheme="https://blog.musnow.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>【win】vscode无法使用ctrl+shift+p快捷键的解决方案</title>
    <link href="https://blog.musnow.top/posts/4138872091/"/>
    <id>https://blog.musnow.top/posts/4138872091/</id>
    <published>2024-01-24T08:00:00.000Z</published>
    <updated>2024-01-24T08:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用vscode的时候遇到的这个问题，明明快捷键设置的是<code>ctrl+shift+p</code>，但是在电脑上怎么敲都敲不出来，因为用这个快捷键打开命令面板都习惯了，也不想换，就在找原因。</p><p>同时百度的时候还遇到了几个可能的问题：</p><ul><li>键盘不支持全键无冲，ctrl+shift+p的组合冲突了</li><li>键盘坏了（最开始我还真有这个想法，但测试了一下就发现没坏）</li><li>如果是笔记本，测试自带键盘能否正常使用该快捷键</li></ul><p>最后发现是我开机自启了picgo，而picgo的快速上传快捷键和vscode冲突了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/dba80a531299698f411bce425b2ee676.png" alt="image.png"></p><p>在picgo的设置-快捷键设置里面，把这个快捷键给禁用就行。</p>]]></content>
    
    
    <summary type="html">vscode无法使用ctrl+shift+p快捷键解决方案</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="vscode" scheme="https://blog.musnow.top/tags/vscode/"/>
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Python】valorant国服和港服文件差距</title>
    <link href="https://blog.musnow.top/posts/87392930/"/>
    <id>https://blog.musnow.top/posts/87392930/</id>
    <published>2024-01-19T11:30:00.000Z</published>
    <updated>2024-01-19T11:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>今天整理本地文件的时候突然有点好奇，valorant国服和港服的文件是否会有大量相同的文件？</p><p>如果有很多相同的文件，我们就能用windows文件系统的<code>硬链接</code>功能将相同的文件映射为同一个，这样就能节省本地的存储空间。</p><h2 id="1-目视观察"><a href="#1-目视观察" class="headerlink" title="1.目视观察"></a>1.目视观察</h2><p>游戏都更新了<code>2024-01-19 17:00</code>当日的最新版本。</p><p>首先是看两个游戏的安装目录，可以发现都有live文件夹；</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/225c706bded245289b0df2291513f12b.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/a4f74e1a9e520a7a1b796a70b48fb372.png" alt="image.png"></p><p>从windows的文件夹属性来看，港服的文件会多一些，容量也多了将近12GB；但是国服的文件夹数量会比港服多很多。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/26db99c234f03092bbe2820ac215c4b1.png" alt="image.png"></p><h2 id="2-Python代码计算md5"><a href="#2-Python代码计算md5" class="headerlink" title="2.Python代码计算md5"></a>2.Python代码计算md5</h2><p>使用python简单写个代码来遍历这两个文件夹，通过计算MD5来判断有多少文件是完全相同的。</p><ul><li>MD5可以理解为一个文件的数字签名，只要文件内容相同，计算出来的MD5就是完全一致的。当然也有可能出现两个毫不相干的文件计算出来的MD5相同的情况（哈希冲突），但是几率很小，在本次实验中应该是不存在这种情况的。</li><li>Python可以使用os模块来获取一个文件目录下的所有文件。</li></ul><p>代码文件层级如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- main.py</span><br><span class="line">- utils</span><br><span class="line">- Files.py</span><br><span class="line">- Logger.py</span><br><span class="line">- __init__.py</span><br><span class="line">- log</span><br></pre></td></tr></table></figure><p>分了三个模块，其中Logger模块里面只有一个log初始化的代码；代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Logger.py</span></span><br><span class="line"><span class="keyword">import</span> logging <span class="comment"># 采用logging来替换所有print</span></span><br><span class="line"><span class="keyword">import</span> shutil,os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">LOGGER_NAME = <span class="string">&quot;valorant-test&quot;</span></span><br><span class="line">LOGGER_FILE = <span class="string">&quot;valorant-test.log&quot;</span> <span class="comment"># 如果想修改log文件的名字和路径，修改此变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否已有日志文件，如果有将其移动走</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(LOGGER_FILE):</span><br><span class="line">    new_path = LOGGER_FILE + <span class="string">&quot;.&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time())) +  <span class="string">&quot;.bak&quot;</span></span><br><span class="line">    shutil.move(LOGGER_FILE, new_path) <span class="comment"># 移动文件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[log] Previous log moved to <span class="subst">&#123;new_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化日志模块</span></span><br><span class="line"><span class="comment"># 只打印info以上的日志（debug低于info）</span></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    <span class="built_in">format</span>=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="comment"># 获取一个logger对象</span></span><br><span class="line">_log = logging.getLogger(LOGGER_NAME)</span><br><span class="line"><span class="string">&quot;&quot;&quot;自定义的logger对象&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 1.实例化控制台handler和文件handler，同时输出到控制台和文件</span></span><br><span class="line">file_handler = logging.FileHandler(LOGGER_FILE, mode=<span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">fmt = logging.Formatter(fmt=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line">file_handler.setFormatter(fmt)</span><br><span class="line"><span class="comment"># 添加handler</span></span><br><span class="line">_log.addHandler(file_handler)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Files.py</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_json_file</span>(<span class="params">path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;打开json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        tmp = json.load(f)</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_json_file</span>(<span class="params">path: <span class="built_in">str</span>, value</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;写入json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fw2:</span><br><span class="line">        json.dump(value, fw2, indent=<span class="number">2</span>, sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_file</span>(<span class="params">source:<span class="built_in">str</span>,target:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;拷贝文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> source == target:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    shutil.copy2(source, target)</span><br><span class="line">    _log.info(<span class="string">f&quot;[file] copy file from &#x27;<span class="subst">&#123;source&#125;</span>&#x27; to &#x27;<span class="subst">&#123;target&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_files_list</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取一个目录下所有文件列表，包括子目录</span></span><br><span class="line"><span class="string">    :param dir: 文件路径</span></span><br><span class="line"><span class="string">    :return: 文件列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    files_list = []</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>, topdown=<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            files_list.append(os.path.join(root, file))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> files_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dir</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;创建文件夹&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 如果目标文件目录不存在，创建文件目录</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">        os.mkdir(<span class="built_in">dir</span>)</span><br><span class="line">        _log.info(<span class="string">f&quot;[file] create dir: <span class="subst">&#123;<span class="built_in">dir</span>&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_md5</span>(<span class="params">file_path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    get file md5 by file path</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    chunk_size = <span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>  <span class="comment"># 根据需要调整单块的大小</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_md5 = hashlib.md5()</span><br><span class="line">        <span class="keyword">while</span> chunk := f.read(chunk_size):</span><br><span class="line">            file_md5.update(chunk)</span><br><span class="line">    <span class="keyword">return</span> file_md5.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_size</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获取文件的字节大小&quot;&quot;&quot;</span></span><br><span class="line">    size = os.path.getsize(file_path)</span><br><span class="line">    <span class="keyword">return</span> size</span><br></pre></td></tr></table></figure><p>主文件如下，函数的流程很简单，就是遍历这两个文件夹的所有文件，计算它们的MD5，并将结果通过dict写入一个json文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义包</span></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> Files</span><br><span class="line"><span class="keyword">from</span> utils.Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line">DIR_HK = <span class="string">&quot;E:\GAME\Riot Games\VALORANT\live&quot;</span>  <span class="comment"># 港服</span></span><br><span class="line">DIR_TX = <span class="string">&quot;E:\GAME\Tencent Games\VALORANT\live&quot;</span>  <span class="comment"># 国服</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    遍历两个游戏安装目录的文件，计算md5；</span></span><br><span class="line"><span class="string">    此操作耗时较长。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    hk_file = Files.get_files_list(DIR_HK)</span><br><span class="line">    tx_file = Files.get_files_list(DIR_TX)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file)&#125;</span> files&quot;</span>)</span><br><span class="line"></span><br><span class="line">    hk_file_dict = &#123;&#125;</span><br><span class="line">    tx_file_dict = &#123;&#125;</span><br><span class="line">    <span class="comment"># 遍历港府文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> hk_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        hk_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 遍历国服文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> tx_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        tx_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 写入json文件</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>, hk_file_dict)</span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>, tx_file_dict)</span><br></pre></td></tr></table></figure><p>这个代码的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:27 | [start]</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:30 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:31 | [tx] 967 files</span><br><span class="line">...省略中间遍历的打印</span><br><span class="line">[24-01-19 18:14:23] INFO:test.py:&lt;module&gt;:50 | [success]</span><br></pre></td></tr></table></figure><p>计算完毕md5后，获得了两个json文件，重新加载这两个文件来读取其中内容，遍历判断是否有相同的文件。</p><p>我知道这里多绕了一层，这是因为两个函数不是同时写出来的，我担心第一个函数运行有些问题，所以采用了写入json文件的方式而不是直接用变量存放结果再进行处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_md5_diff_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;展示港服和国服文件差异&quot;&quot;&quot;</span></span><br><span class="line">    hk_file_dict = Files.open_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>)</span><br><span class="line">    tx_file_dict = Files.open_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file_dict)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file_dict )&#125;</span> files&quot;</span>)</span><br><span class="line">    <span class="comment"># 国服的文件较少，遍历国服文件列表，查询是否存在于港服文件中</span></span><br><span class="line">    match_file_dict = &#123;&#125;</span><br><span class="line">    match_count = <span class="number">0</span></span><br><span class="line">    file_name_match_count = <span class="number">0</span> <span class="comment"># 文件名也相同</span></span><br><span class="line">    file_size_sum = <span class="number">0</span> <span class="comment"># 相同文件的字节数量</span></span><br><span class="line">    <span class="comment"># 开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> tx_file <span class="keyword">in</span> tx_file_dict:</span><br><span class="line">        <span class="keyword">for</span> hk_file,hk_md5 <span class="keyword">in</span> hk_file_dict.items():</span><br><span class="line">            <span class="keyword">if</span> tx_file_dict[tx_file] == hk_md5:</span><br><span class="line">                <span class="comment"># 字节数相加</span></span><br><span class="line">                cur_file_size = Files.get_file_size(tx_file)</span><br><span class="line">                file_size_sum += cur_file_size</span><br><span class="line">                <span class="comment"># 打印</span></span><br><span class="line">                _log.info(<span class="string">f&quot;[match] tx:<span class="subst">&#123;tx_file&#125;</span> hk:<span class="subst">&#123;hk_file&#125;</span> | <span class="subst">&#123;hk_md5&#125;</span> | <span class="subst">&#123;cur_file_size&#125;</span> Bytes&quot;</span>)</span><br><span class="line">                match_file_dict[hk_md5] = &#123;</span><br><span class="line">                    <span class="string">&quot;hk_file&quot;</span>:hk_file,</span><br><span class="line">                    <span class="string">&quot;tx_file&quot;</span>:tx_file</span><br><span class="line">                &#125;</span><br><span class="line">                match_count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> hk_file == tx_file:</span><br><span class="line">                    file_name_match_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 结束、打印</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/match_file.json&#x27;</span>,match_file_dict)</span><br><span class="line">    _log.info(<span class="string">f&quot;[match] <span class="subst">&#123;match_count&#125;</span> files | name match:<span class="subst">&#123;file_name_match_count&#125;</span> | total size:<span class="subst">&#123;file_size_sum / (<span class="number">1024</span> * <span class="number">1024</span>)&#125;</span> MB&quot;</span>)</span><br></pre></td></tr></table></figure><p>这个函数的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">... 省去中间部分的打印</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure><p>惊奇的发现，国服和港服的文件里面，只有279个文件的md5是相同的，而且这些文件的名字都不一样，加起来的总大小只有171MB！</p><p>这点大小就没有必要用硬链接来省硬盘容量了🤣。</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>我对游戏制作并不理解，看上去国服还是修改了很多东西的。做这个测试之前，我还以为国服和港服至少能有10GB左右的文件是相同的呢……</p><p>在评论区留下你的看法吧！</p><h3 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h3><details><summary>以下是相同md5文件的完整日志输出</summary><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak | 1a909a4e490c1121c0e01c94be4d8c77 | 6003861 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak | 353041a41d9da52ffefcc37c89dbb83b | 279905 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak | 78cf51888cf52a0f6131e948b2385c62 | 386884 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak | 03e4b627d65ccca6b810b99ef86dc88f | 3565138 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak | 75885f20b96687eb1a91905da87397dd | 5183550 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak | df0db5ceaee6af95c163b3bd22efabc4 | 317735 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak | 22299027a8a31c24a2f667f218163621 | 314031 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak | f6d256329b24a73d131a442fe1bdcd05 | 366595 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak | 37b37cdc6136fc8a0f5232bcaae9443e | 478939 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak | 98c2430f86321e05ffa21fb5de8e0823 | 228122 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak | ba68d98c5741feea3a2a8b3062e6b33c | 231572 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak | 62593b1c724fa2f7909683676e517ee5 | 207739 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak | 87f8df5088cf2e324e0b50a788e41b1e | 226211 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak | 37f2d16ff1e6423fe6c93bb5f3704f78 | 402687 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak | af1aee16186d1f5b808fea62788ba65b | 186958 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak | 32a7083e4afed6cbdd87489bf00fb72e | 186991 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak | 3a5e07e83ab696325194fda667f40adb | 224532 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak | 9a6a00edf4f4aebe264335d32dfbdd5a | 228808 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak | b706ebcee9553e038b82479edccf4165 | 202214 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak | d208ba29eb26f7325f7f055b4e6f3ba0 | 321134 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak | cd2443564cb7216f3a52578c76e83c80 | 211980 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak | ecdd6b5ebe2bd4c7e40a637ebc00f363 | 232070 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak | a0fb5f9fa4237ffcd73fb9a0b75df93f | 243625 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak | af47fe7576ef7f957a3dad4c2dbee25e | 451818 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak | 9b57b3e79446429691b04c848443ec1f | 265463 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak | 48dcfd6dbb6054b00f2eaaa98eb2854d | 460810 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak | 7803ed6631f55e56209a5a82e2c63e9e | 217428 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak | fe1a0fdb4f2102b21306ab175ad07d74 | 239083 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak | 4b8cbfcd0cc3cbd95b46ff927e17d3cc | 201977 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak | 814924c80224d39186d32d876c38a930 | 220397 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak | 49158449aedda1f3b020b5557ac0cf9a | 270807 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak | 8bff968d6f06d429759675eb278fee83 | 519415 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak | 0a73db278ddb5abcbe43ad4066bf239b | 230850 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak | 4a8f1111461833ba54bbf9a2c06d4896 | 234416 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak | 7c763171bdde1a6a8358180ed585034e | 234204 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak | 02809db4176d1a0819562a0c9707b893 | 567612 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak | ce0b8d9a5d379aeef89f4755e283a273 | 456368 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak | 96477cd1228bb45f0597c079492fdace | 208619 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak | 06b059219b57a339f6f324b2ca16ed78 | 205047 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak | b199dfcb09fbbc226c07b4091d654669 | 215699 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak | 9d831f342acb5ec998ba9a7368239759 | 225555 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak | 6d7bca559226543213e0bb122efd95d6 | 221133 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak | fa370bc586055c3f9c518af9d0070e5c | 223472 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak | 00199374b56500de5d89bcb1eaf9bca0 | 229091 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak | 531b7ab45701c376fbb35d09b641c386 | 351003 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak | 36fd894c0d958c754b5544754cb74af8 | 237218 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak | aa47507900c5c6a12074e6b928f8f5eb | 217919 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak | f87c694d5d45e2fce3640d7f10d58f1f | 341731 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak | 536462c950527c7a68b4bdca15feaed9 | 206145 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak | c55b06f4e9b461803bb768a6ffa9100a | 209319 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak | 5885c004fc8bb9a138f5ebdaf2601b2f | 527387 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak | 95479ec9ff43dae880acae39f8c9b710 | 503299 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak | 841f0db1bd81e44ee9825d1d56d34d8a | 438108 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak | 050b25ecc7718e55e3fcec5a7b239d7d | 221774 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak | 3fc1f166ec7c2efa83ef153ad584b78f | 358245 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak | fd23fb189a14b3f9e5dc25d84d6af873 | 254300 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak | 889d29f0d68c8bab9ebf2c7426f3613a | 190714 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak | 59cb5352e750cb44a07eae223f30c3c9 | 192079 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll | 1c9b45e87528b8bb8cfa884ea0099a85 | 2106216 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll | a7675ddea31dbacd14cc6e9199f7641f | 4488904 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat | bc7f54e4df91c9137dced27976228b66 | 10130560 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin | 94855c31f6c24656a6d67ceae0b04cca | 246209 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin | dfb3f71057e263620565783f9f676fb4 | 1562112 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll | a970b7fcc13c18a1998cf65a5b8cb699 | 1868736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll | c5be9b2846ad20b7abf3b1e3afe3f3ff | 3212640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll | 835591acabfb69a6f9dace12711f2243 | 847440 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps | e15c3c2ad82c41935c7ab27b76e58964 | 930 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf | 89454f173319872a5fa975b26d028f9d | 5395052 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll | 43b8ae36fb551bb0226bb59cf21431ce | 49771408 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll | 53a932b4f7819a9e62be4e84a2e808cd | 4327248 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll | 15ee5c7404fa5b6de0eb0c042474d3bf | 1369936 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll | 123404fa3ab377e006e8bb777dc58b36 | 383856 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm | b846e42b7caeadf1854f8739f4966e36 | 588065 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm | 6c0a4b8cabcc30ae3e135a9af7a2df8b | 2729576 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 | 8c1b4ebecd4d973e7520a5eca76d4992 | 46811173 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure></details>]]></content>
    
    
    <summary type="html">突然好奇，想看看valorant（无畏契约）的国服和港服文件有什么差异</summary>
    
    
    
    <category term="编程学习" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Python" scheme="https://blog.musnow.top/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/Python/"/>
    
    
    <category term="Python" scheme="https://blog.musnow.top/tags/Python/"/>
    
  </entry>
  
</feed>
