<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>慕雪的寒舍</title>
  
  <subtitle>雪下了一夜</subtitle>
  <link href="https://blog.musnow.top/atom.xml" rel="self"/>
  
  <link href="https://blog.musnow.top/"/>
  <updated>2024-01-19T11:30:00.000Z</updated>
  <id>https://blog.musnow.top/</id>
  
  <author>
    <name>慕雪年华</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Python】valorant国服和港服文件差距</title>
    <link href="https://blog.musnow.top/posts/87392930/"/>
    <id>https://blog.musnow.top/posts/87392930/</id>
    <published>2024-01-19T11:30:00.000Z</published>
    <updated>2024-01-19T11:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>今天整理本地文件的时候突然有点好奇，valorant国服和港服的文件是否会有大量相同的文件？</p><p>如果有很多相同的文件，我们就能用windows文件系统的<code>硬链接</code>功能将相同的文件映射为同一个，这样就能节省本地的存储空间。</p><h2 id="1-目视观察"><a href="#1-目视观察" class="headerlink" title="1.目视观察"></a>1.目视观察</h2><p>游戏都更新了<code>2024-01-19 17:00</code>当日的最新版本。</p><p>首先是看两个游戏的安装目录，可以发现都有live文件夹；</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/225c706bded245289b0df2291513f12b.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/a4f74e1a9e520a7a1b796a70b48fb372.png" alt="image.png"></p><p>从windows的文件夹属性来看，港服的文件会多一些，容量也多了将近12GB；但是国服的文件夹数量会比港服多很多。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/26db99c234f03092bbe2820ac215c4b1.png" alt="image.png"></p><h2 id="2-Python代码计算md5"><a href="#2-Python代码计算md5" class="headerlink" title="2.Python代码计算md5"></a>2.Python代码计算md5</h2><p>使用python简单写个代码来遍历这两个文件夹，通过计算MD5来判断有多少文件是完全相同的。</p><ul><li>MD5可以理解为一个文件的数字签名，只要文件内容相同，计算出来的MD5就是完全一致的。当然也有可能出现两个毫不相干的文件计算出来的MD5相同的情况（哈希冲突），但是几率很小，在本次实验中应该是不存在这种情况的。</li><li>Python可以使用os模块来获取一个文件目录下的所有文件。</li></ul><p>代码文件层级如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- main.py</span><br><span class="line">- utils</span><br><span class="line">- Files.py</span><br><span class="line">- Logger.py</span><br><span class="line">- __init__.py</span><br><span class="line">- log</span><br></pre></td></tr></table></figure><p>分了三个模块，其中Logger模块里面只有一个log初始化的代码；代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Logger.py</span></span><br><span class="line"><span class="keyword">import</span> logging <span class="comment"># 采用logging来替换所有print</span></span><br><span class="line"><span class="keyword">import</span> shutil,os</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">LOGGER_NAME = <span class="string">&quot;valorant-test&quot;</span></span><br><span class="line">LOGGER_FILE = <span class="string">&quot;valorant-test.log&quot;</span> <span class="comment"># 如果想修改log文件的名字和路径，修改此变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否已有日志文件，如果有将其移动走</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(LOGGER_FILE):</span><br><span class="line">    new_path = LOGGER_FILE + <span class="string">&quot;.&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(time())) +  <span class="string">&quot;.bak&quot;</span></span><br><span class="line">    shutil.move(LOGGER_FILE, new_path) <span class="comment"># 移动文件</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[log] Previous log moved to <span class="subst">&#123;new_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化日志模块</span></span><br><span class="line"><span class="comment"># 只打印info以上的日志（debug低于info）</span></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    <span class="built_in">format</span>=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line"><span class="comment"># 获取一个logger对象</span></span><br><span class="line">_log = logging.getLogger(LOGGER_NAME)</span><br><span class="line"><span class="string">&quot;&quot;&quot;自定义的logger对象&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 1.实例化控制台handler和文件handler，同时输出到控制台和文件</span></span><br><span class="line">file_handler = logging.FileHandler(LOGGER_FILE, mode=<span class="string">&quot;a&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">fmt = logging.Formatter(fmt=<span class="string">&quot;[%(asctime)s] %(levelname)s:%(filename)s:%(funcName)s:%(lineno)d | %(message)s&quot;</span>,</span><br><span class="line">                    datefmt=<span class="string">&quot;%y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line">file_handler.setFormatter(fmt)</span><br><span class="line"><span class="comment"># 添加handler</span></span><br><span class="line">_log.addHandler(file_handler)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># utils/Files.py</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_json_file</span>(<span class="params">path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;打开json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        tmp = json.load(f)</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_json_file</span>(<span class="params">path: <span class="built_in">str</span>, value</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;写入json文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> fw2:</span><br><span class="line">        json.dump(value, fw2, indent=<span class="number">2</span>, sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">copy_file</span>(<span class="params">source:<span class="built_in">str</span>,target:<span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;拷贝文件&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> source == target:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    shutil.copy2(source, target)</span><br><span class="line">    _log.info(<span class="string">f&quot;[file] copy file from &#x27;<span class="subst">&#123;source&#125;</span>&#x27; to &#x27;<span class="subst">&#123;target&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_files_list</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    获取一个目录下所有文件列表，包括子目录</span></span><br><span class="line"><span class="string">    :param dir: 文件路径</span></span><br><span class="line"><span class="string">    :return: 文件列表</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    files_list = []</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>, topdown=<span class="literal">False</span>):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            files_list.append(os.path.join(root, file))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> files_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_dir</span>(<span class="params"><span class="built_in">dir</span>: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;创建文件夹&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 如果目标文件目录不存在，创建文件目录</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="built_in">dir</span>):</span><br><span class="line">        os.mkdir(<span class="built_in">dir</span>)</span><br><span class="line">        _log.info(<span class="string">f&quot;[file] create dir: <span class="subst">&#123;<span class="built_in">dir</span>&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_md5</span>(<span class="params">file_path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    get file md5 by file path</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    chunk_size = <span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>  <span class="comment"># 根据需要调整单块的大小</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_md5 = hashlib.md5()</span><br><span class="line">        <span class="keyword">while</span> chunk := f.read(chunk_size):</span><br><span class="line">            file_md5.update(chunk)</span><br><span class="line">    <span class="keyword">return</span> file_md5.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_size</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获取文件的字节大小&quot;&quot;&quot;</span></span><br><span class="line">    size = os.path.getsize(file_path)</span><br><span class="line">    <span class="keyword">return</span> size</span><br></pre></td></tr></table></figure><p>主文件如下，函数的流程很简单，就是遍历这两个文件夹的所有文件，计算它们的MD5，并将结果通过dict写入一个json文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># main.py</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义包</span></span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> Files</span><br><span class="line"><span class="keyword">from</span> utils.Logger <span class="keyword">import</span> _log</span><br><span class="line"></span><br><span class="line">DIR_HK = <span class="string">&quot;E:\GAME\Riot Games\VALORANT\live&quot;</span>  <span class="comment"># 港服</span></span><br><span class="line">DIR_TX = <span class="string">&quot;E:\GAME\Tencent Games\VALORANT\live&quot;</span>  <span class="comment"># 国服</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_md5_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    遍历两个游戏安装目录的文件，计算md5；</span></span><br><span class="line"><span class="string">    此操作耗时较长。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    hk_file = Files.get_files_list(DIR_HK)</span><br><span class="line">    tx_file = Files.get_files_list(DIR_TX)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file)&#125;</span> files&quot;</span>)</span><br><span class="line"></span><br><span class="line">    hk_file_dict = &#123;&#125;</span><br><span class="line">    tx_file_dict = &#123;&#125;</span><br><span class="line">    <span class="comment"># 遍历港府文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> hk_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        hk_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 遍历国服文件</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> tx_file:</span><br><span class="line">        md5_str = Files.get_file_md5(file)</span><br><span class="line">        tx_file_dict[file] = md5_str</span><br><span class="line">        _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;file&#125;</span> | <span class="subst">&#123;md5_str&#125;</span>&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line">    <span class="comment"># 写入json文件</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>, hk_file_dict)</span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>, tx_file_dict)</span><br></pre></td></tr></table></figure><p>这个代码的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:27 | [start]</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:30 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:10:46] INFO:test.py:&lt;module&gt;:31 | [tx] 967 files</span><br><span class="line">...省略中间遍历的打印</span><br><span class="line">[24-01-19 18:14:23] INFO:test.py:&lt;module&gt;:50 | [success]</span><br></pre></td></tr></table></figure><p>计算完毕md5后，获得了两个json文件，重新加载这两个文件来读取其中内容，遍历判断是否有相同的文件。</p><p>我知道这里多绕了一层，这是因为两个函数不是同时写出来的，我担心第一个函数运行有些问题，所以采用了写入json文件的方式而不是直接用变量存放结果再进行处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show_md5_diff_for_valorant</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;展示港服和国服文件差异&quot;&quot;&quot;</span></span><br><span class="line">    hk_file_dict = Files.open_json_file(<span class="string">&#x27;./log/hk.json&#x27;</span>)</span><br><span class="line">    tx_file_dict = Files.open_json_file(<span class="string">&#x27;./log/tx.json&#x27;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[hk] <span class="subst">&#123;<span class="built_in">len</span>(hk_file_dict)&#125;</span> files&quot;</span>)</span><br><span class="line">    _log.info(<span class="string">f&quot;[tx] <span class="subst">&#123;<span class="built_in">len</span>(tx_file_dict )&#125;</span> files&quot;</span>)</span><br><span class="line">    <span class="comment"># 国服的文件较少，遍历国服文件列表，查询是否存在于港服文件中</span></span><br><span class="line">    match_file_dict = &#123;&#125;</span><br><span class="line">    match_count = <span class="number">0</span></span><br><span class="line">    file_name_match_count = <span class="number">0</span> <span class="comment"># 文件名也相同</span></span><br><span class="line">    file_size_sum = <span class="number">0</span> <span class="comment"># 相同文件的字节数量</span></span><br><span class="line">    <span class="comment"># 开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> tx_file <span class="keyword">in</span> tx_file_dict:</span><br><span class="line">        <span class="keyword">for</span> hk_file,hk_md5 <span class="keyword">in</span> hk_file_dict.items():</span><br><span class="line">            <span class="keyword">if</span> tx_file_dict[tx_file] == hk_md5:</span><br><span class="line">                <span class="comment"># 字节数相加</span></span><br><span class="line">                cur_file_size = Files.get_file_size(tx_file)</span><br><span class="line">                file_size_sum += cur_file_size</span><br><span class="line">                <span class="comment"># 打印</span></span><br><span class="line">                _log.info(<span class="string">f&quot;[match] tx:<span class="subst">&#123;tx_file&#125;</span> hk:<span class="subst">&#123;hk_file&#125;</span> | <span class="subst">&#123;hk_md5&#125;</span> | <span class="subst">&#123;cur_file_size&#125;</span> Bytes&quot;</span>)</span><br><span class="line">                match_file_dict[hk_md5] = &#123;</span><br><span class="line">                    <span class="string">&quot;hk_file&quot;</span>:hk_file,</span><br><span class="line">                    <span class="string">&quot;tx_file&quot;</span>:tx_file</span><br><span class="line">                &#125;</span><br><span class="line">                match_count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> hk_file == tx_file:</span><br><span class="line">                    file_name_match_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 结束、打印</span></span><br><span class="line">    Files.write_json_file(<span class="string">&#x27;./log/match_file.json&#x27;</span>,match_file_dict)</span><br><span class="line">    _log.info(<span class="string">f&quot;[match] <span class="subst">&#123;match_count&#125;</span> files | name match:<span class="subst">&#123;file_name_match_count&#125;</span> | total size:<span class="subst">&#123;file_size_sum / (<span class="number">1024</span> * <span class="number">1024</span>)&#125;</span> MB&quot;</span>)</span><br></pre></td></tr></table></figure><p>这个函数的运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">... 省去中间部分的打印</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure><p>惊奇的发现，国服和港服的文件里面，只有279个文件的md5是相同的，而且这些文件的名字都不一样，加起来的总大小只有171MB！</p><p>这点大小就没有必要用硬链接来省硬盘容量了🤣。</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>我对游戏制作并不理解，看上去国服还是修改了很多东西的。做这个测试之前，我还以为国服和港服至少能有10GB左右的文件是相同的呢……</p><p>在评论区留下你的看法吧！</p><h3 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h3><details><summary>附件</summary><p>以下是相同md5文件的完整日志输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:76 | [start]</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:44 | [hk] 1073 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:45 | [tx] 967 files</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef.pak | 1a909a4e490c1121c0e01c94be4d8c77 | 6003861 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_100_percent.pak | 353041a41d9da52ffefcc37c89dbb83b | 279905 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_200_percent.pak | 78cf51888cf52a0f6131e948b2385c62 | 386884 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\cef_extensions.pak | 03e4b627d65ccca6b810b99ef86dc88f | 3565138 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\devtools_resources.pak | 75885f20b96687eb1a91905da87397dd | 5183550 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\am.pak | df0db5ceaee6af95c163b3bd22efabc4 | 317735 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ar.pak | 22299027a8a31c24a2f667f218163621 | 314031 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bg.pak | f6d256329b24a73d131a442fe1bdcd05 | 366595 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\bn.pak | 37b37cdc6136fc8a0f5232bcaae9443e | 478939 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ca.pak | 98c2430f86321e05ffa21fb5de8e0823 | 228122 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\cs.pak | ba68d98c5741feea3a2a8b3062e6b33c | 231572 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\da.pak | 62593b1c724fa2f7909683676e517ee5 | 207739 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\de.pak | 87f8df5088cf2e324e0b50a788e41b1e | 226211 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\el.pak | 37f2d16ff1e6423fe6c93bb5f3704f78 | 402687 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-GB.pak | af1aee16186d1f5b808fea62788ba65b | 186958 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\en-US.pak | 32a7083e4afed6cbdd87489bf00fb72e | 186991 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es-419.pak | 3a5e07e83ab696325194fda667f40adb | 224532 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\es.pak | 9a6a00edf4f4aebe264335d32dfbdd5a | 228808 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\et.pak | b706ebcee9553e038b82479edccf4165 | 202214 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fa.pak | d208ba29eb26f7325f7f055b4e6f3ba0 | 321134 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fi.pak | cd2443564cb7216f3a52578c76e83c80 | 211980 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fil.pak | ecdd6b5ebe2bd4c7e40a637ebc00f363 | 232070 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\fr.pak | a0fb5f9fa4237ffcd73fb9a0b75df93f | 243625 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\gu.pak | af47fe7576ef7f957a3dad4c2dbee25e | 451818 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\he.pak | 9b57b3e79446429691b04c848443ec1f | 265463 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hi.pak | 48dcfd6dbb6054b00f2eaaa98eb2854d | 460810 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hr.pak | 7803ed6631f55e56209a5a82e2c63e9e | 217428 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\hu.pak | fe1a0fdb4f2102b21306ab175ad07d74 | 239083 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\id.pak | 4b8cbfcd0cc3cbd95b46ff927e17d3cc | 201977 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\it.pak | 814924c80224d39186d32d876c38a930 | 220397 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ja.pak | 49158449aedda1f3b020b5557ac0cf9a | 270807 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\kn.pak | 8bff968d6f06d429759675eb278fee83 | 519415 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ko.pak | 0a73db278ddb5abcbe43ad4066bf239b | 230850 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lt.pak | 4a8f1111461833ba54bbf9a2c06d4896 | 234416 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\lv.pak | 7c763171bdde1a6a8358180ed585034e | 234204 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ml.pak | 02809db4176d1a0819562a0c9707b893 | 567612 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\mr.pak | ce0b8d9a5d379aeef89f4755e283a273 | 456368 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ms.pak | 96477cd1228bb45f0597c079492fdace | 208619 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nb.pak | 06b059219b57a339f6f324b2ca16ed78 | 205047 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\nl.pak | b199dfcb09fbbc226c07b4091d654669 | 215699 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pl.pak | 9d831f342acb5ec998ba9a7368239759 | 225555 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-BR.pak | 6d7bca559226543213e0bb122efd95d6 | 221133 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\pt-PT.pak | fa370bc586055c3f9c518af9d0070e5c | 223472 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ro.pak | 00199374b56500de5d89bcb1eaf9bca0 | 229091 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ru.pak | 531b7ab45701c376fbb35d09b641c386 | 351003 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sk.pak | 36fd894c0d958c754b5544754cb74af8 | 237218 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sl.pak | aa47507900c5c6a12074e6b928f8f5eb | 217919 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sr.pak | f87c694d5d45e2fce3640d7f10d58f1f | 341731 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sv.pak | 536462c950527c7a68b4bdca15feaed9 | 206145 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\sw.pak | c55b06f4e9b461803bb768a6ffa9100a | 209319 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\ta.pak | 5885c004fc8bb9a138f5ebdaf2601b2f | 527387 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\te.pak | 95479ec9ff43dae880acae39f8c9b710 | 503299 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\th.pak | 841f0db1bd81e44ee9825d1d56d34d8a | 438108 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\tr.pak | 050b25ecc7718e55e3fcec5a7b239d7d | 221774 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\uk.pak | 3fc1f166ec7c2efa83ef153ad584b78f | 358245 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\vi.pak | fd23fb189a14b3f9e5dc25d84d6af873 | 254300 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-CN.pak | 889d29f0d68c8bab9ebf2c7426f3613a | 190714 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\Resources\locales\zh-TW.pak | 59cb5352e750cb44a07eae223f30c3c9 | 192079 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_43.dll | 1c9b45e87528b8bb8cfa884ea0099a85 | 2106216 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\d3dcompiler_47.dll | a7675ddea31dbacd14cc6e9199f7641f | 4488904 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\icudtl.dat | bc7f54e4df91c9137dced27976228b66 | 10130560 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\natives_blob.bin | 94855c31f6c24656a6d67ceae0b04cca | 246209 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\CEF3\Win64\snapshot_blob.bin | dfb3f71057e263620565783f9f676fb4 | 1562112 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll | a970b7fcc13c18a1998cf65a5b8cb699 | 1868736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\NVIDIA\GeForceNOW\Win64\GfnRuntimeSdk.dll | c5be9b2846ad20b7abf3b1e3afe3f3ff | 3212640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\ThirdParty\Windows\XAudio2_9\x64\xaudio2_9redist.dll | 835591acabfb69a6f9dace12711f2243 | 847440 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.tps | e15c3c2ad82c41935c7ab27b76e58964 | 930 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf hk:E:\GAME\Riot Games\VALORANT\live\Engine\Content\SlateDebug\Fonts\LastResort.ttf | 89454f173319872a5fa975b26d028f9d | 5395052 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\OpenImageDenoise.dll | 43b8ae36fb551bb0226bb59cf21431ce | 49771408 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-1-0.dll | e2f8b08d3e7cb64aade7401abb95e5c1 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-console-l1-2-0.dll | 542d47795c4b54e269a108fb116f4de7 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-datetime-l1-1-0.dll | a8bc700547a72d77a1ad67727068e87f | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-debug-l1-1-0.dll | 63b61e10bbe0273d8c63d32fb5e564be | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-errorhandling-l1-1-0.dll | b6e56cb1bd2d5495addcbc798f555851 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-1-0.dll | d52c2bc891ab27809b16bddff993a5d1 | 15712 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l1-2-0.dll | 61ae2315e7a597bcbb3b2e29bf8025f7 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-file-l2-1-0.dll | 41b0560f416eca31cab63bde7c91ae28 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-handle-l1-1-0.dll | b98b03972e5385175b4dfc5fedf05005 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-heap-l1-1-0.dll | 3abc73e44e75c77aac16032949df1549 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-interlocked-l1-1-0.dll | 21dea0d4f1e60f897ac1c2f231ad4e59 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-libraryloader-l1-1-0.dll | be27d237bae3fa9004262c2a93b834c8 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-localization-l1-2-0.dll | b31177c3134f9cf4be5fdb616e429159 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-memory-l1-1-0.dll | 8e638ab12851e2318ccb88f1295c7946 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-namedpipe-l1-1-0.dll | e69d1f511ad357125c34b07a7e7f9d46 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processenvironment-l1-1-0.dll | 2306b0eeee53733e09b33471bfebe917 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-0.dll | c76392da33d2a8dc33199b54236bcc12 | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-processthreads-l1-1-1.dll | 4bff92bb27fb70ff05ab1f59cb4ddea0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-profile-l1-1-0.dll | e8dc04ac0733fb9c68633e03afb6b53a | 11616 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-rtlsupport-l1-1-0.dll | 474e48c84874d76c48e596fe960a1f22 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-string-l1-1-0.dll | 3eb0726e50c2b7f39b148cd96f084d36 | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-1-0.dll | 5f9aaadb0a71670c262cece360715b51 | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-synch-l1-2-0.dll | 273a789b794dfd0e4a370e29932f5f42 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-sysinfo-l1-1-0.dll | 1589ffcc59fad86253ab7de1fe9733b3 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-timezone-l1-1-0.dll | ac611793e2221acce8040b5641fdce2e | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-core-util-l1-1-0.dll | 3c5fbeabfeb08e02a1875fd1b40b742a | 12128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-conio-l1-1-0.dll | a69121352fa09905b1f0b5c8eff8b4e1 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-convert-l1-1-0.dll | 0df91e9ccb1639af18e1512efd4b8d41 | 16224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-environment-l1-1-0.dll | 290804fca4c9f6e4253201eed9ab7bd0 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-filesystem-l1-1-0.dll | 821da1308062d9548cc4cd276ac8a5bb | 14176 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-heap-l1-1-0.dll | b6945fa978f55187d2de15061f5c5145 | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-locale-l1-1-0.dll | 87dde4b6bc93556e2104f25892b21a83 | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-math-l1-1-0.dll | 3603ec844137b2cb6c55ee9ec5f63b5c | 21344 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-multibyte-l1-1-0.dll | cec239d062fb0fa275cfadd2eb0e9307 | 20320 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-private-l1-1-0.dll | cb8a3abf15c3a44127c3eaa7fcb01367 | 64864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-process-l1-1-0.dll | 8d3c687d379f71feb6cc9cf9ecf3cdcd | 13152 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-runtime-l1-1-0.dll | 967e1532e69e1dbaf63d6ab3dd805cae | 16736 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-stdio-l1-1-0.dll | 52373f7c6cc27245635a4163f4502ed8 | 18272 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-string-l1-1-0.dll | 0222c83bdeb5f6998f0ba4c5296a5156 | 18784 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-time-l1-1-0.dll | 2d8fe86c92a45d998a281eefedba182d | 14688 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\api-ms-win-crt-utility-l1-1-0.dll | 1808a059cf85a1261f99022d0ddffafd | 12640 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\concrt140.dll | cd12471b295f6a1c66dcc9fc519eef5b | 317864 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbgeng.dll | 53a932b4f7819a9e62be4e84a2e808cd | 4327248 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\dbghelp.dll | 15ee5c7404fa5b6de0eb0c042474d3bf | 1369936 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140.dll | 6da7f4530edb350cf9d967d969ccecf8 | 566704 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_1.dll | 0832532fab0d5c949aa0c65169aa9d61 | 23944 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_2.dll | e35261e9f4478aabe736bb2269c20b59 | 186800 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_atomic_wait.dll | 4e81a05a4b996d180f811426c5e23278 | 57264 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\msvcp140_codecvt_ids.dll | c7e047cea075a9256916cfb83eaed1a6 | 21424 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\tbb12.dll | 123404fa3ab377e006e8bb777dc58b36 | 383856 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\ucrtbase.dll | deab9ba76ed239240014260fbce74a5b | 1036128 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vccorlib140.dll | 2d581d8598f4db0fc55b415b841c7544 | 335792 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140.dll | f34eb034aa4a9735218686590cba2e8b | 98224 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\Engine\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Binaries\Win64\vcruntime140_1.dll | 135359d350f72ad4bf716b764d39e749 | 37256 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Battle Pass Glitches.webm | b846e42b7caeadf1854f8739f4966e36 | 588065 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Contract Glitches.webm | 6c0a4b8cabcc30ae3e135a9af7a2df8b | 2729576 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:59 | [match] tx:E:\GAME\Tencent Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 hk:E:\GAME\Riot Games\VALORANT\live\ShooterGame\Content\Movies\Menu\Homescreen_E8A1_800.mp4 | 8c1b4ebecd4d973e7520a5eca76d4992 | 46811173 Bytes</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:show_md5_diff_for_valorant:71 | [match] 279 files | name match:0 | total size:171.2870855331421 MB</span><br><span class="line">[24-01-19 18:29:27] INFO:test.py:&lt;module&gt;:79 | [success]</span><br></pre></td></tr></table></figure></details>]]></content>
    
    
    <summary type="html">突然好奇，想看看valorant（无畏契约）的国服和港服文件有什么差异</summary>
    
    
    
    <category term="速通Python" scheme="https://blog.musnow.top/categories/%E9%80%9F%E9%80%9APython/"/>
    
    
    <category term="Python" scheme="https://blog.musnow.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【win】windows必装软件汇总</title>
    <link href="https://blog.musnow.top/posts/3861578416/"/>
    <id>https://blog.musnow.top/posts/3861578416/</id>
    <published>2024-01-18T09:30:00.000Z</published>
    <updated>2024-01-18T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下我自己使用windows电脑时必装的那些软件，每次配置新电脑这些软件都是必装。</p><p>欢迎评论区交流你常用的软件！</p><h1 id="1-生活日常"><a href="#1-生活日常" class="headerlink" title="1.生活日常"></a>1.生活日常</h1><ul><li>TIM（其实就是QQ，但是不装QQ，新出的QQ9也没有TIM好用）</li><li>微信</li><li>WPS（个人非常需要云同步，而且也充了会员）</li><li>腾讯会议（之前上网课用，现在是面试用）</li><li>网易邮箱大师（网页版老是让我重新登录，干脆下个客户端）</li><li>edge浏览器</li><li>火狐浏览器（备用）</li><li>火绒电脑管家</li><li>foobar2000（听歌）<a href="https://gitee.com/dream7180/foobox-cn">gitee.com&#x2F;dream7180&#x2F;foobox-cn</a></li><li>Adobe PR和PS（偶尔会用）</li><li>光影魔术手（简单处理图片）<a href="http://www.neoimaging.cn/">光影魔术手官方网站</a></li><li>完美解码（看视频用，其实就是potplayer）<a href="https://jm.wmzhe.com/">完美解码官方网站</a></li><li>偶尔用的上todesk和向日葵</li></ul><h1 id="2-软件开发"><a href="#2-软件开发" class="headerlink" title="2.软件开发"></a>2.软件开发</h1><ul><li>VS2019（C++，不过现在基本都是在linux上写代码了）</li><li>VSCODE</li><li>WSL2的CENTOS或UBUNTU</li><li>VMware（比virtualbox性能好太多了）</li><li>Tabby（ssh终端）<a href="https://tabby.sh/">Tabby - a terminal for a more modern age</a></li><li>Python3.10.x <a href="https://www.python.org/downloads/">Download Python | Python.org</a></li><li>nodejs v16.20.2（hexo需要）<a href="https://nodejs.org/dist/v16.20.2/">Index of &#x2F;dist&#x2F;v16.20.2&#x2F;</a></li><li>Git终端 <a href="https://git-scm.com/downloads">Git - Downloads</a></li></ul><h1 id="3-电脑优化和工具"><a href="#3-电脑优化和工具" class="headerlink" title="3.电脑优化和工具"></a>3.电脑优化和工具</h1><ul><li>Geek（绿色卸载软件） <a href="https://geekuninstaller.com/">Geek Uninstaller - the best FREE uninstaller</a></li><li>Bandzip v6.26（旧版本没有广告，可以关闭自动更新。新版虽然有广告，但完全不影响使用）<a href="https://www.bandisoft.com/bandizip/">Windows 版本的 Bandizip · 业内领先的压缩文件解决方案</a></li><li>ShanaEncoder v5.2.2.3 Chs（视频压缩软件）<a href="https://github.com/1265578519/ShanaEncoder/releases">Releases · 1265578519&#x2F;ShanaEncoder</a></li><li>Sanipaste（个人感觉特别好用，唯一缺少的就是长截图，一般都是TIM挂后台用QQ截图来截长屏）<a href="https://zh.snipaste.com/">Snipaste - 截图 + 贴图</a></li><li>Flash国际版（没有广告的flash，QQ需要使用）<a href="https://www.ittel.cn/archives/7327.html">Adobe Flash Player v34.0.0.277 国际版&#x2F;纯净版</a></li><li>MenuMgr_1.1_20130514（右键菜单管理工具，在联想软件商店里面下载）</li><li>图吧工具箱（很多电脑测试软件）<a href="https://www.tbtool.cn/">图吧工具箱 - 最纯净的硬件工具箱</a></li><li>FreeFileSync（文件夹同步和备份软件，用于本机上的两个硬盘备份资料，一个资料在两个盘上都存着）<a href="https://freefilesync.org/">FreeFileSync: Open Source File Synchronization &amp; Backup Software</a></li><li>Caesium Image Compressor（图片压缩软件）<a href="https://saerasoft.com/caesium">Caesium - Image Compressor</a></li><li>Everythings（搜索软件）<a href="https://www.voidtools.com/zh-cn/downloads/">下载 - voidtools</a></li><li>KeePass（密码管理，配合安卓APP <code>Keepass2Android</code> 和 Onedrive 进行多端同步）<a href="https://keepass.info/">KeePass Password Safe</a></li><li>EV录屏（没有水印和广告，录屏比较方便）<a href="https://www.ieway.cn/evcapture.html">EV录屏 - 免费高清无水印的屏幕录制软件</a></li><li>draw.io和xmind（都是画图软件）</li><li>闪豆下载器（下B站视频）</li><li>raidrive&#x2F;cloudrive（挂载云盘，但实际体验感觉不如直接用云盘web页面）<a href="https://www.clouddrive2.com/">CloudDrive - Home</a></li><li>EarTrumpet（便捷调控每个应用的音量，微软商店下载）</li></ul><h1 id="4-游戏"><a href="#4-游戏" class="headerlink" title="4.游戏"></a>4.游戏</h1><p>小心别下假平台了哦</p><ul><li>Steam客户端 <a href="https://store.steampowered.com/">欢迎来到 Steam</a></li><li>Epic客户端 <a href="https://store.epicgames.com/zh-CN/">Epic游戏商城</a></li><li>EA app（这个是在steam上买的EA游戏会捆绑下载的）</li><li>瓦罗兰特国服和港服（国服出了之后很少玩港服了，即便我国服0皮肤）</li><li>LOL（特别少玩）</li><li>逍遥模拟器（手游模拟器，用过的几个模拟器里面性能最好的）<a href="https://www.xyaz.cn/">逍遥安卓模拟器_安卓模拟器电脑版_安卓手游模拟器哪个好用_逍遥手机模拟器官网</a></li><li>雷神减速器（主要是便宜）<a href="https://www.leigod.com/">雷神网游加速器-专线加速游戏,按分钟计费可暂停,免费试用</a></li><li>parsec（远程控制，支持手柄）<a href="https://parsec.app/">Connect to Work or Games from Anywhere | Parsec</a></li><li>steam++（walt toolkits，微软商店可下载）</li><li>msi afterburner（性能监看）<a href="https://www.msi.com/Landing/afterburner/graphics-cards">Afterburner</a></li><li>DirectX-927（很多电脑都缺少这个依赖包，一些游戏就玩不了，目前遇到的是valorant港服缺少该包就无法玩）<a href="https://pan.baidu.com/s/1145Ll8vGtByMW6OKk6Zi2Q">百度网盘-提取码1067</a></li></ul><h1 id="5-笔记"><a href="#5-笔记" class="headerlink" title="5.笔记"></a>5.笔记</h1><ul><li>思源笔记 <a href="https://b3log.org/siyuan/">思源笔记 - 隐私优先的个人知识管理系统，支持 Markdown 排版、块级引用和双向链接</a></li><li>obsidian <a href="https://obsidian.md/">Obsidian - Sharpen your thinking</a></li><li>Typora <a href="https://typoraio.cn/">Typora 官方中文站</a></li><li>Picgo（博客图床）<a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo</a></li></ul><h1 id="6-其他"><a href="#6-其他" class="headerlink" title="6.其他"></a>6.其他</h1><ul><li>迅雷</li><li>qbittorrent&#x2F;motrix</li><li>tailscale</li></ul>]]></content>
    
    
    <summary type="html">博主个人使用windows时的必装软件</summary>
    
    
    
    <category term="电脑使用小贴士" scheme="https://blog.musnow.top/categories/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%B4%B4%E5%A3%AB/"/>
    
    
    <category term="windows" scheme="https://blog.musnow.top/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】hexo-butterfly主题添加装备展示页面</title>
    <link href="https://blog.musnow.top/posts/2383339565/"/>
    <id>https://blog.musnow.top/posts/2383339565/</id>
    <published>2024-01-14T08:03:00.000Z</published>
    <updated>2024-01-14T08:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在翻开往的时候看到了一位老哥的博客里面正好有这个教程，整了一下发现效果还不错！</p><ul><li><a href="https://blog.zhheo.com/p/de771c8e.html">Hexo的Butterfly魔改教程：我的装备，分享你在用的设备 | 张洪Heo</a></li><li><a href="https://b.leonus.cn/2022/custom.html">Hexo博客添加自定义css和js文件 | Leonus</a></li></ul><p>注：文中的代码部分均引用自原博客</p><h1 id="添加文件到hexo-butterfly主题中"><a href="#添加文件到hexo-butterfly主题中" class="headerlink" title="添加文件到hexo-butterfly主题中"></a>添加文件到hexo-butterfly主题中</h1><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>首先，魔改hexo主题最好是用git方式安装的主题，即主题的文件是在你的hexo目录的<code>themes</code>文件夹下，而不是用npm安装的主题（那样安装的主题是在node_modules下，换设备或者更新主题的时候修改会被覆盖）</p><h2 id="添加相关文件"><a href="#添加相关文件" class="headerlink" title="添加相关文件"></a>添加相关文件</h2><h3 id="添加pug文件"><a href="#添加pug文件" class="headerlink" title="添加pug文件"></a>添加pug文件</h3><p>在<code>themes/butterfly/layout/includes/page/equipment.pug</code>中写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#equipment</span><br><span class="line">  if site.data.equipment</span><br><span class="line">    each i in site.data.equipment</span><br><span class="line">      .equipment-item</span><br><span class="line">        h2.equipment-item-title= i.class_name</span><br><span class="line">        .equipment-item-description= i.description</span><br><span class="line">        .equipment-item-content</span><br><span class="line">          each item, index in i.equipment_list</span><br><span class="line">            .equipment-item-content-item</span><br><span class="line">              .equipment-item-content-item-cover</span><br><span class="line">                img.equipment-item-content-item-image(data-lazy-src=url_for(item.image) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;` alt=item.name)</span><br><span class="line">              .equipment-item-content-item-info</span><br><span class="line">                .equipment-item-content-item-name= item.name</span><br><span class="line">                .equipment-item-content-item-specification= item.specification</span><br><span class="line">                .equipment-item-content-item-description= item.description</span><br><span class="line">                .equipment-item-content-item-toolbar</span><br><span class="line">                  if item.link.includes(&#x27;https://&#x27;) || item.link.includes(&#x27;http://&#x27;)</span><br><span class="line">                    a.equipment-item-content-item-link(href= item.link, target=&#x27;_blank&#x27;) 详情</span><br><span class="line">                  else</span><br><span class="line">                    a.equipment-item-content-item-link(href= item.link, target=&#x27;_blank&#x27;) 查看文章</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加pug注册"><a href="#添加pug注册" class="headerlink" title="添加pug注册"></a>添加pug注册</h3><p>在<code>themes\butterfly\layout\page.pug</code>中添加如下修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;equipment&#x27;</span><br><span class="line">  include includes/page/equipment.pug</span><br></pre></td></tr></table></figure><p>我的butterfly主题是未魔改过的4.9.0版本，添加后的page.pug文件如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  #page</span><br><span class="line">    if top_img === false</span><br><span class="line">      h1.page-title= page.title</span><br><span class="line"></span><br><span class="line">    case page.type</span><br><span class="line">      when &#x27;tags&#x27;</span><br><span class="line">        include includes/page/tags.pug</span><br><span class="line">      when &#x27;link&#x27;</span><br><span class="line">        include includes/page/flink.pug</span><br><span class="line">      when &#x27;categories&#x27;</span><br><span class="line">        include includes/page/categories.pug</span><br><span class="line">      when &#x27;equipment&#x27;</span><br><span class="line">        include includes/page/equipment.pug</span><br><span class="line">      default</span><br><span class="line">        include includes/page/default-page.pug</span><br><span class="line"></span><br><span class="line">    if page.comments !== false &amp;&amp; theme.comments &amp;&amp; theme.comments.use</span><br><span class="line">      - var commentsJsLoad = true</span><br><span class="line">      !=partial(&#x27;includes/third-party/comments/index&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br></pre></td></tr></table></figure><h3 id="添加css文件和引用"><a href="#添加css文件和引用" class="headerlink" title="添加css文件和引用"></a>添加css文件和引用</h3><p>在<code>source</code>中创建一个equipment文件夹，方便定位新添加文件。在equipment文件夹中添加equipment.css文件。</p><p>该文件的完整路径为<code>source/equipment/equipment.css</code>，内容如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 我的装备 */</span></span><br><span class="line"><span class="selector-class">.equipment-item-content</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">8px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">25%</span> - <span class="number">12px</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always);</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-card-bg);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--heo-shadow-border);</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1200px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">12px</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.equipment-item-content-item</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-info</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span> <span class="number">16px</span> <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-name</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">width</span>: fit-content;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-specification</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-description</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    -webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">    -webkit-box-orient: vertical;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.equipment-item-content-item-link</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-gray-op);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.equipment-item-content-item-link</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-main);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-white);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h2</span><span class="selector-class">.equipment-item-title</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-description</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--heo-secondtext);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-cover</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--heo-secondbg);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">img</span><span class="selector-class">.equipment-item-content-item-image</span> &#123;</span><br><span class="line">    <span class="attribute">object-fit</span>: cover;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">div</span><span class="selector-id">#equipment</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">26px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.equipment-item-content-item-toolbar</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-class">.bber-reply</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在butterfly的配置文件中添加css的引用，这里我添加到了head部分中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># 装备页面的css</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/equipment/equipment.css?1&quot;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加index文件"><a href="#添加index文件" class="headerlink" title="添加index文件"></a>添加index文件</h3><p>在<code>source/equipment</code>中添加<code>index.md</code>文件，写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的装备</span><br><span class="line">date: 2020-07-22 00:45:12</span><br><span class="line">aside: false</span><br><span class="line">type: equipment</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这里的标题可以根据你的需要修改。</p><h3 id="添加data文件（配置）"><a href="#添加data文件（配置）" class="headerlink" title="添加data文件（配置）"></a>添加data文件（配置）</h3><p>随后就是data文件的添加了，这部分和link里面的友链配置很类似。</p><p>在<code>source/data</code>文件夹下添加<code>equipment.yml</code>文件，并写入如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">生产力</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">提升自己生产效率的硬件设备</span></span><br><span class="line">  <span class="attr">equipment_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">翻新</span> <span class="string">MacBookPro</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">M1Pro</span> <span class="string">32G</span> <span class="string">/</span> <span class="string">1TB</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">屏幕显示效果好、色彩准确、对比度强、性能强劲、续航优秀。可以用来开发和设计。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/YnW8cc2150681686120255749.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://blog.zhheo.com/p/daebc472.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">iPhone</span> <span class="number">13</span> <span class="string">Pro</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">白色</span> <span class="string">/</span> <span class="string">256G</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">第一代支持promotion的iPhone，A15性能优秀。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/TofzQM2219061686120261484.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.apple.com/by/iphone-13-pro/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">米物多模键盘85</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">无线蓝牙</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">一款可以同时连接多个设备的键盘，适配windows和mac，按键中间空隙合适，圆形按键比较好看。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/1OXX4d2179068168614817390.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://item.jd.com/100012980718.html</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">出行</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">用来出行的实物及设备</span></span><br><span class="line">  <span class="attr">equipment_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">航宇之星双肩包</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">标准版</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">造型炫酷，包的容量非常大，还有魔术贴位置，我贴上了鸡哥的头像。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/20jaBU2179061686121157367.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://detail.meizu.com/item/pasasjb.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">魅族重塑斜挎包</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">标准版</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">一款轻便小巧的斜挎包，虽然体积比较小，能放的东西少，但是非常好看。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/wCvvZ82359068686121235468.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://detail.meizu.com/item/pandaerxkb.html</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">素乐W12</span> <span class="string">磁吸充电宝</span></span><br><span class="line">      <span class="attr">specification:</span> <span class="string">布朗熊</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">尺寸非常的小，在吸13pro的时候没有任何多余出来的部分。支持lighting充电。</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">https://p.zhheo.com/76rbNh2049068686121144539.png!cover</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://item.jd.com/100045568421.html</span></span><br></pre></td></tr></table></figure><p>注意，这里面的图片链接都是源博主heo的博客链接，它们都有防盗链，所以在你的本地测试中应该是无法访问这些图片的，这都是正常情况。你应该根据自己的需要将其替换成你自己的图片。</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>效果还是很不错的，虽然没有原博主使用的主题中那么炫酷，但作为一个展示页面肯定是够用啦！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/07c0e034a4f0bef1e1aa76c09a55baff.png" alt="image.png"></p><p>这里我发现了一个问题，就是整个框框没有描边，边界感很差，甚至说看不到哪里是边界。为了更好的辨认每一个框框，我们可以修改一下原博主的css文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.equipment-item-content-item</span>&#123;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#585858</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将原本的css文件中如上部分里面的border修改一下就可以了，颜色根据你的喜好调整。有了描边之后，看起来会舒服一些！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/65a39a71c2393.png"></p><p>改成我自己的图片后的最终效果</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/65a3a66b3b50c.png"></p>]]></content>
    
    
    <summary type="html">hexo-butterfly主题添加装备展示页面</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【C++】std::chrono::duration的含义和用法</title>
    <link href="https://blog.musnow.top/posts/2910129003/"/>
    <id>https://blog.musnow.top/posts/2910129003/</id>
    <published>2024-01-12T01:30:30.000Z</published>
    <updated>2024-01-12T01:30:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h1><p><code>std::choro::duration</code>是C++11引入的一个用于计算时间滴答周期的类，与之配合使用的是<code>std::ratio</code>类，该类是一个分数类，为精确表示分数提供了一个方式。</p><h1 id="2-std-ratio"><a href="#2-std-ratio" class="headerlink" title="2.std::ratio"></a>2.std::ratio</h1><p>我们知道，对于计算机来说，使用浮点类型是会有精度缺失的。所以<code>std::ratio</code>类便提供了分子和分母，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    std::<span class="type">intmax_t</span> Num,</span><br><span class="line">    std::<span class="type">intmax_t</span> Denom = <span class="number">1</span></span><br><span class="line">&gt; <span class="keyword">class</span> ratio;</span><br></pre></td></tr></table></figure><p>该类的模板定义如下，Num是分子，Denom是分母。不传入分母的时候，分母默认为1。</p><p>假设我们需要表示1秒的千分之一（即一毫秒）就可以用如下方式来定义一个ratio</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> ratio&lt;<span class="number">1</span>,<span class="number">1000</span>&gt; milli;</span><br></pre></td></tr></table></figure><p>代表<code>1/1000</code>这个分数；</p><h2 id="cpp中自带的几个ratio"><a href="#cpp中自带的几个ratio" class="headerlink" title="cpp中自带的几个ratio"></a>cpp中自带的几个ratio</h2><p>为了方便标识单位之间的差距（单位换算），cpp中预定义了一些常用的ratio</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">typedef ratio&lt;1,       1000000000000000000&gt; atto;</span><br><span class="line">typedef ratio&lt;1,          1000000000000000&gt; femto;</span><br><span class="line">typedef ratio&lt;1,             1000000000000&gt; pico;</span><br><span class="line">typedef ratio&lt;1,                1000000000&gt; nano;</span><br><span class="line">typedef ratio&lt;1,                   1000000&gt; micro;</span><br><span class="line">typedef ratio&lt;1,                      1000&gt; milli;</span><br><span class="line">typedef ratio&lt;1,                       100&gt; centi;</span><br><span class="line">typedef ratio&lt;1,                        10&gt; deci;</span><br><span class="line">typedef ratio&lt;                       10, 1&gt; deca;</span><br><span class="line">typedef ratio&lt;                      100, 1&gt; hecto;</span><br><span class="line">typedef ratio&lt;                     1000, 1&gt; kilo;</span><br><span class="line">typedef ratio&lt;                  1000000, 1&gt; mega;</span><br><span class="line">typedef ratio&lt;               1000000000, 1&gt; giga;</span><br><span class="line">typedef ratio&lt;            1000000000000, 1&gt; tera;</span><br><span class="line">typedef ratio&lt;         1000000000000000, 1&gt; peta;</span><br><span class="line">typedef ratio&lt;      1000000000000000000, 1&gt; exa;</span><br></pre></td></tr></table></figure><p>我们可以用类作用域符号<code>::</code>来访问到这些比例的分子和分母。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; std::centi::num &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; std::centi::den &lt;&lt; std::endl;</span><br><span class="line"><span class="comment">// 运行结果为 1/100</span></span><br></pre></td></tr></table></figure><h1 id="3-std-chrono-duration"><a href="#3-std-chrono-duration" class="headerlink" title="3.std::chrono::duration"></a>3.std::chrono::duration</h1><p>这个类是用来表示一个时间的周期&#x2F;长度的，其基于1s为基本单位，用ratio来表示和1s相比的偏移量。</p><p>在cppreference上的介绍如下</p><blockquote><p>Class template std::chrono::duration represents a time interval.<br>It consists of a count of ticks of type Rep and a tick period, where the tick period is a compile-time rational constant representing the number of seconds from one tick to the next.<br>The only data stored in a duration is a tick count of type Rep. If Rep is floating point, then the duration can represent fractions of ticks. Period is included as part of the duration’s type, and is only used when converting between different durations.</p></blockquote><p>该类的定义如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Rep</span>,</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Period</span> = std::ratio&lt;<span class="number">1</span>&gt;</span><br><span class="line">&gt; <span class="keyword">class</span> duration;</span><br></pre></td></tr></table></figure><p>其中Rep是一个变量类型，可以传入int、float、double等类型；</p><p>Period是一个<code>std::ratio</code>，可以传入基于一秒的比例，这个比例就代表了时间的单位;</p><h2 id="cpp中自带的几个chrono"><a href="#cpp中自带的几个chrono" class="headerlink" title="cpp中自带的几个chrono"></a>cpp中自带的几个chrono</h2><p>为了方便我们使用，cpp中自带了几个用于表示时间的chrono的定义</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/// nanoseconds</span></span><br><span class="line">    <span class="keyword">using</span> nanoseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, nano&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// microseconds</span></span><br><span class="line">    <span class="keyword">using</span> microseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, micro&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// milliseconds</span></span><br><span class="line">    <span class="keyword">using</span> milliseconds= duration&lt;_GLIBCXX_CHRONO_INT64_T, milli&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// seconds</span></span><br><span class="line">    <span class="keyword">using</span> seconds= duration&lt;_GLIBCXX_CHRONO_INT64_T&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// minutes</span></span><br><span class="line">    <span class="keyword">using</span> minutes= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt; <span class="number">60</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// hours</span></span><br><span class="line">    <span class="keyword">using</span> hours= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">3600</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> __cplusplus &gt; 201703L</span></span><br><span class="line">    <span class="comment">/// days</span></span><br><span class="line">    <span class="keyword">using</span> days= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">86400</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// weeks</span></span><br><span class="line">    <span class="keyword">using</span> weeks= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">604800</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// years</span></span><br><span class="line">    <span class="keyword">using</span> years= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">31556952</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// months</span></span><br><span class="line">    <span class="keyword">using</span> months= duration&lt;_GLIBCXX_CHRONO_INT64_T, ratio&lt;<span class="number">2629746</span>&gt;&gt;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// C++20</span></span></span><br></pre></td></tr></table></figure><p>代码里面出现的宏定义其实就是<code>int64_t</code>的别名。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">define</span> _GLIBCXX_CHRONO_INT64_T int64_t</span></span><br></pre></td></tr></table></figure><p>这些变量之前在学习C++线程休眠的时候就已经遇到过了，从中也能看到<code>std::ratio</code>在chrono中代表的比例关系，比如一小时是3600秒，那么就需要传入比例<code>std::ratio&lt;3600,1&gt;</code>，上面的代码里面省略了1是因为ratio的分母缺省值就是1。</p><h2 id="代码示例1"><a href="#代码示例1" class="headerlink" title="代码示例1"></a>代码示例1</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">int</span>, std::ratio&lt;<span class="number">1</span>, <span class="number">100000000</span>&gt;&gt; shakes;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">int</span>, std::centi&gt; jiffies;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">float</span>, std::ratio&lt;<span class="number">12096</span>,<span class="number">10000</span>&gt;&gt; microfortnights;</span><br><span class="line">    <span class="keyword">typedef</span> std::chrono::duration&lt;<span class="type">float</span>, std::ratio&lt;<span class="number">3155</span>,<span class="number">1000</span>&gt;&gt; nanocenturies;</span><br><span class="line"> </span><br><span class="line">    std::<span class="function">chrono::seconds <span class="title">sec</span><span class="params">(<span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;1 second is:\n&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;shakes&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; shakes\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;jiffies&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; jiffies\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;microfortnights&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; microfortnights\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; std::chrono::<span class="built_in">duration_cast</span>&lt;nanocenturies&gt;(sec).<span class="built_in">count</span>()</span><br><span class="line">              &lt;&lt; <span class="string">&quot; nanocenturies\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码示例运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++ test.cpp -o test -std=c++17 &amp;&amp; ./test</span><br><span class="line">1 second is:</span><br><span class="line">100000000 shakes</span><br><span class="line">100 jiffies</span><br><span class="line">0.82672 microfortnights</span><br><span class="line">0.316957 nanocenturies</span><br></pre></td></tr></table></figure><p>我们能看到，第一个里面传入的比例是<code>1/100000000</code>，这就代表1秒包含了100000000个shakes，假设我们需要一个休眠<code>1/100000000</code>秒的操作，就可以通过<code>std::this_thread::sleep_for</code>和这个shakes变量来进行精确的定时休眠。</p><h2 id="代码示例2"><a href="#代码示例2" class="headerlink" title="代码示例2"></a>代码示例2</h2><p>让当前线程休眠100毫秒，有几种不同的方式，都是等价的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">milliseconds</span>(<span class="number">100</span>)); </span><br><span class="line">    <span class="comment">// or </span></span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">duration</span>&lt;<span class="type">long</span> <span class="type">long</span>, std::milli&gt;(<span class="number">100</span>)); </span><br><span class="line">    <span class="comment">// or   </span></span><br><span class="line">    <span class="comment">// typedef ratio&lt;1, 1000&gt; milli; </span></span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::duration&lt;<span class="type">long</span> <span class="type">long</span>, std::ratio&lt;<span class="number">1</span>, <span class="number">1000</span>&gt; &gt;(<span class="number">100</span>)); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="4-std-chrono-duration-cast"><a href="#4-std-chrono-duration-cast" class="headerlink" title="4.std::chrono::duration_cast"></a>4.std::chrono::duration_cast</h1><p>为了方便在不同的时间单位之间进行转换，CPP提供了一个特殊的cast来进行处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::chrono::<span class="built_in">duration_cast</span>&lt;目标类型&gt;(源类型对象);</span><br></pre></td></tr></table></figure><p>比如可以用下面的代码将3秒转换为毫秒，注意圆括号里面的传参是源类型的一个对象，不能只传入类型（那样就不是变量类型转换了）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;chrono&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::chrono::milliseconds ms = std::chrono::<span class="built_in">duration_cast</span>&lt;std::chrono::milliseconds&gt;(std::chrono::<span class="built_in">minutes</span>(<span class="number">3</span>));</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;3 minutes equals to &quot;</span> &lt;&lt; ms.<span class="built_in">count</span>() &lt;&lt; <span class="string">&quot; milliseconds\n&quot;</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++ test.cpp -o test -std=c++17 &amp;&amp; ./test</span><br><span class="line">3 minutes equals to 180000 milliseconds</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>基本要了解的内容就这些了。</p><p>参考文档</p><ul><li><a href="https://www.cnblogs.com/bianchengnan/p/9478638.html">C++新标准之std::chrono::duration - BCN - 博客园</a></li><li><a href="https://tool.oschina.net/uploads/apidocs/cpp/en/cpp/chrono/duration.html">std::chrono::duration - cppreference.com</a></li><li><a href="https://tool.oschina.net/uploads/apidocs/cpp/en/cpp/numeric/ratio/ratio.html">std::ratio - cppreference.com</a></li></ul>]]></content>
    
    
    <summary type="html">std中chrono::duration的含义和用法</summary>
    
    
    
    <category term="遇见C++" scheme="https://blog.musnow.top/categories/%E9%81%87%E8%A7%81C/"/>
    
    
    <category term="Cpp" scheme="https://blog.musnow.top/tags/Cpp/"/>
    
    <category term="Cpp11" scheme="https://blog.musnow.top/tags/Cpp11/"/>
    
  </entry>
  
  <entry>
    <title>【博客】个人独立博客站点在写博客的时候应该注意什么？</title>
    <link href="https://blog.musnow.top/posts/2118926128/"/>
    <id>https://blog.musnow.top/posts/2118926128/</id>
    <published>2024-01-11T06:49:00.000Z</published>
    <updated>2024-01-11T06:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>个人独立博客站点在写博客的时候应该注意什么？</p></blockquote><p>这个问题是我对技术类个人博客写作时的纯主观见解，各位就图一乐看看，谢谢。</p><h2 id="1-把读者当作第一次看相关技术文章"><a href="#1-把读者当作第一次看相关技术文章" class="headerlink" title="1.把读者当作第一次看相关技术文章"></a>1.把读者当作第一次看相关技术文章</h2><p>这一点其实<strong>很难</strong>做到，包括我在本站写的很多博客都<strong>并没有做到这一点</strong>。</p><p>所谓把读者当作第一次看相关技术文章，举个例子：你写了一篇部署某某docker容器的教程，那么理应在博客中涉及如何在Linux主机上安装docker的教程部分。</p><blockquote><p>这个安装docker的教程部分可以直接添加至文章内，或者单独写一篇文章，把链接放在该文开头。</p></blockquote><p>这样做有什么好处？除了让别人能点击链接看你的站点里面的另外一篇文章，更重要的是保证读者在看你这篇文章的时候，不需要去额外搜索其他的东西。</p><p>之前在<a href="https://blog.musnow.top/posts/4065446782">WSL安装CENTOS8</a>的博客中我就吐槽过这个问题。我找到的资料原文作者图文不对应，用着win11的电脑写着win10的步骤（步骤是错的），整个设置和开启的过程也没有图片，很让人无语。</p><p>对于使用windows系统比较熟练，知道怎么找设置选项的读者来说，这并不是神马大问题。但是对于很多刚入门编程学习的小白来说，图文不对只会让人感到困惑，最终还是得去搜其他资料，找怎么在win11里面开启wsl。</p><p>而原博主只需要多花30秒把那个win10的步骤改成win11的，就能节省读者去搜索另外一篇博客的时间。</p><p>同理，如果我想使用minio这个项目，发现最好的部署方式是docker部署，但我的主机上没有docker，此时我就得搜索两篇博客</p><ol><li>如何在linux上安装docker</li><li>如何在docker里面安装minio</li></ol><p>但实际查询资料的时候，以我个人为例，我都是先搜到第二个问题，再回过头去搜第一个问题的。如果我搜到的第二个问题的博客里面，作者引用或者介绍了如何安装docker的方式，那么我就不需要去额外搜索第一个问题了，这便是给读者节省了时间。</p><h2 id="2-减少博客里面的图片数量"><a href="#2-减少博客里面的图片数量" class="headerlink" title="2.减少博客里面的图片数量"></a>2.减少博客里面的图片数量</h2><p>这个是根据不同类型的博客而言的， 对于很多教程类博客而言，图片&#x2F;步骤截图是不可或缺的。</p><p>但是对于Linux类、代码编程类的博客而言，完全可以用代码块来替代图片。比如简单测试程序的运行结果，完全没必要截图，而是可以直接用代码块展示结果。在一些情况下可以做到整篇博客完全不需要截图。</p><p>减少图片数量的好处：</p><ol><li>用户加载博客的时间缩短；</li><li>图床压力减少；</li><li>博客“失效”概率降低；</li></ol><p>所谓博客失效，就是有些教程博客中的图片不见或者加载不出来了，直接导致这篇博客废掉了。如果博客中图片数量较少，对博客有效性的影响就更低，博客失效的概率也就降低了。</p><h2 id="3-避免豆腐块"><a href="#3-避免豆腐块" class="headerlink" title="3.避免豆腐块"></a>3.避免豆腐块</h2><p>这其实是从学生阶段学到的东西，即写任何长段文字的时候都应该<strong>分点分段</strong>。</p><p>有些文章一上去整个豆腐块扒在那里，没有分段，看的巨难受。更有甚者连标点都没几个……</p><h2 id="4-拒绝半途而废"><a href="#4-拒绝半途而废" class="headerlink" title="4.拒绝半途而废"></a>4.拒绝半途而废</h2><p>有些博文非常奇怪啊，写到一半戛然而止，非常怀疑是爬虫没有把后半部分爬出来……</p><h2 id="5-说清楚版本号"><a href="#5-说清楚版本号" class="headerlink" title="5.说清楚版本号"></a>5.说清楚版本号</h2><p>环境部署、程序安装等等教程的时候，一定要在博客里面写清楚你当前使用的系统的版本号，很多时候一些不兼容问题就是版本号对不上导致的。</p><h2 id="6-写明结果"><a href="#6-写明结果" class="headerlink" title="6.写明结果"></a>6.写明结果</h2><p>最简单的一个例子，leetcode的一篇题解博客，你应该给出leetcode通过的截图。我就遇到过题解里面思路啪啪啪一顿输出，结果最终的代码复制粘贴过去都没办法通过的。</p><p>代码没办法通过可能是leetcode更改了测试用例，也有可能是题目要求有变化。</p><p>如果你在文章里面贴了leetcode通过截图，读者就不会把问题怀疑到你身上。但如果没有，我就得吐槽一下：“怎么有人代码都没办法通过还好意思发题解的啊？”</p><p>写明结果，避免误会。有头有尾才能令人信服。</p><h2 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h2><p>暂时就想到这么多，后续能想到其他的再来补充。</p>]]></content>
    
    
    <summary type="html">个人独立博客站点在写博客的时候应该注意什么？谈谈我的个人想法</summary>
    
    
    
    <category term="随便写写" scheme="https://blog.musnow.top/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
    
    
    <category term="博客" scheme="https://blog.musnow.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>【2024】新年快乐！</title>
    <link href="https://blog.musnow.top/posts/2404659746/"/>
    <id>https://blog.musnow.top/posts/2404659746/</id>
    <published>2023-12-31T16:00:00.000Z</published>
    <updated>2023-12-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>给所有阅读本站文章的朋友们道一声，2024 新年快乐！</p><h2 id="新年目标"><a href="#新年目标" class="headerlink" title="新年目标"></a>新年目标</h2><p>新年新目标</p><ul><li><input disabled="" type="checkbox"> 完成一个新的个人项目（cpp）</li><li><input disabled="" type="checkbox"> 填mysql博客的坑（之前没有写完）</li><li><input disabled="" type="checkbox"> 填cpp哈希、B树、图等数据结构博客的坑</li><li><input disabled="" type="checkbox"> 学习redis</li><li><input disabled="" type="checkbox"> 学习docker</li></ul><p>更多的目标就不记录啦，学完这些差不多就要准备暑期实习或者是2024的秋招了，祝我好运吧！</p><ul><li><input disabled="" type="checkbox"> 拿到一个中大厂的offer</li></ul><p>也希望大家在2024能心想事成哦！</p>]]></content>
    
    
    <summary type="html">新年快乐，新年新目标</summary>
    
    
    
    <category term="随便写写" scheme="https://blog.musnow.top/categories/%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99/"/>
    
    
    <category term="随笔" scheme="https://blog.musnow.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】使用cloudflare pages自动化部署hexo</title>
    <link href="https://blog.musnow.top/posts/1673796161/"/>
    <id>https://blog.musnow.top/posts/1673796161/</id>
    <published>2023-12-30T03:53:00.000Z</published>
    <updated>2023-12-30T03:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将教您使用cloudflare pages来白嫖部署hexo博客。</p><h1 id="1-注册cloudflare"><a href="#1-注册cloudflare" class="headerlink" title="1.注册cloudflare"></a>1.注册cloudflare</h1><p>这部分就省略了，用邮箱注册就可以了</p><p>cloudflare pages的免费版本功能如下：</p><ul><li>并发构建数：1（如果有多个pages，同一时刻只能进行其中一个的构建）</li><li>每月构建数：500（每个月只能帮你构建500次）</li><li>自定义域名：100个</li><li>一个pages最多20,000个文件</li><li>最大单个文件限制：25MB</li><li>每日限制函数请求数：100,000次（超出后会失败）</li><li>静态文件请求次数：无限</li></ul><p>这些限制对于一个过气（压根没人看）的个人博客来说绰绰有余了，而且cloudflare的防护能力在哪里，被盗刷访问量的几率并不大。而且静态文件的访问次数是没有做任何限制的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/121a43bdac3a64ed8fae7f5e34054a58.png" alt="image.png"></p><h1 id="2-配置cloudflare-pages"><a href="#2-配置cloudflare-pages" class="headerlink" title="2.配置cloudflare pages"></a>2.配置cloudflare pages</h1><blockquote><p>参考官方文档：<a href="https://developers.cloudflare.com/pages/framework-guides/deploy-a-hexo-site/">Deploy a Hexo site · Cloudflare Pages docs</a><br>请注意，官方文档中的部署命令有错误！</p></blockquote><p>在你的账户主页，点击左侧的<code>workers &amp; pages</code>，随后点击页面上的Pages</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/26ef2613c1017dd5d58251da57455cf1.png" alt="image.png"></p><p>随后点击<code>connect to git</code>，绑定你的GitHub或者Gitlab账户。我选择绑定GitHub，这里的绑定操作就点几下的事情（我忘记截图了）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/b880b8fbde854fabf636a37aa4cbf350.png" alt="image.png"></p><p>绑定了账户后可以在这里看到你的仓库。我的hexo在github上有两个仓库，一个是hexo源配置的仓库，包括md源文件和主题等配置项，另外一个是<code>github.io</code>静态文件的仓库，是从本地使用<code>hexo d</code>命令推送到github上的。这里要选择的应该是hexo原配置仓库，这样你的md文件有变动就会触发更新，而<strong>不需要</strong>手动执行<code>hexo d</code>；</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/21d34f7229729c691158a20f7c9011d5.png" alt="image.png"></p><p>选择了之后，会弹出来让你选择分支、部署命令、发布页面</p><ul><li>分支：根据你自己的情况选择</li><li>Framework perset：这里面没有hexo，保留为None即可</li><li>部署命令：<code>npm run build</code></li><li>发布页面：public</li></ul><p>配置如下图所示</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/0dba6b6bba9866f17fb46f7038a761dc.png" alt="image.png"></p><p>请注意，在cf的官方文档里面，提到部署命令使用<code>hexo generate</code>，这是错误的！因为该命令会报错找不到hexo，无法正常部署！如下便是我依照官方文档使用了<code>hexo generate</code>命令之后的错误输出，报错了<code>hexo: not found</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">11:50:19.363Some issues need review, and may require choosing</span><br><span class="line">11:50:19.363a different dependency.</span><br><span class="line">11:50:19.363</span><br><span class="line">11:50:19.363Run `npm audit` for details.</span><br><span class="line">11:50:19.383Executing user command: hexo generate</span><br><span class="line">11:50:19.391/bin/sh: 1: hexo: not found</span><br><span class="line">11:50:19.393Failed: Error while executing user command. Exited with error code: 127</span><br><span class="line">11:50:19.400Failed: build command exited with code: 1</span><br><span class="line">11:50:20.318Failed: error occurred while running build command</span><br></pre></td></tr></table></figure><p>使用<code>npm run build</code>就能正常部署，稍等几分钟你就能获得一个链接，博客就部署成功了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/1c9b8ffb986a339743d2a77b435f5cae.png" alt="image.png"></p><p>点击<code>Custom domains</code>来配置你的自定义域名，因为我的主域名并没有在cloudflare上使用，所以这里得选择右侧的<code>my dns provider</code>来配置CNAME解析。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/230c4ea14e1c6b459371f23fccd61c8b.png" alt="image.png"></p><p>去你的域名控制台添加对应CNAME即可，添加CNAME解析后，点击下方的<code>check DNS records</code>验证是否配置成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/65555144cd179ce2be9ada8298fadad5.png" alt="image.png"></p><p>成功了之后你就可以用自定义域名来访问这个cloudflare pages了，而且ssl证书也会自动部署，不需要我们做任何额外操作。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>cf的这个配置还是挺简单的，不过有个缺点就是国内cf的访问速度很捉急，甚至有可能打不开。不过hexo静态博客的优势在于我们可以弄一大堆镜像站，这样主站挂了也不担心😜。</p><p>如果你是本站的访问者，本站的站点分布如下，只需要在域名的blog后面加个数字即可，还是很好记住的。如果哪天你发现主站打不开了，可以试试其他镜像站，总有一个能打开的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">blog.msunow.top   主站（又拍云CDN）</span><br><span class="line">blog1.musnow.top  netlify部署（主站回源站）</span><br><span class="line">blog2.musnow.top  vercel部署</span><br><span class="line">blog3.musnow.top  cloudflare pages部署</span><br><span class="line">musnows.github.io</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用cloudflare pages自动化部署hexo</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
    <category term="cloudflare" scheme="https://blog.musnow.top/tags/cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】hexo-butterfly主题添加非主站提示</title>
    <link href="https://blog.musnow.top/posts/3865345902/"/>
    <id>https://blog.musnow.top/posts/3865345902/</id>
    <published>2023-12-29T13:42:00.000Z</published>
    <updated>2023-12-29T14:42:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>因为hexo可以很方便的在多个平台上免费部署，为了让自己的博客能uptime更久一段时间，很多老哥都和我一样，把自己的hexo博客在好多个平台上都部署了一份。</p><p>但是我一直想要一个功能，就是在别人访问的不是主站点的时候，提示他们，并让他们帮你查查主站是不是down了。这个功能即本文标题所述的“非主站提醒”</p><h2 id="js脚本实现"><a href="#js脚本实现" class="headerlink" title="js脚本实现"></a>js脚本实现</h2><p>其实实现起来并不复杂，一个js脚本就可以实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 直接定义允许的域名</span></span><br><span class="line">    <span class="keyword">const</span> allowedDomain = <span class="string">&quot;blog.musnow.top&quot;</span>;  <span class="comment">// 替换为你的主站域名</span></span><br><span class="line">    <span class="comment">// 获取当前页面的域名</span></span><br><span class="line">    <span class="keyword">const</span> currentDomain = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hostname</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查域名是否匹配</span></span><br><span class="line">    <span class="keyword">if</span> (currentDomain !== allowedDomain) &#123;</span><br><span class="line">        <span class="comment">// 创建横幅提醒</span></span><br><span class="line">        <span class="keyword">const</span> banner = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        banner.<span class="property">id</span> = <span class="string">&quot;domainMismatchBanner&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态生成链接</span></span><br><span class="line">        <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        link.<span class="property">href</span> = <span class="string">&quot;https://&quot;</span> + allowedDomain; <span class="comment">// 指向主站的链接</span></span><br><span class="line">        link.<span class="property">target</span> = <span class="string">&quot;_blank&quot;</span>;  <span class="comment">// 在新窗口或标签页中打开链接</span></span><br><span class="line">        link.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;#b8dbff&quot;</span>;</span><br><span class="line">        link.<span class="property">style</span>.<span class="property">textDecoration</span> = <span class="string">&quot;underline&quot;</span>;</span><br><span class="line">        link.<span class="property">innerText</span> = <span class="string">&quot;主站&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将链接添加到横幅内容中</span></span><br><span class="line">        banner.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;您当前访问的是镜像站，如果&quot;</span>));</span><br><span class="line">        banner.<span class="title function_">appendChild</span>(link);</span><br><span class="line">        banner.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(<span class="string">&quot;无法访问，请联系站长，感谢！&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将横幅应用CSS样式</span></span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&quot;#fb7070&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;#fff&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">textAlign</span> = <span class="string">&quot;center&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&quot;3px&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">bottom</span> = <span class="string">&quot;0&quot;</span>;  <span class="comment">// 将top改为bottom</span></span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">        banner.<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;1000&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将横幅添加到body</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(banner);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把这个脚本复制，在hexo配置目录的<code>source</code>文件夹下创建一个<code>js</code>文件夹，将该脚本命名为<code>domain_check.js</code>并放入文件夹。</p><p>随后使用hexo-butterfly自带的head和bottom注入功能来引用这个脚本，建议在bottom里面引用。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line"><span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/domain_check.js&quot;&gt;&lt;/script&gt;</span> <span class="comment"># 检查域名是否正确</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>效果如下，当访问主站的时候，不会有提示。当访问blog1这个镜像站的时候，就会有底部横幅提示。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/c206a11cd20c1ed3c2c53426af98f8cf.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/3c9b5b103312292c4291ea7227c9d3c8.png" alt="image.png"></p><p>手机上的效果也不差，对于一个提示来说足够了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/613c2fdcae443442a359b29d7a09e097.jpg" alt="Screenshot_20231229_214855.jpg"></p>]]></content>
    
    
    <summary type="html">给hexo-butterfly主题添加非主站提示</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>【网络】P2P打洞原理</title>
    <link href="https://blog.musnow.top/posts/725561575/"/>
    <id>https://blog.musnow.top/posts/725561575/</id>
    <published>2023-12-27T08:40:00.000Z</published>
    <updated>2024-01-18T12:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><p>如果你折腾过NAS或者BT下载等等玩意，可能听说过“P2P打洞”这一技术名词。简单来说，P2P打洞可以让我们直接在外网访问内网的设备，从而让没有公网IP的家庭设备也能获得“公网直连”的速度。</p><p>比如绿联、极空间等国产NAS的客户端，在外网访问的时候，都会先尝试P2P打洞让你和你的NAS实现P2P直连，打洞失败的时候才会采用服务器转发的方式；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P2P打洞后：你的当前设备和家里的NAS直接通信</span><br><span class="line">采用服务器转发：报文从家里NAS - 服务器 - 你的当前设备</span><br></pre></td></tr></table></figure><p>因为服务器转发的速度直接依赖于服务器的出口带宽，所以使用服务器转发的用户越多，速度也就越慢，有的时候你会发现服务器转发的速度甚至不如没开会员的某度云盘。</p><h1 id="前置技术了解"><a href="#前置技术了解" class="headerlink" title="前置技术了解"></a>前置技术了解</h1><p>在学习P2P打洞之前，你需要了解以下知识点。注意，本文只是对P2P打洞的<strong>简单理解和说明</strong>，深入了解底层原理请自行百度其他更详细的文章！</p><h2 id="什么是P2P？"><a href="#什么是P2P？" class="headerlink" title="什么是P2P？"></a>什么是P2P？</h2><p>P2P即 Peer to Peer，是一种对等连接方式，纯P2P架构包含如下内容</p><ul><li>没有总是在线的服务器</li><li>任意端之间直接通信</li><li>对等方之间可以间断链接，并可以动态改变IP地址</li></ul><p>P2P技术的实际的用例如下：</p><ul><li>文件分发（BT下载）</li><li>流媒体</li><li>VolP</li><li>内网穿透式访问（建立P2P链接，直接和内网主机通信）即本文即将要讲述的P2P打洞。</li></ul><h2 id="NAT类型"><a href="#NAT类型" class="headerlink" title="NAT类型"></a>NAT类型</h2><p>参考本站 <a href="https://blog.musnow.top/posts/3482559497">IP层和数据链路层</a> 博客中4.3节对NAT技术的解析。</p><h3 id="地址限制锥形NAT"><a href="#地址限制锥形NAT" class="headerlink" title="地址限制锥形NAT"></a>地址限制锥形NAT</h3><p>所谓地址限制锥形NAT，即NAT映射之后的外网端口和IP地址对请求具有一定的限制，体现为它只允许已建立链接的主机与之进行通信。</p><ul><li>局域网主机C需要和公网服务器S1进行通信</li><li>局域网主机C发送请求报文，通过运营商路由器转发，抵达S1服务器</li><li>这个过程中每一层的路由器都建立了一个NAT转发表</li><li>如果是限制锥形NAT，运营商的路由器将会限制该NAT地址的外网访问IP地址：<ul><li>只有S1服务器发来的报文能被正常往内网转发（端口不限制），发送给给局域网主机C；</li><li>其他公网服务器（和S1不同IP地址）如果企图向该NAT地址发送报文，会被运营商路由器拒绝；</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">限制锥形NAT下</span><br><span class="line">C请求 1.1.1.1:8080</span><br><span class="line">只有 1.1.1.1 这个IP能发送报文给NAT地址，端口不限制</span><br><span class="line">其他来源IP都会被拒绝</span><br></pre></td></tr></table></figure><h3 id="端口限制锥形NAT"><a href="#端口限制锥形NAT" class="headerlink" title="端口限制锥形NAT"></a>端口限制锥形NAT</h3><p>在限制锥形NAT的基础上，添加了端口的限制，即只有局域网设备C请求过的S1的端口才能发送信息给局域网主机。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">端口限制锥形NAT下</span><br><span class="line">C请求 1.1.1.1:8080</span><br><span class="line">只有 1.1.1.1:8080 能发送报文给NAT地址</span><br><span class="line">其他来源IP或者1.1.1.1上不同的端口发来的报文都会被拒绝</span><br></pre></td></tr></table></figure><h3 id="完全锥形NAT"><a href="#完全锥形NAT" class="headerlink" title="完全锥形NAT"></a>完全锥形NAT</h3><p>完全锥形NAT的映射过程同上，但是不会对外网访问做限制。即NAT地址建立后，<strong>任何外网主机都可以发送信息给这个NAT地址</strong>。</p><h3 id="对称式NAT（动态NAT）"><a href="#对称式NAT（动态NAT）" class="headerlink" title="对称式NAT（动态NAT）"></a>对称式NAT（动态NAT）</h3><p>对称式NAT把内网IP和端口到<strong>相同目的地址和端口</strong>的所有请求，都映射到同一个公网地址和端口；同一个内网主机，用相同的内网IP和端口向另外一个目的地址发送报文，则会用不同的映射（比如映射到不同的端口）。</p><p>和端口限制式NAT不同的是，端口限制式NAT是所有请求映射到相同的公网IP地址和端口，而对称式NAT是<strong>为不同的请求建立不同的映射</strong>。它具有端口受限锥型的受限特性，内部地址每一次请求一个特定的外部地址，都可能会绑定到一个新的端口号。<strong>也就是请求不同的外部地址映射的端口号是可能不同的</strong>，甚至请求同一个主机的不同端口也会映射到不同的NAT地址上。</p><p>说白了就是，客户端请求目标的<strong>端口不同</strong>就会更换映射；甚至端口相同的时候都有可能更换映射。</p><h2 id="NAT类型IP端口映射示意图"><a href="#NAT类型IP端口映射示意图" class="headerlink" title="NAT类型IP端口映射示意图"></a>NAT类型IP端口映射示意图</h2><p>根据NAT类型，可能产生如下映射表，<code>↔</code>符号左表示内网主机IP和端口，<code>↔</code>符号右表示NAT的外网IP和端口，<code>@</code>符号右表示限制条件：外网主机地址IP和端口。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/20231227171258.png" alt="image.png"></p><h2 id="如何验证NAT类型"><a href="#如何验证NAT类型" class="headerlink" title="如何验证NAT类型"></a>如何验证NAT类型</h2><p>通过这个表，也能反推出我们应该如何验证一个NAT的类型</p><ul><li>局域网客户端C向服务器S1发起请求，服务器S1能得到一个C的NAT地址和端口</li><li>服务器S1让C向自己的另外几个端口发起请求，如果这些请求的来源IP和端口都一致，则代表C是锥形NAT，如果出现了不同的端口，则代表是<strong>对称NAT</strong>；</li><li>服务器S1将这个地址和端口交给服务器S2，S2向C发送一个报文</li><li>如果C收到了这个S2发来的报文，代表是<strong>完全锥形NAT</strong>，不对外网来源做限制</li><li>如果C没有收到，说明是限制锥形NAT;</li><li>服务器S1<strong>换一个端口</strong>向C的NAT地址和端口发起请求；</li><li>如果C收到了，则代表是<strong>地址限制锥形NAT</strong>，对端口不做限制；</li><li>如果C没有收到，则代表是<strong>端口限制锥形NAT</strong>，对地址和端口都做了限制；</li><li>服务器S1尝试让客户端C用相同的本地端口，给S1的另外一个端口发送请求，如果两次请求的来源端口出现了变化，说明是<strong>对称式NAT</strong>；</li></ul><p>这里客户端和服务器都是我们单独实现的程序，所以可以通过自定义特定的字段来让客户端、服务器做不同的操作。验证客户端的NAT类型至少需要两个不同IP的公网服务器。</p><p>博客：<a href="https://blog.csdn.net/li1055107552/article/details/131693446">NAT打洞_nat1打洞-CSDN博客</a> 中有一个不错的流程图，在此引用一下</p><blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/93c4521a4dc763790a40042aeba85ced.png" alt="image.png"></p><p>现在假设 192.168.0.100 通过 8000 端口 访问 114.135.246.90 的 9001 端口</p><p>经过NAT之后，会形成这样一种结果：</p><ul><li>内网的 192.168.0.100:8000 ↔ 120.230.117.10:9999 NAT公网IP，形成绑定关系</li><li>服务端 114.135.246.90:9001 被 120.230.117.10:9999 NAT公网IP，访问</li></ul><p>然后如果客户端 192.168.0.100 的8000端口：</p><ul><li>8000 端口 能收到 紫色 发来的消息，就是 NAT1</li><li>8000 端口 收不到 紫色 发来的消息，却能收到 浅蓝色 线发来的消息，就是 NAT2</li><li>8000 端口 收不到 紫色 和 浅蓝色 线发来的消息，只能收到 绿色 线返回来的消息，就是 NAT3 | NAT4</li></ul><p>NAT3 和 NAT4 的区别：</p><ul><li>NAT3 是 8000 端口与 9999 端口形成绑定关系，不管通过 8000 端口访问谁，·都是从 9999 端口出去</li><li>NAT4 是 8000 端口与 9999 端口形成的绑定关系是有条件的，8000 端口访问同一 <code>ip:port</code> 时，都会从 9999 端口出去；但通过 8000 端口访问其他 <code>ip:port</code> 时，就会绑定 NAT 其他端口，比如 9990（目标端口变化NAT就会变化）</li></ul></blockquote><p>有流程图片，看起来会更清楚一点。</p><h1 id="P2P打洞过程"><a href="#P2P打洞过程" class="headerlink" title="P2P打洞过程"></a>P2P打洞过程</h1><p>如果想实现P2P打洞，那么当前局域网内设备必须是在<strong>锥形NAT</strong>下，才能实现直接通信。因为在对称NAT下，NAT的端口地址会经常变化，很难实现稳定的连接。</p><p>对于锥形NAT，比较好打洞的自然是<code>完全锥形NAT</code>了，因为它对外网的来源IP和端口都不做限制，那么就可以用下面的流程来实现打洞</p><ul><li>需要中间服务器S</li><li>客户端C1和C2都是完全锥形NAT</li><li>客户端C1请求和C2实现P2P连接</li><li>客户端C1向中间服务器S发起请求，NAT会为C1维护一个端口和地址</li><li>服务器S收到C1的请求，并对内网客户端C2下发一个通知，让C2也来请求S</li><li>C2也向服务器发起一个请求，NAT为C2也维护了一个地址</li><li>此时服务器S就同时知道C1和C2通过NAT出来的一个公网端口和IP地址</li><li>服务器S将C1&#x2F;C2的<code>IP:端口</code>互相告知对方</li><li>C1和C2都得到了对方的IP和端口，因为是完全锥形NAT，双方可以直接通信</li><li>打洞完成</li></ul><p>这个过程中，中间服务器S是不可或缺的，如果没有这个中间服务器，C1和C2就很难知道对方的NAT公网IP和端口，也就没有办法直接实现通信。 </p><p>个人理解，只要C1和C2有一方是<strong>完全锥形NAT</strong>，那么P2P打洞就是<strong>比较容易实现</strong>的，假设C1是完全锥形NAT，C2是有限制的NAT：</p><ul><li>服务器S知道了C1的NAT的公网IP地址和端口后，将其告知C2；</li><li>C2重新对C1的完全锥形NAT发送请求，限制锥形NAT会对C2的新请求更新自己的限制表中的白名单，<strong>将C1的IP地址和端口也加入到了这个白名单中</strong>；</li><li>此时限制锥形NAT的限制就消失了，C1和C2依旧可以点对点发起通信。</li></ul><p>上述过程还是比较好弄明白的。</p><h2 id="NAT穿透性表格"><a href="#NAT穿透性表格" class="headerlink" title="NAT穿透性表格"></a>NAT穿透性表格</h2><p>下表展示了不同NAT组合的穿透性。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2024/01/51e7ab570a011d12130d30cddb138c7a.png" alt="image.png"></p><p>但是我没想明白两边都是端口限制型NAT如何打洞？百度也没找到好的说明。</p><ul><li><a href="https://www.nuomiphp.com/t/61edb083f0fe0c425c0ef553.html">关于端口受限型 NAT 打洞可行性的思考 - 糯米PHP</a></li><li><a href="https://segmentfault.com/q/1010000044568346">双方都是端口限制NAT能实现P2P打洞吗？</a></li></ul><p>搞清楚这个问题后我会回来补充本文。</p><h2 id="打洞失败"><a href="#打洞失败" class="headerlink" title="打洞失败"></a>打洞失败</h2><p>如果打洞失败，C1和C2就得借助中间服务器S的转发来实现通信，此时通信的速度就会出现限制。同时，中间服务器S的带宽&#x2F;流量资费也比较感人。</p><p>这也是为什么绿联和极空间虽然提供了中间服务器转发的方式，但依旧会想办法让你和你的NAS能实现P2P直接通信。除了能提高连接速度，更多的是节省它们服务器的带宽和资费。</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>P2P打洞的大概原理就是如此，更深层次的就不再研究了~你看明白了吗？</p>]]></content>
    
    
    <summary type="html">简单介绍P2P打洞的基本原理</summary>
    
    
    
    <category term="计算机网络" scheme="https://blog.musnow.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="P2P" scheme="https://blog.musnow.top/tags/P2P/"/>
    
    <category term="计算机网络" scheme="https://blog.musnow.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】gcc中__builtin_expect的作用</title>
    <link href="https://blog.musnow.top/posts/3259961914/"/>
    <id>https://blog.musnow.top/posts/3259961914/</id>
    <published>2023-12-26T07:36:00.000Z</published>
    <updated>2023-12-26T10:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><p>代码学习的时候，遇到了<code>__builtin_expect</code>这个之前从来没有遇到过的东西，网上搜了一下，发现纯C语言实现的GCD（Grand Central Dispatch）中就有定义过这个宏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _safe_cast_to_long(x) \</span></span><br><span class="line"><span class="meta">        (&#123; _Static_assert(sizeof(typeof(x)) &lt;= sizeof(long), \</span></span><br><span class="line"><span class="meta">                <span class="string">&quot;__builtin_expect doesn&#x27;t support types wider than long&quot;</span>); \</span></span><br><span class="line"><span class="meta">                (long)(x); &#125;)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fastpath(x) ((typeof(x))__builtin_expect(_safe_cast_to_long(x), ~0l))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> slowpath(x) ((typeof(x))__builtin_expect(_safe_cast_to_long(x), 0l))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> likely(x) __builtin_expect(!!(x), 1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> unlikely(x) __builtin_expect(!!(x), 0)</span></span><br></pre></td></tr></table></figure><p>我遇到的用法类似末尾的likely和unlikely，刚开始我误解了这个宏的所用，以为它会改变判断条件的结果，但实际上并非如此。</p><p>上面源码中的likely和unlikely这两个宏的使用方式如下，其中value是一个判断条件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(likely(value))  <span class="comment">// 等价于 if(value) 只不过value可能为真的可能性更大。</span></span><br><span class="line"><span class="keyword">if</span>(unlikely(value))  <span class="comment">// 也等价于 if(value) 只不过value可能为假的可能性更大</span></span><br></pre></td></tr></table></figure><p>比如下面的这个代码，其含义是入参PTR这个指针为空的可能性很小，那么编译器就会对这里的分支判断做一定的优化，避免过度的跳转。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">unlikey</span>(<span class="literal">nullptr</span>==PTR))</span><br><span class="line">&#123; </span><br><span class="line">   <span class="comment">// 错误处理或者提示 </span></span><br><span class="line">&#125;       </span><br></pre></td></tr></table></figure><p>那这里是怎么个操作的呢？</p><h1 id="指令作用说明"><a href="#指令作用说明" class="headerlink" title="指令作用说明"></a>指令作用说明</h1><blockquote><p>参考：<a href="https://codeleading.com/article/9598651778/">__builtin_expect 总结</a></p></blockquote><p>这个指令是gcc编译器引入的，指令的写法为：<code>__builtin_expect(EXP, N)</code>，意思是：<code>EXP==N</code>的概率很大。</p><p>likely和unlikely这两个宏中使用了<code>!!(x)</code>是为了保证返回的结果一定是0或1，而不是一个其他无法和1&#x2F;0直接比较的表达式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define likely(x) __builtin_expect(!!(x), 1)</span><br><span class="line">#define unlikely(x) __builtin_expect(!!(x), 0)</span><br></pre></td></tr></table></figure><h2 id="普通分支的汇编"><a href="#普通分支的汇编" class="headerlink" title="普通分支的汇编"></a>普通分支的汇编</h2><p>比如我们一个判断条件的分支语句如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">function</span><span class="params">(<span class="type">bool</span> flag)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;all good!\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;this is wrong!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    function(<span class="literal">true</span>);</span><br><span class="line">    function(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么默认情况下，编译器将这个代码编译成汇编的时候，也会按顺序进行处理。使用如下命令将<code>test.c</code>源文件生成出汇编文件<code>test.s</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test:test.c</span><br><span class="line">gcc -fprofile-arcs -O2 -c test.c</span><br><span class="line">objdump -d test.o</span><br></pre></td></tr></table></figure><p>test.s中的内容如下（省略了一部分，只保留了function部分）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">0000000000000000 &lt;function&gt;:</span><br><span class="line">   0:   48 83 ec 08             sub    $0x8,%rsp</span><br><span class="line">   4:   40 84 ff                test   %dil,%dil</span><br><span class="line">   7:   74 27                   je     30 &lt;function+0x30&gt;</span><br><span class="line">   9:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">   e:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 16 &lt;function+0x16&gt;</span><br><span class="line">  15:   01 </span><br><span class="line">  16:   e8 00 00 00 00          callq  1b &lt;function+0x1b&gt;</span><br><span class="line">  1b:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 23 &lt;function+0x23&gt;</span><br><span class="line">  22:   01 </span><br><span class="line">  23:   48 83 c4 08             add    $0x8,%rsp</span><br><span class="line">  27:   c3                      retq   </span><br><span class="line">  28:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)</span><br><span class="line">  2f:   00 </span><br><span class="line">  30:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">  35:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 3d &lt;function+0x3d&gt;</span><br><span class="line">  3c:   01 </span><br><span class="line">  3d:   e8 00 00 00 00          callq  42 &lt;function+0x42&gt;</span><br><span class="line">  42:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 4a &lt;function+0x4a&gt;</span><br><span class="line">  49:   01 </span><br><span class="line">  4a:   48 83 c4 08             add    $0x8,%rsp</span><br><span class="line">  4e:   c3                      retq   </span><br><span class="line">  4f:   90                      nop</span><br></pre></td></tr></table></figure><p>可以看到，这里是先通过<code>je     30 &lt;function+0x30&gt;</code>来判断当前flag是否为假，如果为假则跳到<code>30</code>处执行perror，如果不为假则继续执行<code>callq  1b &lt;function+0x1b&gt;</code>，即printf的打印。</p><p>je是一个汇编指令，和jz等价，判断的是运算结果的ZF标记位。对于ZF标记位而言，运算结果不为全0时Z&#x3D;0，运算结果为<strong>全0时Z&#x3D;1</strong>；所以<code>je 30</code>的意思是，如果运算结果为全0，则跳转到30标记处。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0:   48 83 ec 08             sub    $0x8,%rsp</span><br><span class="line">4:   40 84 ff                test   %dil,%dil</span><br><span class="line">7:   74 27                   je     30 &lt;function+0x30&gt;</span><br></pre></td></tr></table></figure><p>je之前的两个汇编指令操作解析如下：</p><ul><li>sub是相减操作，使用<code>$0x8</code>位置的值<code>-%rsp</code>的结果，即<code>$0x8 -= %rsp</code>；</li><li>test指令和and指令等价，是按位与操作，但test命令不会改变值，只会改变标记位。但是这里的操作是<code>%dil</code>自己和自己按位与，得到的结果还是他自己……没太看明白什么含义</li></ul><p>但是，只从je本身的操作来考虑，这里的流程是这样的</p><ul><li>je 跳转到30，Z&#x3D;1的时候跳转到30，运算结果为全0的时候跳转到30，可以理解为flag为0的时候跳转到30（因为30处是perror的打印）</li><li>Z&#x3D;0，运算结果不为30的时候，不跳转，继续执行printf的打印</li></ul><p>这里为什么说30处是perror的打印呢？因为使用如下汇编命令整理出的<code>test.s</code>文件中可以看到更详细的过程</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">test:test.c</span></span><br><span class="line">gcc -E test.c -o test.i -O2 &amp;&amp; \</span><br><span class="line">gcc -S test.i -o test.s -O2 </span><br></pre></td></tr></table></figure><p>从<code>test.s</code>可以看到，在默认情况下，通过je判断后会跳到<code>.L2</code>处执行perror的调用，或继续往后执行<code>puts</code>即printf的调用。因为它们的顺序和上面获得的汇编一样，所以我认为在上面的汇编中<code>je 30</code>是跳转到执行perror的操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function:</span><br><span class="line">.LFB11:</span><br><span class="line">.cfi_startproc</span><br><span class="line">testb%dil, %dil</span><br><span class="line">je.L2</span><br><span class="line">movl$.LC0, %edi</span><br><span class="line">jmpputs</span><br><span class="line">.p2align 4,,10</span><br><span class="line">.p2align 3</span><br><span class="line">.L2:</span><br><span class="line">movl$.LC1, %edi</span><br><span class="line">jmpperror</span><br><span class="line">.cfi_endproc</span><br><span class="line">.LFE11:</span><br><span class="line">.sizefunction, .-function</span><br><span class="line">.p2align 4,,15</span><br><span class="line">.globlfunction_likely</span><br><span class="line">.typefunction_likely, @function</span><br></pre></td></tr></table></figure><h2 id="添加builtin-expect之后的汇编"><a href="#添加builtin-expect之后的汇编" class="headerlink" title="添加builtin_expect之后的汇编"></a>添加builtin_expect之后的汇编</h2><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><p>上方的代码，在加上<code>__builtin_expect</code>的unlikely和likely之后，新代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">function_likely</span><span class="params">(<span class="type">bool</span> flag)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (likely(flag))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;all good!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;this is wrong!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">function_unlikely</span><span class="params">(<span class="type">bool</span> flag)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (unlikely(flag))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;all good!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;this is wrong!\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用相同命令进行编译，得到汇编如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">0000000000000050 &lt;function_likely&gt;:</span><br><span class="line">  50:   48 83 ec 08             sub    $0x8,%rsp</span><br><span class="line">  54:   40 84 ff                test   %dil,%dil</span><br><span class="line">  57:   74 27                   je     80 &lt;function_likely+0x30&gt;</span><br><span class="line">  59:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">  5e:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 66 &lt;function_likely+0x16&gt;</span><br><span class="line">  65:   01 </span><br><span class="line">  66:   e8 00 00 00 00          callq  6b &lt;function_likely+0x1b&gt;</span><br><span class="line">  6b:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 73 &lt;function_likely+0x23&gt;</span><br><span class="line">  72:   01 </span><br><span class="line">  73:   48 83 c4 08             add    $0x8,%rsp</span><br><span class="line">  77:   c3                      retq   </span><br><span class="line">  78:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)</span><br><span class="line">  7f:   00 </span><br><span class="line">  80:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">  85:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 8d &lt;function_likely+0x3d&gt;</span><br><span class="line">  8c:   01 </span><br><span class="line">  8d:   e8 00 00 00 00          callq  92 &lt;function_likely+0x42&gt;</span><br><span class="line">  92:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 9a &lt;function_likely+0x4a&gt;</span><br><span class="line">  99:   01 </span><br><span class="line">  9a:   eb d7                   jmp    73 &lt;function_likely+0x23&gt;</span><br><span class="line">  9c:   0f 1f 40 00             nopl   0x0(%rax)</span><br><span class="line"></span><br><span class="line">00000000000000a0 &lt;function_unlikely&gt;:</span><br><span class="line">  a0:   48 83 ec 08             sub    $0x8,%rsp</span><br><span class="line">  a4:   40 84 ff                test   %dil,%dil</span><br><span class="line">  a7:   75 27                   jne    d0 &lt;function_unlikely+0x30&gt;</span><br><span class="line">  a9:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">  ae:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # b6 &lt;function_unlikely+0x16&gt;</span><br><span class="line">  b5:   01 </span><br><span class="line">  b6:   e8 00 00 00 00          callq  bb &lt;function_unlikely+0x1b&gt;</span><br><span class="line">  bb:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # c3 &lt;function_unlikely+0x23&gt;</span><br><span class="line">  c2:   01 </span><br><span class="line">  c3:   48 83 c4 08             add    $0x8,%rsp</span><br><span class="line">  c7:   c3                      retq   </span><br><span class="line">  c8:   0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)</span><br><span class="line">  cf:   00 </span><br><span class="line">  d0:   bf 00 00 00 00          mov    $0x0,%edi</span><br><span class="line">  d5:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # dd &lt;function_unlikely+0x3d&gt;</span><br><span class="line">  dc:   01 </span><br><span class="line">  dd:   e8 00 00 00 00          callq  e2 &lt;function_unlikely+0x42&gt;</span><br><span class="line">  e2:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # ea &lt;function_unlikely+0x4a&gt;</span><br><span class="line">  e9:   01 </span><br><span class="line">  ea:   eb d7                   jmp    c3 &lt;function_unlikely+0x23&gt;</span><br></pre></td></tr></table></figure><p>可以看到，对于<code>function_likely</code>中likely括起来的flag判断，是认为flag大概率为真，所以其进行的是je判断；而对于unlikely括起来的操作，认为flag大概率为假，所以用的是jne进行判断</p><p>je和jne功能相反，都是判断ZF标记位</p><ul><li>je：ZF&#x3D;1的时候跳转</li><li>jne：ZF&#x3D;0的时候跳转</li></ul><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><p>上面的例子用的printf和perror库函数，我们不太好观察到二者的差别，改成如下代码再次进行测试，能更明显的看到二者优化后的不同。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> likely(x) __builtin_expect(!!(x), 1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> unlikely(x) __builtin_expect(!!(x), 0)</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">test_likely</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(likely(x))</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">test_unlikely</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(unlikely(x))</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    test_likely(<span class="number">1</span>);</span><br><span class="line">    test_likely(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用相同命令进行编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">main:main.c</span><br><span class="line">gcc -fprofile-arcs -O2 -c main.c</span><br><span class="line">objdump -d main.o</span><br></pre></td></tr></table></figure><p>得到汇编输出如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">0000000000000000 &lt;test_likely&gt;:</span><br><span class="line">   0:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 8 &lt;test_likely+0x8&gt;</span><br><span class="line">   7:   01 </span><br><span class="line">   8:   b8 05 00 00 00          mov    $0x5,%eax</span><br><span class="line">   d:   85 ff                   test   %edi,%edi</span><br><span class="line">   f:   74 07                   je     18 &lt;test_likely+0x18&gt;</span><br><span class="line">  11:   c3                      retq   </span><br><span class="line">  12:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)</span><br><span class="line">  18:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 20 &lt;test_likely+0x20&gt;</span><br><span class="line">  1f:   01 </span><br><span class="line">  20:   b8 06 00 00 00          mov    $0x6,%eax</span><br><span class="line">  25:   c3                      retq   </span><br><span class="line">  26:   66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)</span><br><span class="line">  2d:   00 00 00 </span><br><span class="line"></span><br><span class="line">0000000000000030 &lt;test_unlikely&gt;:</span><br><span class="line">  30:   85 ff                   test   %edi,%edi</span><br><span class="line">  32:   75 14                   jne    48 &lt;test_unlikely+0x18&gt;</span><br><span class="line">  34:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 3c &lt;test_unlikely+0xc&gt;</span><br><span class="line">  3b:   01 </span><br><span class="line">  3c:   b8 06 00 00 00          mov    $0x6,%eax</span><br><span class="line">  41:   c3                      retq   </span><br><span class="line">  42:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)</span><br><span class="line">  48:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 50 &lt;test_unlikely+0x20&gt;</span><br><span class="line">  4f:   01 </span><br><span class="line">  50:   b8 05 00 00 00          mov    $0x5,%eax</span><br><span class="line">  55:   c3                      retq   </span><br></pre></td></tr></table></figure><p>在这个例子中可以很明显的观察到，对于likely的函数操作，je后紧跟着的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11:   c3                      retq   </span><br><span class="line">12:   66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)</span><br></pre></td></tr></table></figure><p>而对于unlikely操作中，jne后面紧跟着的是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">34:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)        # 3c &lt;test_unlikely+0xc&gt;</span><br><span class="line">3b:   01 </span><br><span class="line">3c:   b8 06 00 00 00          mov    $0x6,%eax</span><br></pre></td></tr></table></figure><p>两个操作的顺序正好倒过来了，符合优化的预期！</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>通过上面的两个例子，<code>__builtin_expect</code>的优化作用就体现出来了</p><ul><li>当我们认为flag<strong>大概率为假</strong>的时候，使用jne判断为真的情况，如果是真才跳转。为假继续往后执行；</li><li>如果我们认为flag<strong>大概率为真</strong>的时候，使用je判断为假的情况，如果是假才进行跳转。为真继续往后执行；</li></ul><p>相比于直接往后执行汇编，跳转是需要一定消耗的！使用该宏进行优化后，编译器会把更有可能执行的操作放在判断语句之后，<strong>避免多次跳转产生的消耗</strong>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// if(unlikely(flag)) // B更有可能执行，flag更大概率为假</span></span><br><span class="line"><span class="keyword">if</span>(likely(flag)) <span class="comment">// A更有可能执行，flag更大概率为真</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//A</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//B</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再用上面这个简单的demo来说明一下：</p><ul><li>使用likely进行flag判断的时候，汇编语句中会使用je判断，并把A紧跟着je判断之后；</li><li>使用unlikey进行flag判断的时候，汇编语句中会使用jne判断，并把B紧跟着jne判断之后；</li></ul><p>因为依照更有可能发生的情况来生成不同的汇编代码，<strong>减少了跳转次数</strong>，自然优化了性能！你看明白了吗？</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/02/202211021557390.jpg" alt="好得很"></p>]]></content>
    
    
    <summary type="html">gcc中__builtin_expect的作用</summary>
    
    
    
    <category term="玩上Linux" scheme="https://blog.musnow.top/categories/%E7%8E%A9%E4%B8%8ALinux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="C语言" scheme="https://blog.musnow.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】Ubuntu下快速切换gcc版本</title>
    <link href="https://blog.musnow.top/posts/1907126934/"/>
    <id>https://blog.musnow.top/posts/1907126934/</id>
    <published>2023-12-26T06:36:00.000Z</published>
    <updated>2023-12-26T06:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将介绍如何在Ubuntu22.04版本下实现gcc版本的快速切换。</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有的时候，不同版本的gcc会造成一些细微的差异，导致相关的一些工具不兼容，比如用于单元测试覆盖率生成的gcov&#x2F;lcov工具，在不同的gcc版本下可能会出现不同的结果。</p><p>为了确定是否是gcc编译器版本不同造成的这些差异，有的时候需要在一台主机上装多个版本的gcc，不停的切换以测试问题。</p><p>假设我们的ubuntu主机上安装了gcc 11.4 版本和 gcc 9.5 版本，且当前gcc命令指向的是 11.4 版本，那么你可以使用<code>gcc-9</code>命令来使用9.5版本的gcc。</p><p>但是，对于一些已经写死使用gcc这个命令的脚本或编译工具而言，它们就不是那么好修改gcc为gcc-9的，我们需要做的就是让系统的gcc命令能在11.4版本和9.5版本之间<strong>进行切换</strong>。</p><p>其中一个办法是手动替换gcc和g++的命令软连接，但是这个方法并不方便，ubuntu下有更好的操作，请看下文。</p><h1 id="安装gcc9-5"><a href="#安装gcc9-5" class="headerlink" title="安装gcc9.5"></a>安装gcc9.5</h1><p>默认情况下，ubuntu22.04安装的gcc版本是11.4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; gcc --version          </span><br><span class="line">gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br><span class="line">Copyright (C) 2021 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><p>先给你的主机安装上gcc9.4版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gcc-9 g++-9</span><br></pre></td></tr></table></figure><p>安装之后，你应该可以通过<code>gcc-9</code>命令来使用9.5版本的gcc了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++-9 --version</span><br><span class="line">g++-9 (Ubuntu 9.5.0-1ubuntu1~22.04) 9.5.0</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><h1 id="配置update-alternatives"><a href="#配置update-alternatives" class="headerlink" title="配置update-alternatives"></a>配置update-alternatives</h1><p>我们可以将11和9版本添加到update-alternatives工具中，就可以方便的切换，不需要手动设置命令的软连接。</p><h2 id="工具基本使用命令"><a href="#工具基本使用命令" class="headerlink" title="工具基本使用命令"></a>工具基本使用命令</h2><p>如下是工具使用的一个基本示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 20 --slave /usr/bin/g++ g++ /usr/bin/g++-11</span><br></pre></td></tr></table></figure><ol><li><code>--install</code> 代表我们需要注册一个新的服务名</li><li><code>/usr/bin/gcc</code> 代表我们目标的最终地址，切换软链接的时候会切换该地址的软链接</li><li><code>gcc</code>代表我们用于管理服务的名字</li><li><code>/usr/bin/gcc-11</code> 代表被管理的命令的绝对路径（会用这个命令来替换第二个参数的软链接）</li><li><code>20</code> 代表优先级，数字越大优先级越高。</li><li><code>--slave</code> 代表从属命令，参数顺序和前面这几个是一样的，配置的是g++命令</li></ol><p>在update-alternatives命令的帮助中可以看到install和slave的关系，slave命令就是跟着install命令来使用的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--install &lt;link&gt; &lt;name&gt; &lt;path&gt; &lt;priority&gt;</span><br><span class="line">   [--slave &lt;link&gt; &lt;name&gt; &lt;path&gt;] ...</span><br><span class="line">                          add a group of alternatives to the system.</span><br></pre></td></tr></table></figure><p>它是什么意思呢？其实就是让主从命令有一个对应关系：当我们把gcc命令切换成11版本后，作为slave的g++命令也会跟着一起变化。</p><p>slave可以添加多个，后文会做演示。</p><h2 id="添加gcc版本配置"><a href="#添加gcc版本配置" class="headerlink" title="添加gcc版本配置"></a>添加gcc版本配置</h2><p>使用如下命令查看当前可以用来直接替换gcc的版本号，会发现么有，因为两个gcc版本都没有加入到这个工具中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo update-alternatives --config gcc</span><br><span class="line">update-alternatives: error: no alternatives for gcc</span><br></pre></td></tr></table></figure><p>使用如下命令查看一下当前装好的gcc包，可以看到有gcc 11和9。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; dpkg -l | grep gcc</span><br><span class="line">ii  gcc                               4:11.2.0-1ubuntu1                                               amd64        GNU C compiler</span><br><span class="line">ii  gcc-11                            11.4.0-1ubuntu1~22.04                                           amd64        GNU C compiler</span><br><span class="line">ii  gcc-11-base:amd64                 11.4.0-1ubuntu1~22.04                                           amd64        GCC, the GNU Compiler Collection (base package)</span><br><span class="line">ii  gcc-12-base:amd64                 12.3.0-1ubuntu1~22.04                                           amd64        GCC, the GNU Compiler Collection (base package)</span><br><span class="line">ii  gcc-9                             9.5.0-1ubuntu1~22.04                                            amd64        GNU C compiler</span><br><span class="line">ii  gcc-9-base:amd64                  9.5.0-1ubuntu1~22.04                                            amd64        GCC, the GNU Compiler Collection (base package)</span><br><span class="line">ii  lib32gcc-s1                       12.3.0-1ubuntu1~22.04                                           amd64        GCC support library (32 bit Version)</span><br><span class="line">ii  libgcc-11-dev:amd64               11.4.0-1ubuntu1~22.04                                           amd64        GCC support library (development files)</span><br><span class="line">ii  libgcc-9-dev:amd64                9.5.0-1ubuntu1~22.04                                            amd64        GCC support library (development files)</span><br><span class="line">ii  libgcc-s1:amd64                   12.3.0-1ubuntu1~22.04                                           amd64        GCC support library</span><br></pre></td></tr></table></figure><p>执行如下命令将gcc-9添加到update-alternatives工具中，让我们可以通过config来切换gcc版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20 --slave /usr/bin/g++ g++ /usr/bin/g++-9</span><br><span class="line">update-alternatives: using /usr/bin/gcc-9 to provide /usr/bin/gcc (gcc) in auto mode</span><br></pre></td></tr></table></figure><p>使用如下命令查看可切换的gcc版本，因为当前只给工具里添加了一个gcc-9版本，所以会显示<code>only one alternative</code>，即只有一个可选项的意思，工具会认为没有啥好配置的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo update-alternatives --config gcc</span><br><span class="line">There is only one alternative in link group gcc (providing /usr/bin/gcc): /usr/bin/gcc-9</span><br><span class="line">Nothing to configure.</span><br></pre></td></tr></table></figure><p>这时候我们可以把原本安装好的11.4版本的gcc也给添加到这个工具里面。优先级的数字可以根据你的情况自行调整</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 25 --slave /usr/bin/g++ g++ /usr/bin/g++-11</span><br></pre></td></tr></table></figure><h2 id="切换gcc版本成功"><a href="#切换gcc版本成功" class="headerlink" title="切换gcc版本成功"></a>切换gcc版本成功</h2><p>然后再次执行<code>sudo update-alternatives --config gcc</code>，此时就能看到两个版本的可选项了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo update-alternatives --config gcc</span><br><span class="line">There are 2 choices for the alternative gcc (providing /usr/bin/gcc).</span><br><span class="line"></span><br><span class="line">  Selection    Path             Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            /usr/bin/gcc-9    20        auto mode</span><br><span class="line">  1            /usr/bin/gcc-11   20        manual mode</span><br><span class="line">  2            /usr/bin/gcc-9    20        manual mode</span><br><span class="line"></span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or type selection number:</span><br></pre></td></tr></table></figure><p>键入序号来选择你需要切换的gcc版本，回车即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; gcc --version</span><br><span class="line">gcc (Ubuntu 9.5.0-1ubuntu1~22.04) 9.5.0</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><p>可以看到，当前的系统gcc已经被换成了9.5版本的了，切换成功！而且因为我们通过<code>--slave</code>配置了g++命令的替换操作，所以g++的版本也跟着一起替换成9.5了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; g++ --version</span><br><span class="line">g++ (Ubuntu 9.5.0-1ubuntu1~22.04) 9.5.0</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.  There is NO</span><br><span class="line">warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><p>将gcc换回gcc 11版本是相同的操作，这里不再赘述。</p><h2 id="添加多个slave"><a href="#添加多个slave" class="headerlink" title="添加多个slave"></a>添加多个slave</h2><p>和gcc捆绑的还有一个用于分支覆盖率检测的gcov命令，我们同样可以通过<code>--slave</code>选项将其绑定到版本中，让gcov的命令版本也会更着gcc版本一同切换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 25 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11</span><br><span class="line">update-alternatives: updating alternative /usr/bin/gcc-11 because link group gcc has changed slave links</span><br><span class="line"></span><br><span class="line">&gt; sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 20 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9</span><br></pre></td></tr></table></figure><p>此时使用<code>sudo update-alternatives --config gcc</code>切换gcc版本后，gcov命令的版本也会跟着变化。这样我们能保证gcov和gcc版本是一致的，不会出现不一致导致的兼容性问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; gcov --version</span><br><span class="line">gcov (Ubuntu 9.5.0-1ubuntu1~22.04) 9.5.0</span><br><span class="line">Copyright (C) 2019 Free Software Foundation, Inc.</span><br><span class="line">This is free software; see the source for copying conditions.</span><br><span class="line">There is NO warranty; not even for MERCHANTABILITY or </span><br><span class="line">FITNESS FOR A PARTICULAR PURPOSE.</span><br></pre></td></tr></table></figure><h2 id="从工具中删除gcc版本"><a href="#从工具中删除gcc版本" class="headerlink" title="从工具中删除gcc版本"></a>从工具中删除gcc版本</h2><p>如果需要从这个工具中删除某个版本，执行如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --remove gcc /usr/bin/gcc-9 </span><br></pre></td></tr></table></figure><p>删除后就无法通过该工具切换gcc版本为9了。</p>]]></content>
    
    
    <summary type="html">Ubuntu22.04下快速切换gcc版本</summary>
    
    
    
    <category term="玩上Linux" scheme="https://blog.musnow.top/categories/%E7%8E%A9%E4%B8%8ALinux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="C语言" scheme="https://blog.musnow.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Cpp" scheme="https://blog.musnow.top/tags/Cpp/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Python实现文件分片加密和上传（未实现）</title>
    <link href="https://blog.musnow.top/posts/621478472/"/>
    <id>https://blog.musnow.top/posts/621478472/</id>
    <published>2023-12-18T08:52:00.000Z</published>
    <updated>2023-12-18T08:52:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote><p>项目地址：<a href="https://github.com/musnows/encrypt2bdy">musnows&#x2F;encrypt2bdy</a></p></blockquote><p>之前写的一篇博客提到了我的encrypt2bdy项目中，文件直接整个被读取到内存里面再计算md5，导致内存占用巨大的问题。后续解决方法是用分片的方式挨个读取文件块并计算md5。</p><p>但光是修改md5计算方式还不够，因为项目中还涉及到<strong>上传加密后文件</strong>的问题，且听我细细道来👇</p><h1 id="关于文件加密库"><a href="#关于文件加密库" class="headerlink" title="关于文件加密库"></a>关于文件加密库</h1><h2 id="cryptography-fernet"><a href="#cryptography-fernet" class="headerlink" title="cryptography.fernet"></a>cryptography.fernet</h2><p>我的加密解密操作使用的是Fernet这个库，它会创建一个密钥文件，并借密钥文件对字节流进行加密和解密操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from cryptography.fernet import Fernet</span><br></pre></td></tr></table></figure><p>但是，Fernet框架不适合<strong>进行分片加密和解密</strong>。在我的尝试中，分片加密文件是可以的，但是<strong>解密</strong>的时候会因为密钥对不上而出现异常。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cryptography.fernet.InvalidToken – If the token is in any way invalid, this exception is raised. A token may be invalid for a number of reasons: it is older than the ttl, it is malformed, or it does not have a valid signature.</span><br></pre></td></tr></table></figure><p><a href="https://cryptography.io/en/latest/fernet/">官方文档</a>里面提到了，Fernet只适合用于能<strong>完全加载到内存</strong>里面的数据，不适合用于处理大文件。</p><blockquote><p>Limitations:<br>Fernet is ideal for encrypting data that easily fits in memory. As a design feature it does not expose unauthenticated bytes. This means that the complete message contents must be available in memory, making Fernet generally unsuitable for very large files at this time.</p></blockquote><p>在当前备份文件的这个场景下，将文件全部加载到内存里面是不合理的。所以需要换一个加密&#x2F;解密库</p><h2 id="pyAesCrypt"><a href="#pyAesCrypt" class="headerlink" title="pyAesCrypt"></a>pyAesCrypt</h2><p>改用pyAesCrypt了，加密和解密的处理非常简单，也可以分片加载。如下代码示例中，input_file是待加密文件，output_file是加密后文件，password是用户提供的加密密钥。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyAesCrypt</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_file</span>(<span class="params">input_file, output_file, password, buffer_size=<span class="number">64</span> * <span class="number">1024</span></span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file_in, <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">        pyAesCrypt.encryptStream(file_in, file_out, password, buffer_size)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_file</span>(<span class="params">input_file, output_file, password, buffer_size=<span class="number">64</span> * <span class="number">1024</span></span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file_in, <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">        pyAesCrypt.decryptStream(file_in, file_out, password, buffer_size)</span><br></pre></td></tr></table></figure><p>只要用户还记得住自己的加密密钥，那么他就可以用解密函数将文件解密出来。</p><p>AES加密是当前广泛使用的对称加密方式，至于它是怎么实现的，能否被破解都是密码学的范畴了。我了解到的信息是，破解AES加密算法本身的消耗巨大，真要去破解，一般都会采用猜测密钥的方式（即猜测你是用什么密钥加密的这个文件）</p><p>所以当你需要使用AES密钥来加密文件的时候，一定要选用一个强密钥，保证数据不被轻易窃取。</p><p>当然，我的项目中，加密的目的很单纯，就是为了避<strong>免百度云盘扫我的相片和个人文件</strong>。防止文件被窃取只是个附带的功能。</p><p>实测，encrypt2bdy项目中采用pyAesCrypt库后，处理500MB文件的过程中内存占用都不会超过90MB，非常完美。</p><h3 id="密钥泄露问题？"><a href="#密钥泄露问题？" class="headerlink" title="密钥泄露问题？"></a>密钥泄露问题？</h3><p>更新后的项目还是采用环境变量的方式来加载用户密钥，至于环境变量方式是否会导致密钥泄露：别人都能看到你的docker配置了，他还取你的密钥干嘛，直接把本地源文件偷走了好吧……</p><p>就算不用环境变量，在配置文件&#x2F;前端里面填密钥，最终都还是需要一个位置来存放这个密钥 </p><p>除非直接把密钥存内存里面，不写入任何文件，且每次重启docker都<strong>要求用户重新填密钥</strong>。但是这样会导致容器可用性很差，毕竟每次操作docker容器都得重新弄一下配置。不过后续给某些对隐私要求高的老哥提供这个功能也不是不行。（这个功能必须要等前端写出来了之后才有可能实现）</p><h1 id="分片加密上传"><a href="#分片加密上传" class="headerlink" title="分片加密上传"></a>分片加密上传</h1><p>修改了加密库还是不够。来和我一起看看当前项目上传文件的逻辑吧，假设用户选择了加密上传</p><ul><li>分片读取文件，计算文件md5用于本地入库</li><li>分片读取和加密文件，并将<strong>加密后文件</strong>添加<code>.e2bdy</code>后缀写入源目录</li><li><strong>分片读取和上传</strong>加密后文件</li><li>上传完毕，删除加密后文件（只保留源文件）</li><li>循环处理，直到选定目录中所有文件都被处理完毕。</li></ul><p>整个程序逻辑都采用了分片读取文件，内存占用问题是解决了，但还有另外一个问题没有解决：加密后文件需要写入磁盘，上传后又被删除。</p><p>也就是说，假设我需要备份100GB的文件，那么磁盘就会多出100GB的数据擦写……程序也需要累积等待100GB的磁盘写入，如果是机械硬盘……</p><p>而且，磁盘还需要<strong>保留有足量空间</strong>来存放这个临时的加密文件，假设我想备份一个10GB的单个文件，磁盘剩余可用空间只剩5GB了，此时程序<strong>就无法将加密后的文件写入磁盘</strong>（一般加密后的文件会比原始文件略大一些），导致无法处理这个文件了。</p><p>这样肯定不行！所以我换了一个思路，百度云盘要求数据按4MB的分片调用API上传，<strong>那么我们可否每次读取4MB的文件内容，加密它并保存在内存中，随后直接上传这个分片呢</strong>？这样整个的处理流程中，都是分片后在内存中处理，也不会多出来一个临时的加密文件导致的数据擦写，项目可用性提高！</p><p>问了GPT，写了个这样的示例代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pyAesCrypt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_chunk</span>(<span class="params">chunk_data, password</span>):</span><br><span class="line">    <span class="comment"># 加密数据块</span></span><br><span class="line">    <span class="keyword">with</span> io.BytesIO() <span class="keyword">as</span> block_encrypted:</span><br><span class="line">        pyAesCrypt.encryptStream(</span><br><span class="line">            io.BytesIO(chunk_data),</span><br><span class="line">            block_encrypted,</span><br><span class="line">            password</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 返回加密后的数据</span></span><br><span class="line">        <span class="keyword">return</span> block_encrypted.getvalue()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">upload_chunk_to_cloud</span>(<span class="params">chunk_data</span>):</span><br><span class="line">    <span class="comment"># 将加密后的数据块上传到云端</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    src_path = <span class="string">&#x27;path/to/source/file&#x27;</span></span><br><span class="line">    password = <span class="string">&#x27;your-password&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(src_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> src_file:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 读取一个数据块</span></span><br><span class="line">            chunk = src_file.read(<span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> chunk:</span><br><span class="line">                <span class="comment"># 数据块读取完毕，退出循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 加密数据块</span></span><br><span class="line">            encrypted_chunk = encrypt_chunk(chunk, password)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 上传加密后的数据块到云端</span></span><br><span class="line">            upload_chunk_to_cloud(encrypted_chunk)</span><br></pre></td></tr></table></figure><p>现在我要做的，就是验证一下这样操作是否能上传成功、是否能解密上传后的文件，然后再看看内存占用多少。</p><h2 id="分片加密和直接加密区别"><a href="#分片加密和直接加密区别" class="headerlink" title="分片加密和直接加密区别"></a>分片加密和直接加密区别</h2><p>然而第一部我就卡住了：百度云盘的API要求上传前先传入文件的完整md5，也就是说，<strong>我得想个办法拿到加密后文件的完整md5</strong>！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> pyAesCrypt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_chunk</span>(<span class="params">chunk_data, password</span>):</span><br><span class="line">    <span class="comment"># 加密数据块</span></span><br><span class="line">    <span class="keyword">with</span> io.BytesIO() <span class="keyword">as</span> block_encrypted:</span><br><span class="line">        pyAesCrypt.encryptStream(io.BytesIO(chunk_data), block_encrypted,</span><br><span class="line">                                 password)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 返回加密后的数据</span></span><br><span class="line">        <span class="keyword">return</span> block_encrypted.getvalue()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt_file</span>(<span class="params">input_file_path: <span class="built_in">str</span>, passwd</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    加密文件，采用分片读取</span></span><br><span class="line"><span class="string">    :param input_file_path： 需要加密的源文件</span></span><br><span class="line"><span class="string">    :return 加密后的文件路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    encrypt_file_path = input_file_path + <span class="string">&quot;.ept&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file_in, <span class="built_in">open</span>(encrypt_file_path,</span><br><span class="line">                                                      <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file_out:</span><br><span class="line">        pyAesCrypt.encryptStream(file_in, file_out, passwd, <span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">return</span> encrypt_file_path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    src_path = <span class="string">&#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/CloudDrive2Setup-X64-0.5.14.exe&#x27;</span></span><br><span class="line">    password = <span class="string">&#x27;test&#x27;</span></span><br><span class="line">    ept_file_path = encrypt_file(src_path,password)</span><br><span class="line">    <span class="comment"># 读取加密后文件计算md5</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(ept_file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_md5_str = hashlib.md5(f.read()).hexdigest()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;full encrypt&quot;</span>,file_md5_str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分片加密并计算md5</span></span><br><span class="line">    file_md5_str = hashlib.md5()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(src_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> src_file:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 读取一个数据块</span></span><br><span class="line">            chunk = src_file.read(<span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> chunk:</span><br><span class="line">                <span class="comment"># 数据块读取完毕，退出循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 加密数据块</span></span><br><span class="line">            encrypted_chunk = encrypt_chunk(chunk, password)</span><br><span class="line">            file_md5_str.update(encrypted_chunk)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;chunk encrypt&quot;</span>,file_md5_str.hexdigest())</span><br></pre></td></tr></table></figure><p>分片加密后的整个文件，和直接加密的文件肯定是不一样的，即便这两个操作都用了相同大小的分片块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">╰─ python3.10 test.py</span><br><span class="line">full encrypt e994f5c7244fa7d6e9577e2089a029bc</span><br><span class="line">chunk encrypt bdd05213bcafe4f87470c90633d7c2bc</span><br></pre></td></tr></table></figure><p>但如果把分片后的文件写入本地，再计算md5，会发现二者相同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分片加密并计算md5</span></span><br><span class="line">file_md5_str = hashlib.md5()</span><br><span class="line">chunk_encrpy_file = src_path + <span class="string">&#x27;.test&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(chunk_encrpy_file,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> ef:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(src_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> src_file:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 读取一个数据块</span></span><br><span class="line">            chunk = src_file.read(<span class="number">4</span> * <span class="number">1024</span> * <span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> chunk:</span><br><span class="line">                <span class="comment"># 数据块读取完毕，退出循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 加密数据块</span></span><br><span class="line">            encrypted_chunk = encrypt_chunk(chunk, password)</span><br><span class="line">            file_md5_str.update(encrypted_chunk)</span><br><span class="line">            ef.write(encrypted_chunk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;chunk encrypt&quot;</span>,file_md5_str.hexdigest())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;chunk encrypt file:&quot;</span>,file_md5(chunk_encrpy_file))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chunk encrypt 843ef6583227592da36e563c1700d0da</span><br><span class="line">chunk encrypt file: 843ef6583227592da36e563c1700d0da</span><br></pre></td></tr></table></figure><p>也就是说，虽然这种方式和直接加密整个文件，<strong>得到的最终文件是不一样的</strong>，但我们依旧可以通过用相同办法进行加密和解密操作，来进行分片加密上传和分片解密文件（吗？）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raise ValueError(&quot;Bad HMAC (file is corrupted).&quot;)</span><br></pre></td></tr></table></figure><p>无法解密……G！</p><p>要期末了，等放假了再继续研究这个问题</p>]]></content>
    
    
    <summary type="html">Python实现文件分片加密和上传（未实现）</summary>
    
    
    
    <category term="速通Python" scheme="https://blog.musnow.top/categories/%E9%80%9F%E9%80%9APython/"/>
    
    
    <category term="Python" scheme="https://blog.musnow.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Python分片计算文件md5</title>
    <link href="https://blog.musnow.top/posts/1918073551/"/>
    <id>https://blog.musnow.top/posts/1918073551/</id>
    <published>2023-12-17T11:52:00.000Z</published>
    <updated>2023-12-17T11:52:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><blockquote><p>项目地址：<a href="https://github.com/musnows/encrypt2bdy">musnows&#x2F;encrypt2bdy</a></p></blockquote><p>之前自己瞎写了一个上传文件到百度云的python程序，提供了docker并部署在了我自己的nas上，但是我限制容器可用内存大小为1GB后，总是会遇到docker因为<strong>内存爆满</strong>直接被系统kill了的情况。</p><p>现在总算有时间看看到底是啥问题了，其实我已经能想到了，上传文件的部分已经是按分片上传的，理论上不是那个地方的问题，另外一个打开文件的地方只有一处，就是计算文件整体md5的操作。</p><p>因为当时没想明白问题在哪里，我还在项目的README里面写了一个不建议用于备份大文件，因为内存会撑爆的提示（</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 已知错误</span><br><span class="line"></span><br><span class="line">### 1.docker退出码137</span><br><span class="line"></span><br><span class="line">内存不足时，系统将对应docker容器终止。出现此问题，请确认您要备份的文件中不会出现大于您系统内存或docker容器内存限制的文件。</span><br><span class="line"></span><br><span class="line">正如开头所说，本项目适合于备份照片、图片、文档等小文件，并不建议用于备份录像、电影等资源。</span><br></pre></td></tr></table></figure><h2 id="原有代码读取md5的方式"><a href="#原有代码读取md5的方式" class="headerlink" title="原有代码读取md5的方式"></a>原有代码读取md5的方式</h2><p>在程序中，我计算文件整体md5的操作是这样写的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">file_bytes = f.read()</span><br><span class="line"><span class="comment"># 1.计算文件md5，判断文件是否存在于数据中</span></span><br><span class="line">file_name = os.path.basename(file_path)  <span class="comment"># 文件名</span></span><br><span class="line">file_md5_str = hashlib.md5(file_bytes).hexdigest()</span><br><span class="line">_log.debug(<span class="string">f&quot;<span class="subst">&#123;file_path&#125;</span> | <span class="subst">&#123;file_md5_str&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>问题其实很明朗，就是这里的<code>f.read()</code>操作直接将<strong>整个文件加载到内存里面</strong>了！备份的文件稍微大一点，指定要把内存整爆的！</p><h2 id="分片读取md5"><a href="#分片读取md5" class="headerlink" title="分片读取md5"></a>分片读取md5</h2><p>这部分代码应该替换为如下形式，分片读取文件，并将读取的md5给update到<code>hashlib.md5()</code>对象中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">file_md5</span>(<span class="params">file_path: <span class="built_in">str</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;给定一个文件路径，分片加载文件，计算文件的md5&quot;&quot;&quot;</span></span><br><span class="line">    chunk_size = <span class="number">4096</span>  <span class="comment"># 根据需要调整单块的大小</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_md5 = hashlib.md5()</span><br><span class="line">        <span class="keyword">while</span> chunk := f.read(chunk_size):</span><br><span class="line">            file_md5.update(chunk)</span><br><span class="line">    <span class="keyword">return</span> file_md5.hexdigest()</span><br></pre></td></tr></table></figure><p>经过测试，这种办法计算出来的md5和直接<code>f.read()</code>全部计算出的md5完全一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">╰─ python3.10 test.py                 </span><br><span class="line">ca60e24bf4dde156a381c8b9d268faf5</span><br><span class="line">ca60e24bf4dde156a381c8b9d268faf5</span><br></pre></td></tr></table></figure><h1 id="内存占用监控线程"><a href="#内存占用监控线程" class="headerlink" title="内存占用监控线程"></a>内存占用监控线程</h1><p>用下面的代码弄个内存占用的监控线程，通过psutil库实时打印内存占用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">monitor_memory_usage</span>():</span><br><span class="line">    process = psutil.Process(os.getpid())</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        memory_info = process.memory_info()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Memory used: <span class="subst">&#123;memory_info.rss / (<span class="number">1024</span> * <span class="number">1024</span>):<span class="number">.2</span>f&#125;</span> MB&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)  <span class="comment"># 每秒更新一次内存信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动一个线程来监视内存使用情况</span></span><br><span class="line">memory_monitor_thread = threading.Thread(target=monitor_memory_usage)</span><br><span class="line">memory_monitor_thread.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主线程继续执行其他任务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待监视线程结束（如果需要）</span></span><br><span class="line">memory_monitor_thread.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内存占用测试"><a href="#内存占用测试" class="headerlink" title="内存占用测试"></a>内存占用测试</h2><p>将项目中上传到百度云的部分注释掉，休眠10秒替代上传操作，模拟原有代码整体打开一个文件，又分片打开文件上传到百度云的流程。</p><p>用两个450MB左右的视频做测试。程序原有思路是遍历需要备份目录中的所有文件，分片上传到百度云。计算整个文件的MD5的操作其实是用来<strong>本地入库</strong>标定文件是否有修改、是否已经上传的。</p><p>不过后续<strong>加密文件</strong>的操作也是无脑<code>f.read()</code>，这部分也需要修改。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/f053a510be9127854a6a2102cac8589f.png" alt="image.png"></p><p>日志输出如下，可以看到，开始处理test目录之后，程序直接把视频完整加载到了内存里面，占用内存的大小和视频文件大小基本一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">╰─ python3.10 main.py</span><br><span class="line">[23-12-17 20:01:22] INFO:confLoad.py:&lt;module&gt;:68 | [config] loaded config from &#x27;./config/config.yml&#x27;</span><br><span class="line">[23-12-17 20:01:22] INFO:confLoad.py:&lt;module&gt;:89 | [config] loaded config success</span><br><span class="line">[23-12-17 20:01:22] INFO:querySql.py:&lt;module&gt;:72 | [sqlite3] create all tables</span><br><span class="line">[23-12-17 20:01:23] INFO:main.py:&lt;module&gt;:294 | [start] start at 23-12-17 20:01:23</span><br><span class="line">[23-12-17 20:01:23] INFO:encrypt.py:__init__:24 | load key file from &#x27;./config/encrypt.key&#x27;</span><br><span class="line">Memory used: 39.18 MB</span><br><span class="line">[23-12-17 20:01:23] INFO:main.py:upload_task:132 | 上传任务开始：23-12-17 20:01:23</span><br><span class="line">[23-12-17 20:01:23] INFO:main.py:upload_task:139 | 开始处理路径 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test&#x27; | 文件数量 2</span><br><span class="line">[23-12-17 20:01:23] INFO:main.py:upload_task:144 | [0] 开始处理 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《ILLSHOWYOU》KDA阿狸.mp4&#x27;</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">Memory used: 483.52 MB</span><br><span class="line">[23-12-17 20:01:33] INFO:main.py:upload_task:237 | [1] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《ILLSHOWYOU》KDA阿狸.mp4&#x27; 文件哈希：7d5735eba55a638a1290ab36e00530ca</span><br><span class="line">[23-12-17 20:01:33] INFO:main.py:upload_task:144 | [1] 开始处理 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《MORE》KDA.mp4&#x27;</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">Memory used: 517.39 MB</span><br><span class="line">[23-12-17 20:01:44] INFO:main.py:upload_task:237 | [2] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《MORE》KDA.mp4&#x27; 文件哈希：b7b0cd46e3ac7681a3644d9761ad3e71</span><br><span class="line">[23-12-17 20:01:44] INFO:main.py:upload_task:282 | 本次上传完毕，上传：2，跳过：0，错误：0 | 总计：2</span><br><span class="line">[23-12-17 20:01:44] INFO:main.py:upload_task:283 | 本次上传完毕，平均上传速度：43.143mb/s | 总耗时：21.16s</span><br><span class="line">[23-12-17 20:01:44] INFO:main.py:upload_task:286 | 本次上传完毕，下次处理：2023-12-17 21:00:00</span><br></pre></td></tr></table></figure><p>带上加密之后更加离谱，只是第一个文件就直接把内存占用干到了3.2GB，处理第二个文件的时候，也是直接干到了2.4GB，这种程度的内存消耗谁顶得住？更何况百度云API最大支持10GB的文件上传，如果要加载一个10GB的文件还得了啊？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">╰─ python3.10 main.py</span><br><span class="line">[23-12-17 19:43:56] INFO:confLoad.py:&lt;module&gt;:68 | [config] loaded config from &#x27;./config/config.yml&#x27;</span><br><span class="line">[23-12-17 19:43:56] INFO:confLoad.py:&lt;module&gt;:89 | [config] loaded config success</span><br><span class="line">[23-12-17 19:43:56] INFO:querySql.py:&lt;module&gt;:72 | [sqlite3] create all tables</span><br><span class="line">[23-12-17 19:43:56] INFO:main.py:&lt;module&gt;:291 | [start] start at 23-12-17 19:43:56</span><br><span class="line">Memory used: 39.31 MB</span><br><span class="line">[23-12-17 19:43:56] INFO:encrypt.py:__init__:24 | load key file from &#x27;./config/encrypt.key&#x27;</span><br><span class="line">[23-12-17 19:43:56] INFO:main.py:upload_task:132 | 上传任务开始：23-12-17 19:43:56</span><br><span class="line">[23-12-17 19:43:56] INFO:main.py:upload_task:139 | 开始处理路径 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test&#x27; | 文件数量 2</span><br><span class="line">Memory used: 923.04 MB</span><br><span class="line">Memory used: 3267.48 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">Memory used: 483.71 MB</span><br><span class="line">[23-12-17 19:44:08] INFO:main.py:upload_task:234 | [1] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《ILLSHOWYOU》KDA阿狸.mp4&#x27; 文件哈希：7d5735eba55a638a1290ab36e00530ca</span><br><span class="line">Memory used: 990.96 MB</span><br><span class="line">Memory used: 2410.97 MB</span><br><span class="line">Memory used: 1622.17 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">Memory used: 517.57 MB</span><br><span class="line">[23-12-17 19:44:22] INFO:main.py:upload_task:234 | [2] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《MORE》KDA.mp4&#x27; 文件哈希：b7b0cd46e3ac7681a3644d9761ad3e71</span><br><span class="line">[23-12-17 19:44:22] INFO:main.py:upload_task:279 | 本次上传完毕，上传：2，跳过：0，错误：0 | 总计：2</span><br><span class="line">[23-12-17 19:44:22] INFO:main.py:upload_task:280 | 本次上传完毕，平均上传速度：35.371mb/s | 总耗时：25.81s</span><br><span class="line">[23-12-17 19:44:22] INFO:main.py:upload_task:283 | 本次上传完毕，下次处理：2023-12-17 21:00:00</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先将md5计算的函数给修改了，改成分片计算。可以看到，效果显著！内存占用和程序刚开始运行的时候差距只有5MB，这才是正常的内存占用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">╰─ python3.10 main.py</span><br><span class="line">[23-12-17 20:03:20] INFO:confLoad.py:&lt;module&gt;:68 | [config] loaded config from &#x27;./config/config.yml&#x27;</span><br><span class="line">[23-12-17 20:03:20] INFO:confLoad.py:&lt;module&gt;:89 | [config] loaded config success</span><br><span class="line">[23-12-17 20:03:20] INFO:querySql.py:&lt;module&gt;:72 | [sqlite3] create all tables</span><br><span class="line">[23-12-17 20:03:20] INFO:main.py:&lt;module&gt;:294 | [start] start at 23-12-17 20:03:20</span><br><span class="line">Memory used: 39.26 MB</span><br><span class="line">[23-12-17 20:03:20] INFO:encrypt.py:__init__:24 | load key file from &#x27;./config/encrypt.key&#x27;</span><br><span class="line">[23-12-17 20:03:20] INFO:main.py:upload_task:132 | 上传任务开始：23-12-17 20:03:20</span><br><span class="line">[23-12-17 20:03:20] INFO:main.py:upload_task:139 | 开始处理路径 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test&#x27; | 文件数量 2</span><br><span class="line">[23-12-17 20:03:20] INFO:main.py:upload_task:144 | [0] 开始处理 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《ILLSHOWYOU》KDA阿狸.mp4&#x27;</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">[23-12-17 20:03:32] INFO:main.py:upload_task:237 | [1] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《ILLSHOWYOU》KDA阿狸.mp4&#x27; 文件哈希：7d5735eba55a638a1290ab36e00530ca</span><br><span class="line">[23-12-17 20:03:32] INFO:main.py:upload_task:144 | [1] 开始处理 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《MORE》KDA.mp4&#x27;</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">Memory used: 44.08 MB</span><br><span class="line">[23-12-17 20:03:44] INFO:main.py:upload_task:237 | [2] 成功上传 &#x27;/home/mu/code-wsl/py-wsl/encrypt2bdy/test/【超丝滑60帧】4K精装字幕版《MORE》KDA.mp4&#x27; 文件哈希：b7b0cd46e3ac7681a3644d9761ad3e71</span><br><span class="line">[23-12-17 20:03:44] INFO:main.py:upload_task:282 | 本次上传完毕，上传：2，跳过：0，错误：0 | 总计：2</span><br><span class="line">[23-12-17 20:03:44] INFO:main.py:upload_task:283 | 本次上传完毕，平均上传速度：38.689mb/s | 总耗时：23.60s</span><br><span class="line">[23-12-17 20:03:44] INFO:main.py:upload_task:286 | 本次上传完毕，下次处理：2023-12-17 21:00:00</span><br></pre></td></tr></table></figure><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>关于分片计算md5的介绍就这么多，我这个程序里面文件加密的部分也需要修改，不过那就不是本文的范畴了~</p>]]></content>
    
    
    <summary type="html">Python分片计算文件md5</summary>
    
    
    
    <category term="速通Python" scheme="https://blog.musnow.top/categories/%E9%80%9F%E9%80%9APython/"/>
    
    
    <category term="Python" scheme="https://blog.musnow.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【图床】通过Cloudflare的自定义主机名服务代理图床域名</title>
    <link href="https://blog.musnow.top/posts/923376033/"/>
    <id>https://blog.musnow.top/posts/923376033/</id>
    <published>2023-12-16T09:55:00.000Z</published>
    <updated>2023-12-16T11:55:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>我的目的是，图床的域名，国内依旧使用七牛云CDN，境外的请求使用Cloudflare代理。Cloudflare能帮我们拦截一些高危的IP地址，能避免海外肉鸡刷你的图床服务。</p><p>如果你用过Cloudflare，其在SSL&#x2F;TLS模块提供了一个<code>自定义主机名</code>的服务，可以让用户在<strong>不将域名改成Cloudflare的DNS的情况下</strong>，使用Cloudflare的代理功能。</p><p>这个功能是Cloudflare for SAAS的一部分，你应该能在网上找到很多教程。</p><ul><li><a href="https://vircloud.net/exp/cf-cname-new.html">最新 CloudFlare CNAME 接入玩法详细图文教程 - SaaS·永久免费·官方稳定 - VirCloud’s Blog - Learning&amp;Sharing</a></li><li><a href="https://cloud.tencent.com/developer/article/1970429">Cloudflare Saas 接入CNAME流程-腾讯云开发者社区-腾讯云</a></li><li><a href="https://blog.csdn.net/alex_yangchuansheng/article/details/125986096">Cloudflare CNAME 接入满血复活，一分钱不用花！-CSDN博客</a></li></ul><p>简单说来，想使用这个功能，需要如下几个条件</p><ul><li>实际使用的域名：对于我而言是musnow.top</li><li>用于指定回退源的域名：这是第二个域名，名字无所谓，可以直接去<a href="https://nic.eu.org/arf/en/">EU.org</a>申请一个免费的。该域名需要接入Cloudflare的DNS，这里用example.com举例子</li><li>一个云服务器，IP用1.1.1.1举例子</li></ul><p>当你配置好了之后，请求网站的路径变成了如下模样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">配置前：域名musnow.top-&gt;A记录-&gt;云服务器1.1.1.1</span><br><span class="line">配置后：域名musnow.top-&gt;CNAME记录-&gt;回退源域名example.com-&gt;Cloudflare-&gt;云服务器1.1.1.1</span><br></pre></td></tr></table></figure><p>使用<code>自定义主机名</code>功能，可以让Cloudflare在请求你源站的时候，使用原有域名（实际使用的域名），而不是回退源域名。假设你需要回源的云服务器是国内的服务器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">回退源域名example.com没有备案 -&gt; 请求国内服务器会被服务商拦截</span><br><span class="line">配置自定义主机名musnow.top后；</span><br><span class="line">Cloudflare在回源到服务器的时候，采用自定义主机名的域名，即musnow.top；</span><br><span class="line">实际使用的域名musnow.top已备案 -&gt; 请求国内服务器不再被拦截</span><br></pre></td></tr></table></figure><p>整个过程中，回退源域名example.com对于用户是无感知的！我们实现了在原有域名musnow.top的DNS没有接入Cloudflare的情况下，使用了Cloudflare的防护服务。</p><p>目前免费版本的自定义主机名有如下要求</p><ul><li>Cloudflare必须要验证你的支付方式，<strong>不会扣你钱的</strong>（paypal或者银联信用卡，当时为此我还专门去办了个没有额度的学生信用卡，后来发现压根不需要，直接用paypal绑定个银联储蓄卡&#x2F;借记卡就可以了）</li><li>免费版本的回退源只能指定一个，即只能回源到一个IP地址的服务。</li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="回退源"><a href="#回退源" class="headerlink" title="回退源"></a>回退源</h2><p>首先是设置回退源域名的DNS，将其接入Cloudflare。随后是在DNS记录中添加一个A记录，指向你的源站服务器IP。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/141a4967805f6d4a177f84c9557cc47f.png" alt="image.png"></p><p>这里我使用的名称是<code>back.回退源域名</code>，在SSL&#x2F;TLS模块的自定义主机名中开通Cloudflare SAAS服务，并添加回退源域名</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/44ad244bf4ee3f94cddb51153ca3d68f.png" alt="image.png"></p><p>添加回退源域名并验证成功后，就可以点击蓝色<code>添加自定义主机名</code>按钮，添加你需要代理的原始域名了。</p><p>这里我添加了我的图床域名<code>img.musnow.top</code>，首先是在腾讯云的DNS中设置CNAME解析，将境外线路设置为回退源的域名，默认线路还是七牛云CDN的CNAME</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/0257caf29cbdb23c5f99d91474f061f1.png" alt="image.png"></p><p>添加了域名解析之后，你还需要在musnow.top的DNS解析里面添加两个TXT记录来验证回退源，参考Cloudflare给出的txt记录提示就可以。界面类似下图</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/29ec2ba14997ccf0e5c5d64b8ec34d99.png" alt="image.png"></p><p>添加了之后点击刷新，直到自定义主机名的状态显示为<code>有效</code>，即配置成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/06877d872e6521102ec83d0805e0bfc9.png" alt="image.png"></p><p>使用海外服务器测试，配置前，解析到七牛云CDN；配置后，解析到回退源域名，即Cloudflare</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/d900e5b35ddd67f51413e66ab54c822d.png" alt="image.png"></p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>但这里只是配置好了域名解析而已，还需要用反代才能让境外访问图床域名能访问出图片来。</p><h3 id="反代原有七牛云CDN的CNAME不起作用"><a href="#反代原有七牛云CDN的CNAME不起作用" class="headerlink" title="反代原有七牛云CDN的CNAME不起作用"></a>反代原有七牛云CDN的CNAME不起作用</h3><p>但是这个反代要怎么配置呢？因为只是解析线路不同，直接把img.musnow.top反向代理到img.musnow.top肯定不行，<strong>试试反代到七牛云的CNMAE</strong>？</p><p>测试发现，直接通过七牛云CDN里面的CNAME访问这个图片会403（不管是浏览器访问还是使用curl访问）</p><p>而反代过后，curl和wget的结果都变成了526，<strong>无法访问图片</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">╰─ curl https://img.musnow.top/i/2023/05/647563ddab0fb.gif</span><br><span class="line">error code: 526%    </span><br><span class="line"></span><br><span class="line">╰─ wget https://img.musnow.top/i/2023/05/647563ddab0fb.gif</span><br><span class="line">--2023-12-16 18:48:21--  https://img.musnow.top/i/2023/05/647563ddab0fb.gif</span><br><span class="line">Resolving img.musnow.top (img.musnow.top)... 172.67.157.61, 104.21.56.251, 2606:4700:3035::ac43:9d3d, ...</span><br><span class="line">Connecting to img.musnow.top (img.musnow.top)|172.67.157.61|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 526 </span><br><span class="line">2023-12-16 18:48:21 ERROR 526: (no description).</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/b84073fd201689557c89a39ddf058e05.png" alt="image.png"></p><p>即便在反代里面设置了后端请求的域名为<code>img.musnow.top</code>，访问依旧会是526</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/6e0441d8096870ebab9dc0f560005aa4.png" alt="image.png"></p><h3 id="未设置Cloudflare时能成功解析"><a href="#未设置Cloudflare时能成功解析" class="headerlink" title="未设置Cloudflare时能成功解析"></a>未设置Cloudflare时能成功解析</h3><p>作为对比，在<strong>没有配置</strong>解析到Cloudflare的时候，使用wget是能访问出图片来的</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/21bbf4746ffcc740728e4b1df8be6427.png" alt="image.png"></p><p>将wget的这个图片通过sftp下载下来，能看到它是正常的gif，图片访问没有问题。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/b29c2c5cbf14669c34f4037322aeeff6.png" alt="image.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>我能想到的解决办法，是白嫖一下七牛云免费的10GB HTTP流量，新建一个HTTP回源的CDN，绑定到图床的bucket上即可。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/3e6bcea445ba19b11f6c77026ac658de.png" alt="image.png"></p><p>注意，只要你的回源地址是<strong>国内的bucket</strong>，那么域名就必须要备案才能配置CDN。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/657d8838998a7.png"></p><p>因为现在是通过云服务器反代来访问这个CDN，此时反代的proxy设置为http，在添加<code>img.musnow.top</code>的cert证书到反代设置里面，就能实现https。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.musnow.top 反代 img-cloudflare.musnow.top</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/0d22fc941aa251767a6d002cf9c587a0.png" alt="image.png"></p><p>注意，反代中的后端域名也需要设置为新的CDN域名，否则访问会因为域名不匹配而403拒绝访问。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/342efa096d28d3bdbeb9a33454b14aa4.png" alt="image.png"></p><p>随后就是添加img.musnow.top的SSL证书</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/d98f69744def3672429c19ae7879a690.png" alt="image.png"></p><p>测试一下，新建的这个cdn域名可以通过http访问到bucket里面的图片</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/41d0ef29dc9f3da44647b7150b4625f0.png" alt="image.png"></p><p>再测试一下<strong>反代后的域名</strong>，也可以访问到图片了，这里访问的IP地址<code>104.21.56.251</code>也已经是Cloudflare的IP了。配置成功！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/ba1eb6f04811dc5e15e62055fdcb0d4a.png" alt="image.png"></p><p>此时海外访问我的图床，解析变成了如下过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.musnow.top -&gt; CNAME回退源域名 -&gt; cloudflare(https) -&gt; 云服务器反代(https) -&gt; img-cloudflare.musnow.top(http) -&gt; 七牛云bucket</span><br></pre></td></tr></table></figure><p>因为最终访问的CDN是通过HTTP回源bucket的，能白嫖七牛云10G的免费流量！</p><p>当然，如果真有人在海外打你，刷完10G流量也不是不可能……所以在cloudflare里面最好再配置一下单IP访问的频次限制！</p><p>比如下图，我设置访问URL为图床开头<code>/i</code>时进行速率监看，如果单IP访问速率超过60次&#x2F;10秒，那么就会触发cloudflare的速率限制响应，持续10秒。</p><p>因为我的博客已经设置了<strong>懒加载</strong>，所以一次性加载60个图片的场景是不存在的！这种规模的请求肯定是攻击了！再加上我的博客理论上不会有几个海外用户阅读，所以这个配置不会对国内用户产生影响。</p><blockquote><p>如果你使用了代理，请把musnow.top所有子域名加入代理白名单。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/18bbfdad10fe93f2c9b33576946d009c.png" alt="image.png"></p><h3 id="进一步优化"><a href="#进一步优化" class="headerlink" title="进一步优化"></a>进一步优化</h3><p>进一步优化，就是把新创建的这个HTTP CDN里面设置IP白名单，只允许我们设置反代的服务器的那个IP地址访问，这样就保证了其他人不能直接刷我新建的这个HTTP的CDN域名。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/0143324cb410b006374f3ae0e2e5da60.png" alt="image.png"></p><p>在七牛云的CDN配置界面可以看到IP黑白名单，添加服务器IP地址为白名单即可</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/68f0761d01ef17bd69ae3ae390276d43.png" alt="image.png"></p><p>配置后需要过一段时间才会生效，会有个进度条。完成后，再次本地测试一下，发现已经403不允许访问了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/84a0913ebda28e60c4a6dd292e810ce9.png" alt="image.png"></p><p>此时在海外服务器尝试反代域名访问，依旧是OK的，访问的IP地址<code>172.67.157.61</code>也依旧是Cloudflare的IP。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/4440fa31b56a35e7c25acc33e37974a1.png" alt="image.png"></p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>至此，配置完成！</p>]]></content>
    
    
    <summary type="html">通过Cloudflare的SAAS自定义主机名服务代理图床域名</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="图床" scheme="https://blog.musnow.top/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="cloudflare" scheme="https://blog.musnow.top/tags/cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>【WSL】解决&#39;wsl：检测到localhost代理配置，但未镜像到WSL&#39;问题</title>
    <link href="https://blog.musnow.top/posts/3693584344/"/>
    <id>https://blog.musnow.top/posts/3693584344/</id>
    <published>2023-12-16T09:52:00.000Z</published>
    <updated>2023-12-16T09:52:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用wsl2的centos的时候遇到了这个问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl: 检测到 localhost 代理配置，但未镜像到 WSL。</span><br><span class="line">NAT 模式下的 WSL 不支持 localhost 代理。</span><br></pre></td></tr></table></figure><p>出现这个问题的原因是你的宿主机开启了代理，但是代理对wsl并没有起作用。如果你想让wsl也能使用代理，就需要进行配置。如果不需要则可以忽略这个提示。</p><p>参考 <a href="https://www.cnblogs.com/hg479/p/17869109.html">解决”wsl: 检测到 localhost 代理配置，但未镜像到 WSL。NAT 模式下的 WSL 不支持 localhost 代理” - JustInCase - 博客园</a></p><p>在windows的<code>C:\User\&lt;你的用户名&gt;\</code> 下创建一个<code>.wslconfig</code>，内部写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[experimental]</span><br><span class="line">autoMemoryReclaim=gradual  </span><br><span class="line">networkingMode=mirrored</span><br><span class="line">dnsTunneling=true</span><br><span class="line">firewall=true</span><br><span class="line">autoProxy=true</span><br></pre></td></tr></table></figure><p>写完后保存，重启wsl即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><p>再次启动wsl，不再弹出上述提示</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/cf8be920995459ca75ed48adc48b4908.png" alt="image.png"></p><p>注意，每次更换代理都需要重启wsl才会生效（wsl会有右下角消息提示）</p><p>如果你的wsl不需要使用代理，请不要修改此设置！</p>]]></content>
    
    
    <summary type="html">解决&#39;wsl：检测到localhost代理配置，但未镜像到WSL&#39;问题</summary>
    
    
    
    <category term="玩上Linux" scheme="https://blog.musnow.top/categories/%E7%8E%A9%E4%B8%8ALinux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>【nginx】nginx通过配置文件允许uptimerobot的请求</title>
    <link href="https://blog.musnow.top/posts/1547739098/"/>
    <id>https://blog.musnow.top/posts/1547739098/</id>
    <published>2023-12-15T11:49:00.000Z</published>
    <updated>2023-12-15T11:49:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>前几天，我给我的artalk上了IP屏蔽，只放行国内IP，不允许任何国外的IP地址评论。</p><p><a href="https://blog.musnow.top/posts/2029711168/">【Nginx】nginx通过配置文件阻止海外ip访问 | 慕雪的寒舍</a></p><p>然后就发现了一个问题，我使用的uptimerobot这个在线状态监控程序是国外的，它的请求自然也是通过海外IP发起的，此时就会被我服务器的nginx拦截，导致403，uptimerobot认为403也是无法访问，service down了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/9b7cc2eba613b4a9d0fbd06a003e63b8.png" alt="image.png"></p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>之前通过折腾，已经知道了如何使用nginx的配置文件来allow或者deny一系列ip地址，那么uptimerobot的这个问题也很好解决：只要我们知道uptimerobbot的请求来源ip，那么将其写入一个如下类似的nginx配置文件，再在具体的location中include，放行对应ip地址即可。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">allow</span> uptime-robot-ip1;</span><br><span class="line"><span class="attribute">allow</span> uptime-robot-ip2;</span><br></pre></td></tr></table></figure><p>我在uptimerobot的官网找到了它们的ip地址列表：<a href="https://uptimerobot.com/help/locations/">Locations and IPs | UptimeRobot</a></p><p>txt文件也有的：</p><ul><li>ipv4：<a href="https://uptimerobot.com/inc/files/ips/IPv4.txt">uptimerobot.com&#x2F;inc&#x2F;files&#x2F;ips&#x2F;IPv4.txt</a></li><li>ipv4+ipv6：<a href="https://uptimerobot.com/inc/files/ips/IPv4andIPv6.txt">uptimerobot.com&#x2F;inc&#x2F;files&#x2F;ips&#x2F;IPv4andIPv6.txt</a></li></ul><p>用如下脚本来实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">rm -f IPv4.txt black_uptime_`date +%F`.conf</span><br><span class="line">wget https://uptimerobot.com/inc/files/ips/IPv4.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除原有文件每一行的回车符号</span></span><br><span class="line">sed -i &#x27;s/\r//g&#x27; IPv4.txt </span><br><span class="line"></span><br><span class="line">while IFS= read -r line</span><br><span class="line">do</span><br><span class="line">  echo &quot;allow $line;&quot; &gt;&gt; black_uptime_`date +%F`.conf</span><br><span class="line">done &lt; IPv4.txt</span><br><span class="line"></span><br><span class="line">rm -f /etc/nginx/black_uptime.conf &amp;&amp; \</span><br><span class="line">ln -s $PWD/black_uptime_`date +%F`.conf /etc/nginx/black_uptime.conf</span><br></pre></td></tr></table></figure><p>将其写入一个<code>uptimerobot.sh</code>文件，使用如下命令执行它</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh uptimerobot.sh</span><br></pre></td></tr></table></figure><p>这个脚本会在当前目录里面下载uptimerobot的这个IPv4.txt，并以nginx的形式写为allow，最后在<code>/etc/nginx</code>里面创建一个软连接 <code>/etc/nginx/black_uptime.conf</code> 文件，文件内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">allow 18.116.158.121;</span><br><span class="line">allow 18.223.50.16;</span><br><span class="line">allow 54.241.175.147;</span><br></pre></td></tr></table></figure><p>随后我们进入nginx的配置文件，在对应站点配置文件的location里面，include这个配置文件就可以了</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"><span class="comment"># 允许uptimerobot的请求</span></span><br><span class="line"><span class="attribute">include</span> /etc/nginx/black_uptime.conf;</span><br><span class="line"><span class="attribute">deny</span> all; <span class="comment"># 拒绝其他所有请求</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加之后，重启nginx，配置就生效啦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>如下图，uptimerobot已经可以正常请求和监看我的artalk评论页面了</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/80d723cf79673db1f53efb9452baa448.png" alt="image.png"></p><p>使用类似的思路，你可以通过nginx实现让你的站点只允许CDN服务商的IP回源，禁止直接访问。</p>]]></content>
    
    
    <summary type="html">nginx通过配置文件允许uptimerobot的请求，放行uptimerobot的ip</summary>
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="nginx" scheme="https://blog.musnow.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>【docker】部署minio对象存储并用rclone同步</title>
    <link href="https://blog.musnow.top/posts/1950951389/"/>
    <id>https://blog.musnow.top/posts/1950951389/</id>
    <published>2023-12-13T13:29:02.000Z</published>
    <updated>2023-12-13T13:29:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>docker部署minio对象存储并用rclone同步</p><h1 id="1-什么是minio？"><a href="#1-什么是minio？" class="headerlink" title="1.什么是minio？"></a>1.什么是minio？</h1><p>minio是一个开源的对象存储服务器，兼容S3协议。</p><p>官网：<a href="https://min.io/">https://min.io/</a></p><p>官方在开源的基础上也提供云端S3服务，分为个人和企业，有不同的收费标准。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/3dbb54877957d5ede7354a3401dd4cf0.png" alt="5ae0c978272b7ca6732817920adae0f5.png"></p><h2 id="1-1-自建对象存储的好处？"><a href="#1-1-自建对象存储的好处？" class="headerlink" title="1.1 自建对象存储的好处？"></a>1.1 自建对象存储的好处？</h2><p>当然，本文写下来肯定不是让你去买它的对象存储服务的，而是在我们自己的服务器&#x2F;Nas上部署一个minio的docker，来拥有一个我们自己的对象存储服务器！</p><p>对象存储服务器可以用来做图床、静态资源缓存，亦或者是直接当作一个网盘来使用。</p><p>自建的对象存储的好处是所有源文件我们都能亲手管理，且无需为付费的对象存储的奇怪的计价文档感到手足无措，也不需要担心有人恶意刷流把你一套房子给套走。</p><p>缺点就是，自建的稳定性肯定不如已有厂家提供的服务，且自购的服务器&#x2F;Nas上传带宽一般都很低，文件一多，访问速度就很慢了。</p><p>对于我个人而言，自建minio的唯一作用，就是备份七牛云&#x2F;阿里云对象存储中的文件。考虑到2023下半年，各大厂接连boom云服务，国外的谷歌还出现了云盘里面用户的数据回滚到几月前的恶性问题，这可是可能导致用户数据丢失的大问题啊！</p><ul><li><a href="https://www.ithome.com/0/737/538.htm">谷歌公布方案，修复 Drive 云盘文件丢失问题</a></li><li><a href="https://news.zol.com.cn/845/8455073.html">谷歌承认云端硬盘Google Drive存在BUG，3月内用户文件可能丢失</a></li></ul><p>所以，将数据在自己本地留一份总是安心一些。数据安全靠的是备份，不是云服务厂家给你提供的<code>99.99999%</code>可用性的一面之词。</p><p>如果你对数据备份这个话题感兴趣，可以看看我的另外一篇博客：<a href="https://blog.musnow.top/posts/3543423459/?f=minio">谈谈如何进行有效数据备份，3+2+1</a></p><blockquote><p>温馨提醒：如果你想在<strong>云服务器</strong>上安装minio来备份已有S3中的文件的话，最好是使用一个和已有S3<strong>不在同一个地域、非同一个服务商</strong>的云服务器，避免某些服务商云服务器和对象存储一起boom的情况……</p></blockquote><h1 id="2-docker安装minio"><a href="#2-docker安装minio" class="headerlink" title="2.docker安装minio"></a>2.docker安装minio</h1><h2 id="2-1-安装docker"><a href="#2-1-安装docker" class="headerlink" title="2.1 安装docker"></a>2.1 安装docker</h2><p>docker安装的教程详见我的另外一篇博客</p><p><a href="https://blog.musnow.top/posts/2069190154/?f=minio">【Docker】deepin&#x2F;centos安装docker | 慕雪的寒舍</a></p><h2 id="2-2-安装minio"><a href="#2-2-安装minio" class="headerlink" title="2.2 安装minio"></a>2.2 安装minio</h2><p>这里推荐使用由VMware维护的minio docker版本<code>bitnami/minio</code>，更新很频繁。</p><p><a href="https://hub.docker.com/r/bitnami/minio">hub.docker.com&#x2F;r&#x2F;bitnami&#x2F;minio</a></p><p>创建容器的命令如下，非常简单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name minio \</span><br><span class="line">-p 9000:9000 \</span><br><span class="line">-p 9001:9001 \</span><br><span class="line">--restart=always \</span><br><span class="line">-v /minio/data:/bitnami/minio/data \</span><br><span class="line">-e MINIO_ROOT_USER=<span class="string">&quot;minio_root&quot;</span> \</span><br><span class="line">-e MINIO_ROOT_PASSWORD=<span class="string">&quot;minio_123456&quot;</span> \</span><br><span class="line">-e TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span> \</span><br><span class="line">bitnami/minio:latest</span><br></pre></td></tr></table></figure><p>该创建容器操作基于如下hash的docker镜像（更新于2023-12-12），创建容器的命令后续可能会有变动，请参考docker-hub中的官方文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitnami/minio  latest    552af9bd3d6d   2 days ago     212MB</span><br></pre></td></tr></table></figure><p>对这个docker命令进行解释</p><ul><li><code>-it -d</code>，it提供交互能力，d代表后台运行</li><li><code>--restart=always</code>，始终重启docker（docker服务重启后，镜像会自动启动）</li><li><code>-p 9000:9000</code>，将docker内的9000端口（右侧）映射给宿主机（左侧）的9000端口，端口9001的映射同理。<ul><li>容器内9000端口是minio的api端口（用于S3协议操作）</li><li>容器内9001端口是minio的web管理界面端口</li><li>根据你的需要，修改<strong>冒号左侧</strong>的宿主机端口即可。</li></ul></li><li><code>-v /minio/data:/bitnami/minio/data</code>，将docker内<code>/bitnami/minio/data</code>路径映射给主机<code>/minio/data</code>路径，主机上的路径（左侧）请自行修改；这个路径是bucket和minio配置文件的存储路径。</li><li>两个<code>-e</code>设置的是环境变量，分别设置的是minio管理员的账户和管理员的密码。请注意，在这里配置了管理员用户名和密码后，<strong>进入minio管理系统的密码无法被修改</strong>。如果你的minio服务需要暴露在公网上，请一定要设置一个<strong>高强度</strong>的密码！</li><li><code>-e TZ=&#39;Asia/Shanghai&#39;</code> 设置时区为东八区（后续定时备份需要有正确时区）</li><li>最后的<code>bitnami/minio:latest</code>代表我们需要创建<code>bitnami/minio</code>这个docker镜像的latest版本，如果本地没有这个镜像，则会自动去docker-hub拉取。</li><li>如果你卡在了pull镜像的步骤，请自行百度如何<a href="https://blog.musnow.top/posts/2069190154/?f=minio">替换docker的镜像源</a>。</li></ul><p>如下是我在一个没有安装过minio的云服务上测试的结果，成功安装并启动minio</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root:~/docker]# docker run -it -d --name minio \</span><br><span class="line">&gt; -p 19000:9000 \</span><br><span class="line">&gt; -p 19001:9001 \</span><br><span class="line">&gt; --restart=always \</span><br><span class="line">&gt; -v /root/docker/minio:/bitnami/minio/data \</span><br><span class="line">&gt; -e MINIO_ROOT_USER=&quot;minio_root&quot; \</span><br><span class="line">&gt; -e MINIO_ROOT_PASSWORD=&quot;minio_123456&quot; \</span><br><span class="line">&gt; bitnami/minio:latest</span><br><span class="line">Unable to find image &#x27;bitnami/minio:latest&#x27; locally</span><br><span class="line">latest: Pulling from bitnami/minio</span><br><span class="line">ef5975039511: Pull complete </span><br><span class="line">Digest: sha256:3bb81d101dea57a5382a2d01eda6991e75ce69669d2d49c4646d82721b7c258e</span><br><span class="line">Status: Downloaded newer image for bitnami/minio:latest</span><br><span class="line">afefbb9514de0f4a1c02b7f4212b1e05eee5ef342ed4ce27e03de10071914060</span><br></pre></td></tr></table></figure><p>容器正常启动，处于Running状态，STATUS正常！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID   IMAGE                                  COMMAND                  CREATED         STATUS         PORTS                                                                                      NAMES</span><br><span class="line">afefbb9514de   bitnami/minio:latest                   &quot;/opt/bitnami/script…&quot;   3 minutes ago   Up 3 minutes   0.0.0.0:19000-&gt;9000/tcp, :::19000-&gt;9000/tcp, 0.0.0.0:19001-&gt;9001/tcp, :::19001-&gt;9001/tcp   minio</span><br></pre></td></tr></table></figure><p>这样还不够，请在后续创建了bucket并上传测试文件后，查看本地映射的路径中是否有对应文件夹和文件，<strong>避免路径映射失败</strong>！（如果路径没有成功映射到本地，那么你当前创建的minio被删除之后，文件就很难找回来了）</p><blockquote><p>顺带一提，在我这边测试发现，如果你错误使用浏览器访问了9000这个api端口，会被自动重定向到9001 web管理页面端口（前提是映射的宿主机端口和docker内端口一致）</p></blockquote><h2 id="2-3-web管理"><a href="#2-3-web管理" class="headerlink" title="2.3 web管理"></a>2.3 web管理</h2><p>使用 <code>http://IP:端口</code> 打开minio的9001端口对应的宿主机端口，访问minio的web管理页面。输入刚刚创建容器时，在环境变量里面配置的用户名和密码进行登录，即可进入控制台。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/8ab832241e5ea9a14713e75fb56c2df0.png" alt="image.png"></p><p>minio的界面比较简单，基本要做的操作只有两个，创建bucket存储桶，和accesskey用于api调用。</p><blockquote><p>更高阶的配置项和操作我没有尝试过，请自行参考minio的文档或者其他教程。</p></blockquote><h3 id="2-3-1-创建bucket"><a href="#2-3-1-创建bucket" class="headerlink" title="2.3.1 创建bucket"></a>2.3.1 创建bucket</h3><p>第一个界面就是大大的Object Browser，在这里我们可以创建存储桶</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/df27f17b80655b3107ef12018f180712.png" alt="image.png"></p><p>点击创建bucket，会进入如下配置项，除了bucket的名字，还有三个选项</p><ul><li>Versioning：版本控制，开启后，该bucket将处于多版本模式下，文件会保留修改的历史记录。</li><li>Object Locking：避免文件被删除，需要支持保留和合法保留（这两个啥意思我不明白），该选项只能在bucket创建时打开。</li><li>Quota：限制容器中文件大小（总容量）</li></ul><p>对于我的备份需求来说，这三个额外选项都不需要，直接创建就行了</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/c7b5efc573e9e3691f0237a6e9d7357a.png" alt="image.png"></p><p>创建之后，在bucket页面可以看到刚刚创建的test存储桶，这里会统计存储容量和文件数量</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/01016c16a27570ded8d93a7aa4781a1f.png" alt="image-20231213232421462"></p><h3 id="2-3-2-创建accessKey"><a href="#2-3-2-创建accessKey" class="headerlink" title="2.3.2 创建accessKey"></a>2.3.2 创建accessKey</h3><p>accessKey是用于操作api的token凭证。创建完毕后，他只会显示一次，后续将不会显示出来。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/7413b4978a8916f3ba34043afa034e7f.png" alt="image.png"></p><p>如果你不想创建太多个密钥，那就把这个密钥的文件下载下来，免得到时候不知道是什么了。点击右下角的import文件就可以下载，会下载一个<code>json</code>文件，内部包含密钥和其他一些相关信息</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/c06b9cd5866f9b3d9a2f37e0ded15404.png" alt="image.png"></p><p>因为我这只是做个测试，一会就会把这个minio的docker删除，所以展示密钥无所谓。如果你是在生产环境下使用，请一定不要暴露你的密钥给任何人。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://公网IP:19001/api/v1/service-account-credentials&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;accessKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aXpBxrUceV30Id6gOouG&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;secretKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dIWl9IFL05UtaI08PZfPXE66zPGu2zWrGFfSTaUm&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;api&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s3v4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>密钥创建完毕，就能在列表看到它。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/d70adb75c6ec74a362a065e9afc88092.png" alt="image.png"></p><h1 id="3-rclone备份"><a href="#3-rclone备份" class="headerlink" title="3.rclone备份"></a>3.rclone备份</h1><p>rclone是一个全平台的命令行工具，其可以用于多种云端&#x2F;本地存储之间的数据拷贝、同步、加密同步等功能。详见rclone官网：<a href="https://rclone.org/">rclone.org</a></p><p>因为我的目标就是我的七牛云bucket里面的图床文件备份到本地，rclone绝对是不二之选。</p><h2 id="3-1-进入docker容器内终端"><a href="#3-1-进入docker容器内终端" class="headerlink" title="3.1 进入docker容器内终端"></a>3.1 进入docker容器内终端</h2><p>你可以选择在<strong>宿主机</strong>上安装rclone，也可以选择直接在minio的容器内安装rclone。</p><p>前排提醒：部分nas品牌的系统（比如群晖）已经提供了<strong>执行定时脚本</strong>的功能，这种情况下直接使用系统提供的定时任务来执行<code>rclone sync</code>即可，<strong>即直接在nas里面安装rclone和使用定时任务</strong>，不要在minio的docker里面安装rclone。</p><p>如你选择了在宿主机上安装rclone，则可以直接<strong>跳过本3.1步骤</strong>，阅读3.2及后续步骤</p><h3 id="docker特权模式"><a href="#docker特权模式" class="headerlink" title="docker特权模式"></a>docker特权模式</h3><p>注意，如果在minio的容器内安装rclone，那么minio容器被删除后，<strong>rclone和它的配置文件自然也不在了</strong>。</p><p><strong>且如果需要用minio的容器进行crontab定时任务</strong>，则必须用<strong>特权模式</strong>安装minio的docker，在minio的docker创建命令里面加如下这条，设置特权模式（不需要定时任务可以不设置）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--privileged</span><br></pre></td></tr></table></figure><p>在绿联nas的docker管理界面，创建docker的时候给定所有权限，也是一样的效果。（因为我不太了解这里具体每个权限的作用，干脆全给了）</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/accf78ec16b7e73aec583e3672291e37.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/e96098feea2769aa014db319b74bff58.png" alt="image.png"></p><h3 id="ssh连接宿主设备"><a href="#ssh连接宿主设备" class="headerlink" title="ssh连接宿主设备"></a>ssh连接宿主设备</h3><p>不同nas机型进入ssh的方式不太一样，请参考你的nas或设备品牌搜索对应类型教程。</p><p><strong>连接到宿主设备的ssh后</strong>，参考：<a href="https://www.cnblogs.com/langgeligelang/p/13628821.html">以指定用户启动和进入docker容器 - langyong - 博客园</a> 一文，使用如下docker命令进入minio的容器终端中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it -u 用户名 容器名 /bin/bash</span><br><span class="line"><span class="comment"># 示例如下</span></span><br><span class="line">docker <span class="built_in">exec</span> -it -u root minio /bin/bash</span><br></pre></td></tr></table></figure><p>如果你使用的是绿联、极空间这类不太方便进入ssh的nas，可以在nas的docker管理页里面操作，如下图所示，选择<code>/bin/bash</code>后点击链接即可进入容器内终端。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/20231214091932.png" alt="image.png"></p><h2 id="3-2-下载安装rclone"><a href="#3-2-下载安装rclone" class="headerlink" title="3.2 下载安装rclone"></a>3.2 下载安装rclone</h2><p>进入终端后，默认所在路径是docker容器的工作路径<code>/opt/bitnami/minio-client</code>。</p><p>为了避免影响容器运行，我们不要在工作路径里面做操作，请使用如下命令，创建一个新的rclone文件夹，进入root用户的家目录进行操作。</p><p>如果你是在宿主机上操作，也是一样的道理，为rclone单独创建一个文件夹，来存放它的软件包、配置文件、执行日志。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/rclone</span><br><span class="line">cd /root/rclone</span><br></pre></td></tr></table></figure><blockquote><p>如果是docker内操作，你可以在创建minio容器的时候，就把<code>/root/rclone</code>路径给映射到宿主机上，方便后续查看rclone备份的日志。</p></blockquote><p>下载安装rclone的命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip</span><br><span class="line">unzip rclone-current-linux-amd64.zip</span><br><span class="line"><span class="built_in">cd</span> rclone-*-linux-amd64</span><br><span class="line"> </span><br><span class="line">sudo <span class="built_in">cp</span> rclone /usr/bin/</span><br><span class="line">sudo <span class="built_in">chown</span> root:root /usr/bin/rclone</span><br><span class="line">sudo <span class="built_in">chmod</span> 755 /usr/bin/rclone</span><br></pre></td></tr></table></figure><p>minio的docker内没有unzip命令，需要安装一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y unzip</span><br></pre></td></tr></table></figure><p>minio的docker内也没有sudo，将上述安装命令中的sudo去掉就可以了。</p><p>完成安装命令后，执行一下<code>rclone</code>，出现rclone命令的使用提示，那就是安装成功了！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone/rclone-v1.65.0-linux-amd64# rclone</span><br><span class="line">Usage:</span><br><span class="line">  rclone [flags]</span><br><span class="line">  rclone [command]</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h2 id="3-3-rclone对象存储配置"><a href="#3-3-rclone对象存储配置" class="headerlink" title="3.3 rclone对象存储配置"></a>3.3 rclone对象存储配置</h2><p>rclone的官网上有不同云端存储协议和不同S3服务商的配置教程，跟着官方的来就可以了。</p><p>执行<code>rclone config</code>命令，工具会自动在<code>/.config/rclone/rclone.conf</code>下创建一个config文件，你可以根据<a href="https://rclone.org/">官方的向导</a>，在此处添加新的remote;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone/rclone-v1.65.0-linux-amd64# rclone config</span><br><span class="line">2023/12/14 04:38:44 NOTICE: Config file &quot;/.config/rclone/rclone.conf&quot; not found - using defaults</span><br><span class="line">No remotes found, make a new one?</span><br><span class="line">n) New remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">n/s/q&gt; q</span><br></pre></td></tr></table></figure><p>下面给出minio和七牛云的配置文件，你可以直接修改这个配置文件中的内容为你的配置，然后写入<code>/.config/rclone/rclone.conf</code>即可。</p><ul><li><a href="https://rclone.org/s3/#minio">rclone.org&#x2F;s3&#x2F;#minio</a></li><li><a href="https://rclone.org/s3/#qiniu">rclone.org&#x2F;s3&#x2F;#qiniu</a></li></ul><p>其中minio的region在minio的控制台里面可以修改，如果你没有修改过，默认使用的是<code>us-east-1</code>。因为rclone是直接在minio的docker里面执行的，所以endpoint只需要写成<code>127.0.0.1</code>和minio的api端口9000就可以了。</p><p>如果你的minio在公网或者其他设备上，请修改对应的IP地址和端口。</p><p>七牛云的region和endpoint在<strong>七牛云bucket页面</strong>找到<strong>S3域名</strong>就可以看到。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/64d88c8052b653bb69edbed3d75fdca5.png" alt="image.png"></p><blockquote><p>请注意，七牛云&#x2F;阿里云这类存储服务商，如果你有多个bucket，且他们的地域不一样，则需要新增对应地域的配置项。通过修改<code>[]</code>里面的<strong>配置名</strong>进行区分。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[minio]</span><br><span class="line">type = s3</span><br><span class="line">provider = Minio</span><br><span class="line">env_auth = false</span><br><span class="line">access_key_id = 控制台获取的key_id</span><br><span class="line">secret_access_key = 控制台获取的secret_key</span><br><span class="line">region = us-east-1</span><br><span class="line">endpoint = http://127.0.0.1:9000</span><br><span class="line">location_constraint =</span><br><span class="line">server_side_encryption =</span><br><span class="line"></span><br><span class="line">[qiniu]</span><br><span class="line">type = s3</span><br><span class="line">provider = Qiniu</span><br><span class="line">access_key_id = 七牛云控制台获取key_id</span><br><span class="line">secret_access_key = 七牛云控制台获取secret_key</span><br><span class="line">region = cn-east-1</span><br><span class="line">endpoint = s3-cn-east-1.qiniucs.com</span><br><span class="line">location_constraint = cn-east-1</span><br><span class="line">acl = private</span><br><span class="line">storage_class = STANDARD</span><br></pre></td></tr></table></figure><p>执行如下命令，安装nano编辑器，然后使用nano编辑器打开rclone配置文件进行编辑。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y nano</span><br><span class="line">nano /.config/rclone/rclone.conf</span><br></pre></td></tr></table></figure><p>linux下的粘贴命令是<code>CTRL+SHIFT+V</code>或<code>CTRL+INSERT</code>，你可以在本地修改了配置文件后，通过nano编辑器，直接粘贴到docker容器内。编辑完毕后，使用<code>CTRL+X</code>退出nano的编辑模式，并按Y确认保存，随后直接回车，即完成编辑。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/f82a30d9349cb55e60bc621dc2264be3.png" alt="image.png"></p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/283ab6851395ecf722d287aa06a8de0b.png" alt="image.png"></p><p>这个配置文件建议备份一个，免得每次都得重新弄</p><h2 id="3-4-rclone基本命令"><a href="#3-4-rclone基本命令" class="headerlink" title="3.4 rclone基本命令"></a>3.4 rclone基本命令</h2><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><p>拷贝命令如下，配置名称是在config文件中<code>[]</code>里面的文字，桶名就是你的S3服务里面的对象存储桶，还可以在桶名后面用<code>/</code>来追加指定上传的路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rclone copy 本地文件路径 配置名称:桶名</span><br><span class="line">rclone copy 本地文件路径 配置名称:桶名/桶内目录</span><br></pre></td></tr></table></figure><p>这里我在docker内创建了一个<code>test.txt</code>文件，尝试将其拷贝到minio里面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch test.txt</span><br><span class="line">rclone copy ./test.txt minio:1panel-bak</span><br></pre></td></tr></table></figure><p>命令没有错误输出，即拷贝成功！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# touch test.txt</span><br><span class="line">root@878a0dd03ec4:/root/rclone# rclone copy ./test.txt minio:1panel-bak</span><br><span class="line">root@878a0dd03ec4:/root/rclone# </span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/bcd922882c21dbe6aa3e8aeb67fe08fa.png" alt="image.png"></p><p>尝试在拷贝的时候指定远端仓库内的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone copy ./test.txt minio:qiniu-muxue-sy/test</span><br></pre></td></tr></table></figure><p>成功指定，文件被上传到了test文件夹里面。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/20231214133906.png" alt="image.png"></p><h3 id="sync"><a href="#sync" class="headerlink" title="sync"></a>sync</h3><p>备份命令如下，可以在任意目的地（本地-远端，远端-本地，远端-远端）里面执行这个命令，左侧是源路径，右侧是目标。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rclone sync 本地源文件路径  目的地配置名称:桶名 </span><br><span class="line">rclone sync 源配置名称:桶名 目的地配置名称:桶名</span><br><span class="line">rclone sync 源配置名称:桶名 目的地的本地文件路径</span><br></pre></td></tr></table></figure><p>rclone sync有两个常用的选项，刚开始使用的时候，建议带上 <code>--dry-run</code> 命令来确认自己的配置没有问题</p><ul><li><code>-P</code> 显示详细同步进度条</li><li><code>--dry-run</code> 用作命令测试，不会真正的执行同步</li></ul><p>指定<code>-P</code>命令后的进度输出如下，可以看到实时网速和文件数量&#x2F;大小。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/20231214133932.png" alt="image.png"></p><p>目前发现的问题是minio显示的文件总量和数据存储量会<strong>有一定滞后</strong>，刚开始我还以为是rclone没有跑完呢，sync完毕过了几分钟minio里面才刷出正确的文件数量来。</p><h2 id="3-5-cron定时同步"><a href="#3-5-cron定时同步" class="headerlink" title="3.5 cron定时同步"></a>3.5 cron定时同步</h2><p>前排提醒：部分nas品牌的系统（比如群晖）已经提供了<strong>执行定时脚本</strong>的功能，这种情况下直接使用系统提供的定时任务来执行<code>rclone sync</code>即可，无序安装其他服务。<strong>即直接在nas里面安装rclone和使用定时任务</strong>，不要在minio的docker里面安装rclone和cron。</p><ul><li>群晖官网关于定时任务的说明： <a href="https://kb.synology.cn/zh-cn/DSM/help/DSM/AdminCenter/system_taskscheduler?version=6">https://kb.synology.cn/zh-cn/DSM/help/DSM/AdminCenter/system_taskscheduler?version=6</a></li><li>绿联nas的环境中已有crontab，但我没有试过使用它。考虑到绿联这个nas的系统还是一点都不稳定，还是别动它的系统里面的东西了，不知道绿联官方有没有可能把定时任务加到控制页里面去吧（我估计是没戏，这个系统的限制太多了）。</li></ul><p>如果你使用的是群晖、威联通等提供了执行定时任务的功能的nas，请在nas内配置好rclone后，自行百度执行定时任务相关教程。</p><h3 id="minio-docker内安装cron服务"><a href="#minio-docker内安装cron服务" class="headerlink" title="minio docker内安装cron服务"></a>minio docker内安装cron服务</h3><p>下面介绍在minio的docker内cron服务的安装和使用。</p><p>在minio的docker里面直接安装crontab服务和nano文本编辑器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y cron nano</span><br></pre></td></tr></table></figure><p>但这还不够，cron服务的运行还依赖于其他组件，需要一并安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y rsyslog  postfix</span><br><span class="line">service rsyslog start</span><br></pre></td></tr></table></figure><p>安装postfix的时候会提示让你选择配置文件，键入1选择无配置就够了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/934acd2b8c197729473f9d2a917740ca.png" alt="image.png"></p><p>postfix还需要额外配置，否则可能会遇到如下错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dec 16 01:07:01 878a0dd03ec4 postfix/sendmail[1859]: fatal: open /etc/postfix/main.cf: No such file or directory</span><br><span class="line">Dec 16 01:12:02 878a0dd03ec4 postfix/postdrop[1912]: warning: unable to look up public/pickup: No such file or directory</span><br></pre></td></tr></table></figure><p>配置命令如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/postfix/main.cf</span><br><span class="line">mkfifo /var/spool/postfix/public/pickup</span><br></pre></td></tr></table></figure><h3 id="crontab配置定时任务测试"><a href="#crontab配置定时任务测试" class="headerlink" title="crontab配置定时任务测试"></a>crontab配置定时任务测试</h3><p>安装完毕后，使用<code>crontab -e</code>看看是否能打开crontab的配置编辑页面，如果可以打开如下配置界面，则代表cron安装成功。</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/20231214111457.png" alt="image.png"></p><p>这个配置文件需要写入的格式如下，一行对应一个配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">五位cron表达式 需要执行的命令</span><br></pre></td></tr></table></figure><p>cron表达式可以用在线工具<a href="https://tool.lu/crontab/">crontab执行时间计算 - 在线工具</a></p><p>先用如下的配置来检测cron服务是否能正常运行，以及是否能成功输出日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * echo &quot;$(date) This is a test command&quot; &gt;&gt; /root/rclone/log.txt</span><br></pre></td></tr></table></figure><p>该配置的含义是每分钟执行一次echo命令，打印当前时间和对应内容到<code>/root/rclone/log.txt</code>文件中。</p><p>修改了配置文件后，启动cron服务，测试我们的配置是否有效，cron服务是否能正常运行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service cron start </span><br></pre></td></tr></table></figure><p>该命令执行效果如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# service cron start</span><br><span class="line">Starting periodic command scheduler: cron.</span><br></pre></td></tr></table></figure><p>等待数分钟，看看cron命令是否成功输出内容到指定文件里面了，有内容则代表配置和运行成功！默认情况下，<strong>使用cron执行的echo命令内的date</strong>采用了<strong>UTC时间</strong>的输出，但这并不影响我们的使用，给小时加8就能得到东八区的时间了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# cat /root/rclone/log.txt</span><br><span class="line">Sat Dec 16 01:18:01 UTC 2023 This is a test command</span><br><span class="line">Sat Dec 16 01:18:01 UTC 2023 This is a test command</span><br><span class="line">Sat Dec 16 01:19:01 UTC 2023 This is a test command</span><br><span class="line">Sat Dec 16 01:19:01 UTC 2023 This is a test command</span><br></pre></td></tr></table></figure><p>在syslog里面也能看到cron的服务日志，该服务日志组件依赖于先前安装的rsyslog</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/syslog</span><br></pre></td></tr></table></figure><p>文件<code>/var/log/syslog</code>内部cron执行日志如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Dec 16 01:25:01 878a0dd03ec4 CRON[2059]: (root) CMD (echo &quot;$(date) This is a test command&quot; &gt;&gt; /root/rclone/log.txt)</span><br><span class="line">Dec 16 01:25:01 878a0dd03ec4 CRON[2058]: (root) CMD (echo &quot;$(date) This is a test command&quot; &gt;&gt; /root/rclone/log.txt)</span><br></pre></td></tr></table></figure><blockquote><p>请注意，默认情况下，minio的docker是<strong>没有时区配置</strong>的，请一定要在创建docker容器的时候，使用<strong>TZ环境变量</strong>来设置时区，否则crontab不会执行！<br>原因也很简单，cron表达式有一个指定时间，比如每周一执行、几点执行，如果没有配置时区，cron没有办法明确你的cron表达式到底应该什么时候跑，干脆就不跑了！</p></blockquote><p>如果你的docker已经创建，不想重新创建，可以通过修改配置文件来设置时区，修改后重启docker容器即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/environment</span><br><span class="line"># 在文件末尾写入如下内容</span><br><span class="line">TZ=&#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><h3 id="crontab配置定时rclone-sync"><a href="#crontab配置定时rclone-sync" class="headerlink" title="crontab配置定时rclone sync"></a>crontab配置定时rclone sync</h3><p>确认cron服务可用，就可以来配置rclone sync的自动执行命令了。</p><p>对于rclone的sync备份而言，写入如下内容即可；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 3 * * 1,5 rclone sync qiniu-e1:muxue-sy  minio:qiniu-muxue-sy &gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</span><br><span class="line">0 2 * * 1,5 rclone sync qiniu-e2:muxue-img  minio:qiniu-muxue-img &gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>解析如下</p><ul><li><code>0 3 * * 1,5</code> 代表每周一和周五的凌晨3点执行一次</li><li><code>0 2 * * 1,5</code> 代表每周一和周五的凌晨2点执行一次</li><li><code>&gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</code> 代表将rclone命令的输出结果写入到 <code>/root/rclone/rclone.log</code> 文件中。</li></ul><p>因为我对备份的频次要求不高，一周备份两次就够了。</p><p>写入完毕后，<code>CTRL+X</code>关闭nano编辑模式，按Y和回车即完成nano编辑。编辑完成后会有如下输出。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# crontab -e</span><br><span class="line">no crontab for root - using an empty one</span><br><span class="line">crontab: installing new crontab</span><br></pre></td></tr></table></figure><p>后续crontab执行的命令结果都会输入到<code>/root/rclone/rclone.log</code>日志文件中。rclone命令只有在出现ERROR的时候才会输出。如果这个文件里面什么都么有，就代表运行没有出错！</p><p>配置好了之后，使用如下命令重新启动cron服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service cron restart</span><br></pre></td></tr></table></figure><p>用如下命令查看cron服务状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# service cron status</span><br><span class="line">cron is running.</span><br></pre></td></tr></table></figure><h3 id="优化cron日志"><a href="#优化cron日志" class="headerlink" title="优化cron日志"></a>优化cron日志</h3><p>为了让日志更加合理，可以在执行rclone命令之前，打印当前时间，这样可以知道crontab到底有没有正常执行定时任务。</p><p>打印时间的基本命令如下，echo命令会将当前时间和相关的说明信息写入<code>test.txt</code>文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(date) This is a test command&quot; &gt;&gt; test.txt</span><br></pre></td></tr></table></figure><p>执行效果如下，打印了时间和对应的日志信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# echo &quot;$(date) This is a test command&quot; &gt;&gt; test.txt</span><br><span class="line">root@878a0dd03ec4:/root/rclone# cat test.txt</span><br><span class="line">Sat Dec 16 09:36:06 CST 2023 This is a test command</span><br></pre></td></tr></table></figure><blockquote><p>再次提醒，minio的docker内<strong>必须指定TZ环境变量</strong>，否则crontab不会执行！且date命令时区和东八区不符。</p></blockquote><p>echo打印的时候，可以临时指定TZ环境变量来打印不同时区的date</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;$(TZ=&#x27;Asia/Shanghai&#x27; date) 这是东八区&quot; &gt;&gt; test.txt</span><br></pre></td></tr></table></figure><p>执行效果如下，因为我的docker内已经设置了TZ环境变量为东八区，所以不加这个TZ也是打印的东八区的时间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# echo &quot;$(TZ=&#x27;Asia/Shanghai&#x27; date) 这是东八区&quot; &gt;&gt; test.txt</span><br><span class="line">root@878a0dd03ec4:/root/rclone# cat test.txt</span><br><span class="line">Sat Dec 16 09:36:06 CST 2023 This is a test command</span><br><span class="line">Sat Dec 16 09:37:39 CST 2023 这是东八区</span><br></pre></td></tr></table></figure><p>但是需要注意的是，使用cron命令执行的时候，它依旧会打印UTC时间，前文已经提到过了。</p><p>将原本的crontab命令改成如下形式（<code>crontab -e</code>编辑配置文件），使用<code>&amp;&amp;</code>来链接echo和rclone命令，这样在每次执行rclone之前都会有一个当前时间和sync的是什么内容的的输出，能让我们知道crontab是否正常执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 3 * * 1,5 echo &quot;$(TZ=&#x27;Asia/Shanghai&#x27; date) sync muxue-sy&quot; &gt;&gt; /root/rclone/rclone.log &amp;&amp; rclone sync qiniu-e1:muxue-sy  minio:qiniu-muxue-sy &gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">0 2 * * 1,5 echo &quot;$(TZ=&#x27;Asia/Shanghai&#x27; date) sync muxue-img&quot; &gt;&gt; /root/rclone/rclone.log &amp;&amp; rclone sync qiniu-e2:muxue-img  minio:qiniu-muxue-img &gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>你可以修改cron表达式为<code>*/1 * * * *</code>，让crontab表达式立即执行一次，确认一下输出是否正确，以及rclone命令是否正常执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * echo &quot;$(date) sync muxue-img&quot; &gt;&gt; /root/rclone/rclone.log &amp;&amp; rclone sync qiniu-e2:muxue-img  minio:qiniu-muxue-img &gt;&gt; /root/rclone/rclone.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>我的测试结果如下，rclone sync成功被cron执行（这个ERROR是因为我的bucket里面有个无效的文件，正常情况下应该不会有ERROR）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sat Dec 16 01:45:01 UTC 2023 sync muxue-img</span><br><span class="line">2023/12/16 01:45:02 ERROR : : Entry doesn&#x27;t belong in directory &quot;&quot; (same as directory) - ignoring</span><br></pre></td></tr></table></figure><p>测试结束后，<strong>记得还原配置项</strong>。</p><p>每次修改配置文件后，都需要重启cron服务！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@878a0dd03ec4:/root/rclone# service cron restart</span><br><span class="line">Restarting periodic command scheduler: cronStopping periodic command scheduler: cron.</span><br><span class="line">Starting periodic command scheduler: cron.</span><br></pre></td></tr></table></figure><h3 id="centos8安装cron"><a href="#centos8安装cron" class="headerlink" title="centos8安装cron"></a>centos8安装cron</h3><p>在centos8中安装cron的命令不同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vixie-cron crontabs</span><br></pre></td></tr></table></figure><p>启动crontab的相关命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start crond <span class="comment"># 启动cron服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> crond <span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl status crond <span class="comment"># cron服务状态</span></span><br><span class="line">systemctl restart crond <span class="comment"># 重启cron</span></span><br></pre></td></tr></table></figure><p>cron配置的其余操作和上文相同，都是用<code>crontab -e</code>编辑配置文件。</p><p>因为我这个是一个云服务器的完整centos系统，所以也不需要安装<code>rsyslog postfix</code> 这两个包。在docker里面安装的时候才需要；</p><h1 id="The-end"><a href="#The-end" class="headerlink" title="The end"></a>The end</h1><p>本文的教程结束，有问题欢迎在评论区提出。</p><p>因为rclone可以在windows主机上运行，所以你也可以直接用<code>rclone sync</code>命令把S3里面的文件下载到主机上来备份，这样就不需要用云服务器或者nas了。</p><p>数据无价，多一份备份，多一份安心！</p>]]></content>
    
    
    <summary type="html">docker部署minio对象存储并用rclone同步</summary>
    
    
    
    <category term="docker真好玩" scheme="https://blog.musnow.top/categories/docker%E7%9C%9F%E5%A5%BD%E7%8E%A9/"/>
    
    
    <category term="docker" scheme="https://blog.musnow.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>【MySQL】wsl的ubuntu中无法systemctl启动mariadb（已解决）</title>
    <link href="https://blog.musnow.top/posts/1382619221/"/>
    <id>https://blog.musnow.top/posts/1382619221/</id>
    <published>2023-12-13T09:52:14.000Z</published>
    <updated>2023-12-13T09:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是GPT的答案，实测有效。</p><p>如果您在启动 MariaDB 时遇到 <code>&quot;Failed to start mariadb.service: Interactive authentication required&quot; </code>错误，这是因为在 Ubuntu 22.04 上默认启用了 systemd 的用户会话限制，需要进行一些额外的步骤来解决该问题。以下是解决方法：</p><p>打开终端，并使用以下命令编辑 MariaDB 的服务文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /lib/systemd/system/mariadb.service</span><br></pre></td></tr></table></figure><p>在文件的 <code>[Service]</code> 部分中添加一个新的行，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">ExecStartPre=/bin/sh -c <span class="string">&#x27;touch /etc/mysql/mariadb.conf.d/.interactive&#x27;</span></span><br></pre></td></tr></table></figure><p>确保在 <code>[Service]</code> 部分内的其他行之后添加此行。</p><p>保存并关闭文件（在 Nano 编辑器中按 Ctrl+X，然后按 Y 确认保存）。</p><p>运行以下命令重新加载 systemd 配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>现在，您可以启动 MariaDB 服务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mariadb</span><br></pre></td></tr></table></figure><p>这次启动应该没有出现 “Interactive authentication required” 错误。</p><p>最后，您可以设置 MariaDB 在系统启动时自动启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable mariadb</span><br></pre></td></tr></table></figure><p>现在，您应该能够成功启动和运行 MariaDB 服务了。如果您仍然遇到问题，请确保按照上述步骤操作，并仔细检查所做的更改是否正确。</p>]]></content>
    
    
    <summary type="html">wsl的ubuntu中无法systemctl启动mariadb问题解决</summary>
    
    
    
    <category term="学习sql" scheme="https://blog.musnow.top/categories/%E5%AD%A6%E4%B9%A0sql/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="mysql" scheme="https://blog.musnow.top/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>【Linux】wsl虚拟机时间和实际时间不符合</title>
    <link href="https://blog.musnow.top/posts/1339169411/"/>
    <id>https://blog.musnow.top/posts/1339169411/</id>
    <published>2023-12-12T01:30:55.000Z</published>
    <updated>2023-12-12T01:31:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>偶然遇到了这个问题，触发原因是电脑在开启wsl的情况下进入了<code>休眠</code>模式，且在无网络情况下几天不使用。</p><p>然后开启wsl，发现<code>git log</code>显示最新commit的提交时间是明天，给我吓一跳，然后才发现原来是wsl里面的时间不对。</p><p>Linux下看时间的命令是<code>date</code>，本文写于12月12日，但wsl中的时间是12月10日，肯定是不对。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; date</span><br><span class="line">Tue Dec 10 09:51:29 AM CST 2023</span><br></pre></td></tr></table></figure><p>在wsl内部使用如下命令进行时间同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hwclock -s</span><br></pre></td></tr></table></figure><p>执行后，在windows的命令行里面执行如下命令，重启wsl子系统。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><p>再在wsl里面执行<code>date</code>命令，时间正确。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; date</span><br><span class="line">Tue Dec 12 09:53:21 AM CST 2023</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">wsl虚拟机时间和实际时间不符合</summary>
    
    
    
    <category term="玩上Linux" scheme="https://blog.musnow.top/categories/%E7%8E%A9%E4%B8%8ALinux/"/>
    
    
    <category term="Linux" scheme="https://blog.musnow.top/tags/Linux/"/>
    
    <category term="虚拟机" scheme="https://blog.musnow.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="wsl" scheme="https://blog.musnow.top/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>【Hexo】在中英文之间添加空格</title>
    <link href="https://blog.musnow.top/posts/3894841472/"/>
    <id>https://blog.musnow.top/posts/3894841472/</id>
    <published>2023-12-10T07:32:14.000Z</published>
    <updated>2023-12-10T07:32:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明和插件安装"><a href="#说明和插件安装" class="headerlink" title="说明和插件安装"></a>说明和插件安装</h1><p>如题，中英文添加空格是比较规范的写法， 但是我个人实在是懒，每次都要这么弄太累了。想找找hexo有没有对应的插件，还是有的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-auto-spacing --save</span><br></pre></td></tr></table></figure><p>安装了之后，在hexo的<code>_config.yml</code>里面添加配置项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># hexo 中英文之间自动加空格</span><br><span class="line"># npm install hexo-filter-auto-spacing --save</span><br><span class="line">auto_spacing:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>随后<code>hexo s</code>就能看到插件启用后的结果了</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/bc23322af55db5caac57603bdc3df125.png" alt="image-20231210153203131"></p><p>请注意，该插件仓库 <a href="https://github.com/hexojs/hexo-filter-auto-spacing">https://github.com/hexojs/hexo-filter-auto-spacing</a> 已经被设置为公共归档，且最后一次代码提交是<strong>2022年6月</strong>。</p><p>2023年12月10日实测该插件依旧有用，但不保证hexo更新后依旧有效。慕雪使用的hexo和主题版本如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo 6.2.0</span><br><span class="line">hexo-butterfly 4.9.0</span><br></pre></td></tr></table></figure><p>暂时没有搜到其他仍在更新的插件。</p><h1 id="buffterfly主题自带配置"><a href="#buffterfly主题自带配置" class="headerlink" title="buffterfly主题自带配置"></a>buffterfly主题自带配置</h1><p>感谢评论区老哥的提醒，buffterfly主题其实<strong>自带</strong>了这个配置项 <a href="https://butterfly.js.org/posts/ceeb73f/#Pangu">https://butterfly.js.org/posts/ceeb73f/#Pangu</a></p><p>使用如下命令<strong>卸载</strong>上方提到的插件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-filter-auto-spacing --save</span><br></pre></td></tr></table></figure><p>在hexo-butterfly主题中<code>pangu</code>配置项就是中英文之间添加空格的配置。</p><p>其中site是对全站生效，post是只对文章生效（对其他页面不生效）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/vinta/pangu.js</span></span><br><span class="line"><span class="comment"># Insert a space between Chinese character and English character (中英文之間添加空格)</span></span><br><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br></pre></td></tr></table></figure><p>将enable改成true即可启用，效果也很好，不仅中英文之间会添加空格，数字和中文之间也添加了空格。完美啦！</p><p><img src= "/img/loading.gif" data-lazy-src="https://img.musnow.top/i/2023/12/1ffcfb9e601a003fd9e246a31d833e15.png" alt="image-20231210213203331"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;说明和插件安装&quot;&gt;&lt;a href=&quot;#说明和插件安装&quot; class=&quot;headerlink&quot; title=&quot;说明和插件安装&quot;&gt;&lt;/a&gt;说明和插件安装&lt;/h1&gt;&lt;p&gt;如题，中英文添加空格是比较规范的写法， 但是我个人实在是懒，每次都要这么弄太累了。想找找hexo有没</summary>
      
    
    
    
    <category term="差生文具多" scheme="https://blog.musnow.top/categories/%E5%B7%AE%E7%94%9F%E6%96%87%E5%85%B7%E5%A4%9A/"/>
    
    
    <category term="Hexo" scheme="https://blog.musnow.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
